<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="14:TestPrintfAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f37e93255d0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f37e94ffa60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f37e94ffa60"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f37e9333590"/></to>
    </wire>
    <wire loc="15:TestPrintfAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f37e9319770"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f37e92ea640"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f37e92ea640"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f37e92e1020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="16:TestPrintfAppC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f37e930da40"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f37e913cc90"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f37e913cc90"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f37e92d2080"/></to>
    </wire>
    <wire loc="17:TestPrintfAppC.nc">
      <from><interface-ref name="primeModule" scoped="" ref="0x7f37e930f750"/></from>
      <to><interface-ref name="primeModule" scoped="" ref="0x7f37e892c880"/></to>
    </wire>
    <wire loc="8:primeC.nc">
      <from><interface-ref name="primeModule" scoped="" ref="0x7f37e892c880"/></from>
      <to><interface-ref name="primeModule" scoped="" ref="0x7f37e8918e20"/></to>
    </wire>
    <wire loc="18:TestPrintfAppC.nc">
      <from><interface-ref name="RSAint" scoped="" ref="0x7f37e92fc6f0"/></from>
      <to><interface-ref name="RSAinterface" scoped="" ref="0x7f37e89297b0"/></to>
    </wire>
    <wire loc="7:RSAC.nc">
      <from><interface-ref name="RSAinterface" scoped="" ref="0x7f37e89297b0"/></from>
      <to><interface-ref name="RSAinterface" scoped="" ref="0x7f37e88f8160"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f37e9500020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f37e8928020"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f37e9500020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f37e81b7ca0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f37e9500020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f37e901d550"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f37e9500020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f37e8955a60"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f37e9500020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f37e92dce50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f37e9333c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f37e99ec3a0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f37e99ec3a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f37e9597140"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f37e93326c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f37e94fb020"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f37e94fb020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f37e94f8280"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f37e9332dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f37e9500020"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f37e94f8990"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f37e94f9910"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f37e94f9910"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f37e94d9850"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f37e94f70c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f37e94f1450"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f37e94f77a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f37e8ac1dd0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f37e94d9850"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f37e94c0c00"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f37e94d0de0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f37e94bf350"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f37e984a080"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f37e94be680"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f37e947b5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f37e93b86d0"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f37e9469020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f37e93b1b30"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f37e9472700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f37e93be160"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f37e9456a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f37e9397cb0"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f37e9479aa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f37e93bf480"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f37e945c020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f37e9397020"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f37e9453a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f37e9380cb0"/></to>
    </wire>
    <wire loc="154:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f37e94635a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f37e9391220"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f37e947cb10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f37e940e9d0"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f37e9458a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f37e93a62f0"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f37e945e3e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f37e93a7610"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f37e94685a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f37e93a8220"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f37e9471700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f37e93b67a0"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f37e9455a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f37e938f2f0"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f37e9467be0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f37e93a16d0"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f37e9478890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f37e93b7ac0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f37e948c060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f37e941c540"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f37e945cda0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f37e9390610"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f37e94820c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f37e93c0020"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f37e9462a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f37e93896d0"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f37e946c690"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f37e93c6a90"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f37e9457a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f37e939f7a0"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f37e9474cf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f37e93c7de0"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f37e945d1f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f37e93a0ac0"/></to>
    </wire>
    <wire loc="163:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f37e9454a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f37e93877a0"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f37e94640c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f37e9399b30"/></to>
    </wire>
    <wire loc="120:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f37e946b6c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f37e94143e0"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f37e945bb80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f37e9388ac0"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f37e9459a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f37e93afcb0"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f37e945aa20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f37e9380020"/></to>
    </wire>
    <wire loc="127:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f37e945f570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f37e93af020"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f37e9460020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f37e9382b30"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f37e941a450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f37e941bd80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f37e941aaa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f37e937aa90"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f37e9418120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f37e9377260"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f37e93c5930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f37e941c540"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f37e93c3020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f37e941bd80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f37e93bd020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f37e941c540"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f37e93bb7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f37e941bd80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f37e93b5610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f37e941c540"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f37e93b4c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f37e941bd80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f37e94122f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f37e9413bf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f37e9412940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f37e93779f0"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f37e9411020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f37e9376240"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f37e93aeb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f37e94143e0"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f37e93ab2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f37e9413bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f37e93a5160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f37e94143e0"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f37e93a47a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f37e9413bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f37e939e610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f37e94143e0"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f37e939dc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f37e9413bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f37e9396b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f37e94143e0"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f37e93942f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f37e9413bf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f37e938e160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f37e94143e0"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f37e938d7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f37e9413bf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f37e9386610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f37e94143e0"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f37e9385c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f37e9413bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f37e937fb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f37e94143e0"/></to>
    </wire>
    <wire loc="172:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f37e937d2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f37e9413bf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f37e9a5b1d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f37e9595040"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f37e95925d0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f37e99832d0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f37e92e1020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f37e92d9c30"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f37e92d9c30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f37e9164690"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f37e92dce50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f37e91df760"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f37e92d2080"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f37e9155cf0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f37e91df760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f37e86d5e60"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f37e915ec30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f37e91b3cf0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f37e91ad1d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f37e91de020"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f37e91de020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f37e86cda90"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f37e9149020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f37e9258b50"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f37e9258b50"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f37e923a5f0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f37e86d5e60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f37e86b8660"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f37e86c6210"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f37e86d36e0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f37e86d36e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f37e86b6020"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f37e86cae10"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f37e9258b50"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f37e86b3190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f37e86bd340"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f37e86bd340"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f37e92b2990"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f37e86b2770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f37e86bca80"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f37e86bca80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f37e92b0720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f37e86aca80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f37e86bbda0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f37e86bbda0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f37e92ad1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f37e92b2990"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f37e946b6c0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f37e92b0720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f37e9469020"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f37e92ad1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f37e945f570"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f37e92b2990"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f37e946b6c0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f37e92b0720"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f37e9467be0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f37e92ad1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f37e945d1f0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f37e92b2990"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f37e946b6c0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f37e92b0720"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f37e94640c0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f37e92ad1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f37e945c020"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f37e92b2990"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f37e946b6c0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f37e92b0720"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f37e94635a0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f37e92ad1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f37e945cda0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f37e92b2990"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f37e946b6c0"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f37e92b0720"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f37e9462a50"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f37e92ad1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f37e945bb80"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f37e92b2990"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f37e946b6c0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f37e92b0720"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f37e9460020"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f37e92ad1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f37e945aa20"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f37e921d950"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f37e9256b70"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f37e9256b70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f37e924fb80"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f37e9241c50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f37e946b6c0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f37e91a9490"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f37e9a5b1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f37e9159e80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f37e9a5b1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f37e894fa20"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f37e897ebf0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f37e894c440"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f37e8984540"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f37e8984540"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f37e8629390"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f37e894b0c0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f37e8983270"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f37e8983270"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f37e908d7e0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f37e892ebe0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f37e894f1a0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f37e908d7e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f37e9023d60"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f37e8983e80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f37e908c470"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f37e908c470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f37e90246c0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f37e89815d0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f37e9088b20"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f37e9088b20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f37e9021a10"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f37e8628060"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f37e90eacf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f37e8628c70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f37e908c470"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f37e90eacf0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f37e909e580"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f37e909d400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f37e90933f0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f37e90933f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f37e9079300"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f37e909c060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f37e908c470"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f37e909b720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f37e908d7e0"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f37e909a480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f37e9a5b1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f37e909ac60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f37e9a5b1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f37e908f3b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f37e901dba0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f37e901dba0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f37e900bc40"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f37e908d1d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f37e90240d0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f37e901d550"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f37e900b5f0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f37e90172b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f37e907a330"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f37e90204a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f37e9019790"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f37e901f120"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f37e901ac60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f37e9012970"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7f37e89991e0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f37e9019790"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f37e8ed9830"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f37e901ac60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f37e8ed9110"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7f37e8ed8760"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f37e9012970"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f37e9003430"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f37e90172b0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f37e8ed6590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f37e90172b0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f37e8ecdcc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f37e90172b0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f37e8ed70e0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f37e9008080"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7f37e8ed79d0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7f37e9004a40"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7f37e8ff9410"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7f37e8ed1b70"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f37e8ff5530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f37e8ea7080"/></to>
    </wire>
    <wire loc="17:/opt/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f37e8ea7080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f37e89b07a0"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f37e8ec2d20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f37e8ea7890"/></to>
    </wire>
    <wire loc="13:/opt/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f37e8ea7890"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f37e89b40c0"/></to>
    </wire>
    <wire loc="332:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7f37e8fa3e40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f37e9a5b1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7f37e8fdbd50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f37e9a5b1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7f37e8fa6400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f37e9a5b1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f37e8f9f0c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f37e9a5b1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7f37e8ed5c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f37e9a5b1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7f37e8ed4480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f37e9a5b1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:/opt/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f37e8ea2d50"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f37e89b3060"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f37e89b3060"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f37e8e3c850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f37e89b40c0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f37e8e3f1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:/opt/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f37e89b3800"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f37e89ad080"/></to>
    </wire>
    <wire loc="19:/opt/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f37e89ad6f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f37e89b6c00"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f37e89b6c00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f37e8e458d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f37e89b58f0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f37e856e970"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f37e856e970"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f37e8a7c2c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f37e8e3aa40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f37e89b3800"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f37e8568a50"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f37e8e40450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f37e8e3b690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f37e8570cc0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f37e8570cc0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f37e8a7d020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f37e8e37020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f37e85682b0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f37e85682b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f37e8a7f1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f37e8e40450"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f37e8db5dc0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f37e8e3c850"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f37e8db3890"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f37e8e3f1d0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f37e8db46d0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f37e8e458d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f37e8db5020"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f37e8db1020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f37e8e3aa40"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f37e8db2230"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f37e8e3b690"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f37e8dac290"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f37e8e37020"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f37e8db1690"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f37e8d9f8b0"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f37e8d9f8b0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f37e8d95020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f37e8dacc90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f37e8af69a0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f37e8af69a0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f37e9256b70"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f37e8da9dd0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f37e8af5c10"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f37e8af5c10"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f37e8ae9620"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f37e8d993b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f37e8d91dc0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f37e8d9f080"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f37e8d98710"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f37e8d84860"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7f37e8c953f0"/></to>
    </wire>
    <wire loc="539:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f37e8c953f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8baa100"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f37e8d8d800"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7f37e8c933f0"/></to>
    </wire>
    <wire loc="540:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f37e8c933f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8ba5d10"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f37e8d81800"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7f37e8c913f0"/></to>
    </wire>
    <wire loc="541:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f37e8c913f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8ba0740"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f37e8d7f800"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7f37e8c8d3f0"/></to>
    </wire>
    <wire loc="543:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f37e8c8d3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8bda740"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f37e8d7d800"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7f37e8c8f3f0"/></to>
    </wire>
    <wire loc="542:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f37e8c8f3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8bdfd10"/></to>
    </wire>
    <wire loc="442:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f37e8d02cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8c35d10"/></to>
    </wire>
    <wire loc="455:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f37e8ceecc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8c05740"/></to>
    </wire>
    <wire loc="531:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f37e8ca33d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8bf7740"/></to>
    </wire>
    <wire loc="551:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f37e8c7e3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8b6cd10"/></to>
    </wire>
    <wire loc="532:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f37e8ca13f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8bf1100"/></to>
    </wire>
    <wire loc="460:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f37e8ce9cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8bfcd10"/></to>
    </wire>
    <wire loc="473:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f37e8cd4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8bcb740"/></to>
    </wire>
    <wire loc="486:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f37e8cc0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8b9b100"/></to>
    </wire>
    <wire loc="497:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f37e8caf020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8b75740"/></to>
    </wire>
    <wire loc="535:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f37e8c9b3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8be8740"/></to>
    </wire>
    <wire loc="545:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f37e8c8a3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8b89d10"/></to>
    </wire>
    <wire loc="557:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f37e8c763f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8b67740"/></to>
    </wire>
    <wire loc="445:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f37e8cfccc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8c27d10"/></to>
    </wire>
    <wire loc="536:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f37e8c993f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8be3100"/></to>
    </wire>
    <wire loc="450:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f37e8cf8cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8c1d100"/></to>
    </wire>
    <wire loc="463:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f37e8ce3cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8bedd10"/></to>
    </wire>
    <wire loc="476:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f37e8cce020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8bbd740"/></to>
    </wire>
    <wire loc="489:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f37e8cb9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8b8d100"/></to>
    </wire>
    <wire loc="500:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f37e8ca9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8b67740"/></to>
    </wire>
    <wire loc="440:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f37e8d06cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8c3f740"/></to>
    </wire>
    <wire loc="453:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f37e8cf2cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8c0e260"/></to>
    </wire>
    <wire loc="466:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f37e8cddcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8bdfd10"/></to>
    </wire>
    <wire loc="530:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f37e8ca53f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8bf7740"/></to>
    </wire>
    <wire loc="548:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f37e8c843e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8b7ad10"/></to>
    </wire>
    <wire loc="555:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f37e8c783e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8b67740"/></to>
    </wire>
    <wire loc="471:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f37e8cd9cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8bd53f0"/></to>
    </wire>
    <wire loc="484:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f37e8cc4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8ba5d10"/></to>
    </wire>
    <wire loc="495:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f37e8cb3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8b7e100"/></to>
    </wire>
    <wire loc="549:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f37e8c823e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8b75740"/></to>
    </wire>
    <wire loc="538:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f37e8c973e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8baf740"/></to>
    </wire>
    <wire loc="443:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f37e8d00cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8c30740"/></to>
    </wire>
    <wire loc="456:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f37e8ceccc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8c00100"/></to>
    </wire>
    <wire loc="493:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f37e8cb7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8b89d10"/></to>
    </wire>
    <wire loc="461:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f37e8ce7cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8bf7740"/></to>
    </wire>
    <wire loc="474:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f37e8cd2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8bc6100"/></to>
    </wire>
    <wire loc="487:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f37e8cbe020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8b97d10"/></to>
    </wire>
    <wire loc="498:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f37e8cad020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8b70100"/></to>
    </wire>
    <wire loc="438:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f37e8d0ce00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8c483f0"/></to>
    </wire>
    <wire loc="451:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f37e8cf6cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8c19d10"/></to>
    </wire>
    <wire loc="464:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f37e8ce1cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8be8740"/></to>
    </wire>
    <wire loc="477:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f37e8ccc020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8bb8100"/></to>
    </wire>
    <wire loc="546:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f37e8c883e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8b83740"/></to>
    </wire>
    <wire loc="552:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f37e8c7c3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8b67740"/></to>
    </wire>
    <wire loc="482:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f37e8cc8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8baf740"/></to>
    </wire>
    <wire loc="441:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f37e8d04cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8c39100"/></to>
    </wire>
    <wire loc="454:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f37e8cf0cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8c0ad10"/></to>
    </wire>
    <wire loc="467:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f37e8cdbcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8bda740"/></to>
    </wire>
    <wire loc="550:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f37e8c803e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8b70100"/></to>
    </wire>
    <wire loc="472:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f37e8cd6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8bd1e00"/></to>
    </wire>
    <wire loc="485:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f37e8cc2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8ba0740"/></to>
    </wire>
    <wire loc="496:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f37e8cb1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8b7ad10"/></to>
    </wire>
    <wire loc="444:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f37e8cfecc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8c2b100"/></to>
    </wire>
    <wire loc="494:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f37e8cb5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8b83740"/></to>
    </wire>
    <wire loc="449:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f37e8cfacc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8c22740"/></to>
    </wire>
    <wire loc="462:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f37e8ce5cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8bf1100"/></to>
    </wire>
    <wire loc="475:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f37e8cd0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8bc2d10"/></to>
    </wire>
    <wire loc="488:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f37e8cbb020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8b92740"/></to>
    </wire>
    <wire loc="499:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f37e8cab020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8b6cd10"/></to>
    </wire>
    <wire loc="439:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f37e8d08cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8c44e00"/></to>
    </wire>
    <wire loc="452:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f37e8cf4cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8c13740"/></to>
    </wire>
    <wire loc="465:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f37e8cdfcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8be3100"/></to>
    </wire>
    <wire loc="478:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f37e8cca020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8bb4d10"/></to>
    </wire>
    <wire loc="534:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f37e8c9d3d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8bedd10"/></to>
    </wire>
    <wire loc="547:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f37e8c863e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8b7e100"/></to>
    </wire>
    <wire loc="533:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f37e8c9f3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8bedd10"/></to>
    </wire>
    <wire loc="483:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f37e8cc6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8baa100"/></to>
    </wire>
    <wire loc="554:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f37e8c7a3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8b6cd10"/></to>
    </wire>
    <wire loc="558:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f37e8c743f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8b8d100"/></to>
    </wire>
    <wire loc="529:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f37e8ca7060"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f37e8bfcd10"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f37e8ac1dd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f37e8ae9020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f37e8ae1b50"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f37e8aec5a0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f37e8aec5a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f37e8abe9e0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f37e8ae7e30"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f37e8ac3830"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f37e8ac3830"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f37e8aa8520"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f37e8adf020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f37e8ac2b50"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f37e8ac2b50"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f37e8aa3060"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f37e8aadc50"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f37e8cc0020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f37e8aa77a0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f37e8cbe020"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f37e8aa22f0"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f37e8cbb020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f37e856d8d0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f37e8d9f8b0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f37e856d130"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f37e8a7cad0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f37e8a7cad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f37e89e9400"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f37e8a7b8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f37e8568a50"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f37e8a7c2c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f37e89ea020"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f37e89ea020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f37e81b33a0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f37e8a7f1d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f37e8a79b60"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f37e8a7d020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f37e89eb210"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f37e89eb210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f37e81b4540"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f37e89e9400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f37e81b28b0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f37e8a77c20"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f37e8d993b0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f37e89e9cd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f37e8a7b8a0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f37e8a64a90"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f37e89e9400"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f37e89ce9d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f37e89ea7a0"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f37e89ea7a0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f37e81b3b20"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f37e89e3b20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f37e8d9f080"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f37e81b1210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f37e89e9cd0"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f37e81b19d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f37e81b6330"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f37e81aec50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f37e9a5b1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f37e817e3a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f37e89e3b20"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f37e817eb00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f37e89ce400"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f37e817d0f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f37e89ce9d0"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f37e817dd00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f37e89cd720"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-main/tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x7f37e8945500"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f37e9a5b1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f37e8928680"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f37e892ebe0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-main/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f37e8922380"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f37e94ffa60"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-main/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f37e8922aa0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f37e908f3b0"/></to>
    </wire>
    <wire loc="12:RSAC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f37e88f5160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f37e8864970"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f37e8864970"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f37e92e1020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="13:RSAC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f37e88f0610"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f37e913cc90"/></to>
    </wire>
    <wire loc="14:RSAC.nc">
      <from><interface-ref name="primeModule" scoped="" ref="0x7f37e88f6320"/></from>
      <to><interface-ref name="primeModule" scoped="" ref="0x7f37e892c880"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/opt/tinyos-main/tos/system/MainC.nc">
      <documentation loc="45:/opt/tinyos-main/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/opt/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/opt/tinyos-main/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/opt/tinyos-main/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/opt/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/opt/tinyos-main/tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/opt/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="TestPrintfC" loc="4:TestPrintfC.nc">
      <module/>
    </component>
    <component qname="TestPrintfAppC.TimerMilliC" loc="44(TestPrintfAppC.TimerMilliC):/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/opt/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f37e9326640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f37e93269b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/opt/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f37e9326640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f37e93269b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f37e9502e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f37e9326200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f37e9326640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f37e93269b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f37e9502e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f37e9326200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f37e9326640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f37e93269b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f37e9502e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f37e9326200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f37e9502e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f37e9326200"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f37e9502e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f37e9326200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/tinyos-main/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f37e9517210"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/opt/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/opt/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/opt/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:/opt/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:/opt/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):/opt/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):/opt/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:/opt/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/opt/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):/opt/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
          </type-int>
          <value cst="I:250">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:/opt/tinyos-main/tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:/opt/tinyos-main/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/opt/tinyos-main/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/opt/tinyos-main/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/opt/tinyos-main/tos/lib/printf/PutcharP.nc">
      <documentation loc="64:/opt/tinyos-main/tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/opt/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/lib/serial/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="primeC" loc="1:primeC.nc">
      <configuration/>
    </component>
    <component qname="primeP" loc="2:primeP.nc">
      <module/>
    </component>
    <component qname="RSAC" loc="1:RSAC.nc">
      <configuration/>
    </component>
    <component qname="RSAP" loc="9:RSAP.nc">
      <module/>
    </component>
    <component qname="RSAC.TimerMilliC" loc="44(RSAC.TimerMilliC):/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="39:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f37e944e890" loc="40:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f37e944ec30" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f37e944d020" loc="42:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f37e944d3a0" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f37e944d720" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f37e944da90" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f37e944de20" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f37e944b200" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f37e944b5d0" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f37e99f1090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f37e9410e70" loc="40:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f37e940d270" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f37e928d3b0" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f37e928d3b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/opt/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f37e9250c80" loc="42:/opt/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f37e9250c80"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f37e923cb70" loc="55:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f37e923cb70"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f37e9239370" loc="56:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f37e9239370"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f37e9239760" loc="57:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f37e9239760"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f37e9238020" loc="58:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f37e9238020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f37e92383f0" loc="59:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f37e9238bf0" loc="60:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f37e9238bf0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f37e9216020" loc="52:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f37e9216020"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f37e92167f0" loc="53:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f37e92167f0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f37e9216be0" loc="54:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f37e9216be0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f37e9215400" loc="55:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f37e9215400"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f37e92157d0" loc="56:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f37e91d74f0" loc="46:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f37e91d74f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f37e91a7d80" loc="46:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f37e91a7d80"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f37e91a3110" loc="46:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f37e91521f0" loc="46:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f37e91521f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f37e9135680" loc="47:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f37e9517210"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f37e91060d0" loc="43:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f37e9517210"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f37e90e30d0" loc="45:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f37e8c6e890" loc="40:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f37e8c6ec40" loc="41:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f37e8c6d020" loc="42:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f37e8c6d3d0" loc="43:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f37e8c6d740" loc="44:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/opt/tinyos-main/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f37e8a5f5b0" loc="89:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f37e8a525b0" loc="42:/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/tinyos-main/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f37e8a39d90" loc="52:/opt/tinyos-main/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/opt/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/opt/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/opt/tinyos-main/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7f37e897fbb0" loc="42:/opt/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7f37e897fbb0"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7f37e897c020" loc="42:/opt/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f37e9500020" loc="58:/opt/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f37e9500020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f37e95003a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f37e94ffa60" loc="57:/opt/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f37e94ffa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f37e94ffde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f37e94fb020" loc="42:/opt/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f37e94fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f37e94fb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f37e94f70c0" loc="6:/opt/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f37e94f70c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f37e94f7440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f37e94f8280" loc="4:/opt/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f37e94f8280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f37e94f8600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f37e94f8990" loc="5:/opt/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f37e94f8990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f37e94f8d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f37e94f77a0" loc="7:/opt/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f37e94f77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f37e94f7b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f37e94f1450" loc="2:/opt/tinyos-main/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f37e94f1450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f37e94f17d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f37e94f9910" loc="39:/opt/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f37e94f9910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f37e94f9c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f37e94d0de0" loc="40:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f37e94d0de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f37e94d5c70"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f37e94d5310"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f37e94d54a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f37e94d5630"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f37e94d5180"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f37e94d57c0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f37e94d5950"/>
        <function-ref name="initClocks" scoped="" ref="0x7f37e94d5ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f37e94d9850" loc="39:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f37e94d9850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f37e94d9bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f37e94bf350" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f37e94bf350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f37e94be340"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f37e94bf860"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f37e94bf9f0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f37e94bfb80"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f37e94bf6d0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f37e94bfd10"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f37e94be020"/>
        <function-ref name="initClocks" scoped="" ref="0x7f37e94be1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f37e94be680" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f37e94be680"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f37e94bea00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f37e94c0c00" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f37e94c0c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f37e94bf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f37e947b5a0" loc="42:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f37e947b5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f37e947b920"/>
        <function-ref name="getControl" scoped="" ref="0x7f37e947bab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f37e947bc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f37e947bdd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f37e947a020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f37e947a1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f37e947a340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f37e947a4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f37e947a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f37e9469020" loc="51:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f37e9469020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f37e94693a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f37e9469530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f37e94696c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f37e9469850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f37e94699e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f37e9469b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f37e9469d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f37e9468020"/>
        <function-ref name="setControl" scoped="" ref="0x7f37e94681b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f37e9472700" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f37e9472700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e9472a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f37e9472c10"/>
        <function-ref name="captured" scoped="" ref="0x7f37e9472da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e9471020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e94711b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f37e9471340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f37e9456a20" loc="68:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f37e9456a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e9456da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f37e9455020"/>
        <function-ref name="captured" scoped="" ref="0x7f37e94551b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e9455340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e94554d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f37e9455660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f37e9479aa0" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f37e9479aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e9479e20"/>
        <function-ref name="setEvent" scoped="" ref="0x7f37e9478020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f37e94781b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f37e9478340"/>
        <function-ref name="fired" scoped="" ref="0x7f37e94784d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f37e945c020" loc="61:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f37e945c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e945c3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f37e945c530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f37e945c6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f37e945c850"/>
        <function-ref name="fired" scoped="" ref="0x7f37e945c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f37e9453a20" loc="71:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f37e9453a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e9453da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f37e9452020"/>
        <function-ref name="captured" scoped="" ref="0x7f37e94521b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e9452340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e94524d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f37e9452660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f37e94635a0" loc="55:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f37e94635a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f37e9463920"/>
        <function-ref name="getControl" scoped="" ref="0x7f37e9463ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f37e9463c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f37e9463dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f37e9462020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f37e94621b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f37e9462340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f37e94624d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f37e9462660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f37e947cb10" loc="40:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f37e947cb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f37e9483020"/>
        <function-ref name="getControl" scoped="" ref="0x7f37e94831b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f37e9483340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f37e94834d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f37e9483660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f37e94837f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f37e9483980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f37e9483b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f37e9483ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f37e9458a20" loc="66:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f37e9458a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e9458da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f37e9457020"/>
        <function-ref name="captured" scoped="" ref="0x7f37e94571b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e9457340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e94574d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f37e9457660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f37e945e3e0" loc="59:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f37e945e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e945e760"/>
        <function-ref name="setEvent" scoped="" ref="0x7f37e945e8f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f37e945ea80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f37e945ec10"/>
        <function-ref name="fired" scoped="" ref="0x7f37e945eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f37e94685a0" loc="52:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f37e94685a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f37e9468a20"/>
        <function-ref name="getControl" scoped="" ref="0x7f37e9468bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f37e9468d40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f37e9467020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f37e94671b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f37e9467340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f37e94674d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f37e9467660"/>
        <function-ref name="setControl" scoped="" ref="0x7f37e94677f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f37e9471700" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f37e9471700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e9471a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f37e9471c10"/>
        <function-ref name="captured" scoped="" ref="0x7f37e9471da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e946b020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e946b1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f37e946b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f37e9455a20" loc="69:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f37e9455a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e9455da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f37e9454020"/>
        <function-ref name="captured" scoped="" ref="0x7f37e94541b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e9454340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e94544d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f37e9454660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f37e9467be0" loc="53:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f37e9467be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f37e9465020"/>
        <function-ref name="getControl" scoped="" ref="0x7f37e94651b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f37e9465340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f37e94654d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f37e9465660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f37e94657f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f37e9465980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f37e9465b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f37e9465ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f37e9478890" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f37e9478890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e9478c10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f37e9478da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f37e9473020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f37e94731b0"/>
        <function-ref name="fired" scoped="" ref="0x7f37e9473340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f37e948c060" loc="39:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f37e948c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f37e948c3e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f37e948c570"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f37e948c700"/>
        <function-ref name="get" scoped="" ref="0x7f37e948c890"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f37e948ca20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e948cbb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f37e948cd40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e948b020"/>
        <function-ref name="overflow" scoped="" ref="0x7f37e948b1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f37e948b340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f37e948b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f37e945cda0" loc="62:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f37e945cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e945b180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f37e945b310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f37e945b4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f37e945b630"/>
        <function-ref name="fired" scoped="" ref="0x7f37e945b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f37e94820c0" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f37e94820c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f37e9482440"/>
        <function-ref name="getControl" scoped="" ref="0x7f37e94825d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f37e9482760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f37e94828f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f37e9482a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f37e9482c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f37e9482da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f37e947b020"/>
        <function-ref name="setControl" scoped="" ref="0x7f37e947b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f37e9462a50" loc="56:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f37e9462a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f37e9462dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f37e9461020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f37e94611b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f37e9461340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f37e94614d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f37e9461660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f37e94617f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f37e9461980"/>
        <function-ref name="setControl" scoped="" ref="0x7f37e9461b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f37e946c690" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f37e946c690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e946ca10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f37e946cba0"/>
        <function-ref name="captured" scoped="" ref="0x7f37e946cd30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e9472020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e94721b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f37e9472340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f37e9457a20" loc="67:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f37e9457a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e9457da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f37e9456020"/>
        <function-ref name="captured" scoped="" ref="0x7f37e94561b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e9456340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e94564d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f37e9456660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f37e9474cf0" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f37e9474cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e94790a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f37e9479230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f37e94793c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f37e9479550"/>
        <function-ref name="fired" scoped="" ref="0x7f37e94796e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f37e945d1f0" loc="60:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f37e945d1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e945d570"/>
        <function-ref name="setEvent" scoped="" ref="0x7f37e945d700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f37e945d890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f37e945da20"/>
        <function-ref name="fired" scoped="" ref="0x7f37e945dbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f37e9454a20" loc="70:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f37e9454a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e9454da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f37e9453020"/>
        <function-ref name="captured" scoped="" ref="0x7f37e94531b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e9453340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e94534d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f37e9453660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f37e94640c0" loc="54:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f37e94640c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f37e9464440"/>
        <function-ref name="getControl" scoped="" ref="0x7f37e94645d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f37e9464760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f37e94648f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f37e9464a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f37e9464c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f37e9464da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f37e9463020"/>
        <function-ref name="setControl" scoped="" ref="0x7f37e94631b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f37e946b6c0" loc="50:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f37e946b6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f37e946ba40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f37e946bbd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f37e946bd60"/>
        <function-ref name="get" scoped="" ref="0x7f37e946a020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f37e946a1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e946a340"/>
        <function-ref name="getMode" scoped="" ref="0x7f37e946a4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e946a660"/>
        <function-ref name="overflow" scoped="" ref="0x7f37e946a7f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f37e946a980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f37e946ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f37e945bb80" loc="63:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f37e945bb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e945a020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f37e945a1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f37e945a340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f37e945a4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f37e945a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f37e9459a20" loc="65:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f37e9459a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e9459da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f37e9458020"/>
        <function-ref name="captured" scoped="" ref="0x7f37e94581b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e9458340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e94584d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f37e9458660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f37e945aa20" loc="64:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f37e945aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e9459020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f37e94591b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f37e9459340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f37e94594d0"/>
        <function-ref name="fired" scoped="" ref="0x7f37e9459660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f37e945f570" loc="58:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f37e945f570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e945f8f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f37e945fa80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f37e945fc10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f37e945fda0"/>
        <function-ref name="fired" scoped="" ref="0x7f37e945e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f37e9460020" loc="57:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f37e9460020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f37e94603a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f37e9460530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f37e94606c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f37e9460850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f37e94609e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f37e9460b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f37e9460d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f37e945f020"/>
        <function-ref name="setControl" scoped="" ref="0x7f37e945f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f37e941aaa0" loc="53:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f37e941aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f37e941ae20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f37e941a450" loc="52:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f37e941a450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f37e941a7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f37e9418120" loc="54:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f37e9418120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f37e94184a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f37e941bd80" loc="51:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f37e941bd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f37e941a180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f37e941c540" loc="50:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f37e941c540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f37e941c8c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f37e941ca50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f37e941cbe0"/>
        <function-ref name="get" scoped="" ref="0x7f37e941cd70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f37e941b020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e941b1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f37e941b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e941b4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f37e941b660"/>
        <function-ref name="setMode" scoped="" ref="0x7f37e941b7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f37e941b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f37e9412940" loc="53:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f37e9412940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f37e9412cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f37e94122f0" loc="52:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f37e94122f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f37e9412670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f37e9411020" loc="54:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f37e9411020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f37e94113a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f37e9413bf0" loc="51:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f37e9413bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f37e9412020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f37e94143e0" loc="50:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f37e94143e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f37e9414760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f37e94148f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f37e9414a80"/>
        <function-ref name="get" scoped="" ref="0x7f37e9414c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f37e9414da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e9413020"/>
        <function-ref name="getMode" scoped="" ref="0x7f37e94131b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e9413340"/>
        <function-ref name="overflow" scoped="" ref="0x7f37e94134d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f37e9413660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f37e94137f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f37e93c6a90" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f37e93c6a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e93c6e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f37e93c5020"/>
        <function-ref name="captured" scoped="" ref="0x7f37e93c51b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e93c5340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e93c54d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f37e93c5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f37e940e9d0" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f37e940e9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f37e940ed50"/>
        <function-ref name="getControl" scoped="" ref="0x7f37e93c7020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f37e93c71b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f37e93c7340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f37e93c74d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f37e93c7660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f37e93c77f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f37e93c7980"/>
        <function-ref name="setControl" scoped="" ref="0x7f37e93c7b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f37e93c3020" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f37e93c3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f37e93c33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f37e93c7de0" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f37e93c7de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e93c6180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f37e93c6310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f37e93c64a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f37e93c6630"/>
        <function-ref name="fired" scoped="" ref="0x7f37e93c67c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f37e93c5930" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f37e93c5930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f37e93c5cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f37e93c5e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f37e93c4020"/>
        <function-ref name="get" scoped="" ref="0x7f37e93c41b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f37e93c4340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e93c44d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f37e93c4660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e93c47f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f37e93c4980"/>
        <function-ref name="setMode" scoped="" ref="0x7f37e93c4b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f37e93c4ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f37e93be160" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f37e93be160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e93be4e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f37e93be670"/>
        <function-ref name="captured" scoped="" ref="0x7f37e93be800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e93be990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e93beb20"/>
        <function-ref name="setEdge" scoped="" ref="0x7f37e93becb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f37e93c0020" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f37e93c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f37e93c03a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f37e93c0530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f37e93c06c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f37e93c0850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f37e93c09e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f37e93c0b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f37e93c0d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f37e93bf020"/>
        <function-ref name="setControl" scoped="" ref="0x7f37e93bf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f37e93bb7a0" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f37e93bb7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f37e93bbb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f37e93bf480" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f37e93bf480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e93bf800"/>
        <function-ref name="setEvent" scoped="" ref="0x7f37e93bf990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f37e93bfb20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f37e93bfcb0"/>
        <function-ref name="fired" scoped="" ref="0x7f37e93bfe40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f37e93bd020" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f37e93bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f37e93bd3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f37e93bd530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f37e93bd6c0"/>
        <function-ref name="get" scoped="" ref="0x7f37e93bd850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f37e93bd9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e93bdb70"/>
        <function-ref name="getMode" scoped="" ref="0x7f37e93bdd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e93bb020"/>
        <function-ref name="overflow" scoped="" ref="0x7f37e93bb1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f37e93bb340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f37e93bb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f37e93b67a0" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f37e93b67a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e93b6b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f37e93b6cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f37e93b6e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e93b5020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e93b51b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f37e93b5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f37e93b86d0" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f37e93b86d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f37e93b8a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f37e93b8be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f37e93b8d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f37e93b7020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f37e93b71b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f37e93b7340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f37e93b74d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f37e93b7660"/>
        <function-ref name="setControl" scoped="" ref="0x7f37e93b77f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f37e93b4c50" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f37e93b4c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f37e93b3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f37e93b7ac0" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f37e93b7ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e93b7e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f37e93b6020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f37e93b61b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f37e93b6340"/>
        <function-ref name="fired" scoped="" ref="0x7f37e93b64d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f37e93b5610" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f37e93b5610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f37e93b5990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f37e93b5b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f37e93b5cb0"/>
        <function-ref name="get" scoped="" ref="0x7f37e93b5e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f37e93b4020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e93b41b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f37e93b4340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e93b44d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f37e93b4660"/>
        <function-ref name="setMode" scoped="" ref="0x7f37e93b47f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f37e93b4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f37e93afcb0" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f37e93afcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e93ae0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f37e93ae230"/>
        <function-ref name="captured" scoped="" ref="0x7f37e93ae3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e93ae550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e93ae6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f37e93ae870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f37e93b1b30" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f37e93b1b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f37e93b0020"/>
        <function-ref name="getControl" scoped="" ref="0x7f37e93b01b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f37e93b0340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f37e93b04d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f37e93b0660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f37e93b07f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f37e93b0980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f37e93b0b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f37e93b0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f37e93ab2f0" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f37e93ab2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f37e93ab670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f37e93af020" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f37e93af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e93af3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f37e93af530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f37e93af6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f37e93af850"/>
        <function-ref name="fired" scoped="" ref="0x7f37e93af9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f37e93aeb40" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f37e93aeb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f37e93ac020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f37e93ac1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f37e93ac340"/>
        <function-ref name="get" scoped="" ref="0x7f37e93ac4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f37e93ac660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e93ac7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f37e93ac980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e93acb10"/>
        <function-ref name="overflow" scoped="" ref="0x7f37e93acca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f37e93ace30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f37e93ab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f37e93a62f0" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f37e93a62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e93a6670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f37e93a6800"/>
        <function-ref name="captured" scoped="" ref="0x7f37e93a6990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e93a6b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e93a6cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f37e93a6e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f37e93a8220" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f37e93a8220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f37e93a85a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f37e93a8730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f37e93a88c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f37e93a8a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f37e93a8be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f37e93a8d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f37e93a7020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f37e93a71b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f37e93a7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f37e93a47a0" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f37e93a47a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f37e93a4b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f37e93a7610" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f37e93a7610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e93a7990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f37e93a7b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f37e93a7cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f37e93a7e40"/>
        <function-ref name="fired" scoped="" ref="0x7f37e93a6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f37e93a5160" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f37e93a5160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f37e93a54e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f37e93a5670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f37e93a5800"/>
        <function-ref name="get" scoped="" ref="0x7f37e93a5990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f37e93a5b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e93a5cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f37e93a5e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e93a4020"/>
        <function-ref name="overflow" scoped="" ref="0x7f37e93a41b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f37e93a4340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f37e93a44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f37e939f7a0" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f37e939f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e939fb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f37e939fcb0"/>
        <function-ref name="captured" scoped="" ref="0x7f37e939fe40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e939e020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e939e1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f37e939e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f37e93a16d0" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f37e93a16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f37e93a1a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f37e93a1be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f37e93a1d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f37e93a0020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f37e93a01b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f37e93a0340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f37e93a04d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f37e93a0660"/>
        <function-ref name="setControl" scoped="" ref="0x7f37e93a07f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f37e939dc50" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f37e939dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f37e939b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f37e93a0ac0" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f37e93a0ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e93a0e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f37e939f020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f37e939f1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f37e939f340"/>
        <function-ref name="fired" scoped="" ref="0x7f37e939f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f37e939e610" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f37e939e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f37e939e990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f37e939eb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f37e939ecb0"/>
        <function-ref name="get" scoped="" ref="0x7f37e939ee40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f37e939d020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e939d1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f37e939d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e939d4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f37e939d660"/>
        <function-ref name="setMode" scoped="" ref="0x7f37e939d7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f37e939d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f37e9397cb0" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f37e9397cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e93960a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f37e9396230"/>
        <function-ref name="captured" scoped="" ref="0x7f37e93963c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e9396550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e93966e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f37e9396870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f37e9399b30" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f37e9399b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f37e9398020"/>
        <function-ref name="getControl" scoped="" ref="0x7f37e93981b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f37e9398340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f37e93984d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f37e9398660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f37e93987f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f37e9398980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f37e9398b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f37e9398ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f37e93942f0" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f37e93942f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f37e9394670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f37e9397020" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f37e9397020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e93973a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f37e9397530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f37e93976c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f37e9397850"/>
        <function-ref name="fired" scoped="" ref="0x7f37e93979e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f37e9396b40" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f37e9396b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f37e9395020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f37e93951b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f37e9395340"/>
        <function-ref name="get" scoped="" ref="0x7f37e93954d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f37e9395660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e93957f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f37e9395980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e9395b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f37e9395ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f37e9395e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f37e9394020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f37e938f2f0" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f37e938f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e938f670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f37e938f800"/>
        <function-ref name="captured" scoped="" ref="0x7f37e938f990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e938fb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e938fcb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f37e938fe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f37e9391220" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f37e9391220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f37e93915a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f37e9391730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f37e93918c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f37e9391a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f37e9391be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f37e9391d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f37e9390020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f37e93901b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f37e9390340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f37e938d7a0" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f37e938d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f37e938db20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f37e9390610" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f37e9390610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e9390990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f37e9390b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f37e9390cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f37e9390e40"/>
        <function-ref name="fired" scoped="" ref="0x7f37e938f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f37e938e160" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f37e938e160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f37e938e4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f37e938e670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f37e938e800"/>
        <function-ref name="get" scoped="" ref="0x7f37e938e990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f37e938eb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e938ecb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f37e938ee40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e938d020"/>
        <function-ref name="overflow" scoped="" ref="0x7f37e938d1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f37e938d340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f37e938d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f37e93877a0" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f37e93877a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e9387b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f37e9387cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f37e9387e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e9386020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e93861b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f37e9386340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f37e93896d0" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f37e93896d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f37e9389a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f37e9389be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f37e9389d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f37e9388020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f37e93881b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f37e9388340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f37e93884d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f37e9388660"/>
        <function-ref name="setControl" scoped="" ref="0x7f37e93887f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f37e9385c50" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f37e9385c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f37e9384020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f37e9388ac0" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f37e9388ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e9388e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f37e9387020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f37e93871b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f37e9387340"/>
        <function-ref name="fired" scoped="" ref="0x7f37e93874d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f37e9386610" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f37e9386610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f37e9386990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f37e9386b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f37e9386cb0"/>
        <function-ref name="get" scoped="" ref="0x7f37e9386e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f37e9385020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e93851b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f37e9385340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e93854d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f37e9385660"/>
        <function-ref name="setMode" scoped="" ref="0x7f37e93857f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f37e9385980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f37e9380cb0" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f37e9380cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e937f0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f37e937f230"/>
        <function-ref name="captured" scoped="" ref="0x7f37e937f3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e937f550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e937f6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f37e937f870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f37e9382b30" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f37e9382b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f37e9381020"/>
        <function-ref name="getControl" scoped="" ref="0x7f37e93811b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f37e9381340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f37e93814d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f37e9381660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f37e93817f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f37e9381980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f37e9381b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f37e9381ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f37e937d2f0" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f37e937d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f37e937d670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f37e9380020" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f37e9380020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e93803a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f37e9380530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f37e93806c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f37e9380850"/>
        <function-ref name="fired" scoped="" ref="0x7f37e93809e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f37e937fb40" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f37e937fb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f37e937e020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f37e937e1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f37e937e340"/>
        <function-ref name="get" scoped="" ref="0x7f37e937e4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f37e937e660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e937e7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f37e937e980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e937eb10"/>
        <function-ref name="overflow" scoped="" ref="0x7f37e937eca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f37e937ee30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f37e937d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f37e9376240" loc="7:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f37e9376240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f37e93765c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f37e937aa90" loc="4:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f37e937aa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f37e937ae10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f37e9377260" loc="5:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f37e9377260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f37e93775e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f37e93779f0" loc="6:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f37e93779f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f37e9377d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f37e984a080" loc="55:/opt/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f37e984a080"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f37e984a400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f37e99832d0" loc="51:/opt/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f37e99832d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f37e9983650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f37e97ab7d0" loc="52:/opt/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f37e97ab7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f37e97abb50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f37e94d7b50" loc="39:/opt/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f37e94d7b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f37e933fb10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f37e933f1b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f37e933f340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f37e933f4d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f37e933f020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f37e933f660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f37e933f7f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f37e933f980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f37e9332dc0" loc="60:/opt/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f37e9332dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f37e9331180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f37e9333590" loc="57:/opt/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f37e9333590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f37e9333910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f37e93326c0" loc="59:/opt/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f37e93326c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f37e9332a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f37e9333c00" loc="58:/opt/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f37e9333c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f37e9332020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f37e93321b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f37e9332340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f37e9a5b1d0" loc="48:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f37e9a5b1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f37e9a5b550"/>
        <function-ref name="runTask" scoped="" ref="0x7f37e9a5b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f37e99ec3a0" loc="47:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f37e99ec3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f37e99ec720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f37e99ec8b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f37e99eca40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f37e9595040" loc="56:/opt/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f37e9595040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f37e95953c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f37e9595550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f37e95925d0" loc="57:/opt/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f37e95925d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f37e9592950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f37e9597140" loc="55:/opt/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f37e9597140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f37e95974c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f37e9597650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f37e95977e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f37e93255d0" loc="6:TestPrintfC.nc">
      <component-ref qname="TestPrintfC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f37e93255d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f37e9325950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x7f37e930da40" loc="9:TestPrintfC.nc">
      <component-ref qname="TestPrintfC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f37e930da40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f37e9502e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f37e9326200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f37e93146b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSAint" ref="0x7f37e92fc6f0" loc="10:TestPrintfC.nc">
      <component-ref qname="TestPrintfC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSAint" scoped="" ref="0x7f37e92fc6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RSAinterface"/>
      </instance>
      <interface-functions>
        <function-ref name="encrypt_shared_key" scoped="" ref="0x7f37e92fca70"/>
        <function-ref name="get_modulus" scoped="" ref="0x7f37e92fcc00"/>
        <function-ref name="test_key_gen" scoped="" ref="0x7f37e92fcd90"/>
        <function-ref name="rsa_test_key" scoped="" ref="0x7f37e930c020"/>
        <function-ref name="decrypt_shared_key" scoped="" ref="0x7f37e930c1b0"/>
        <function-ref name="checkKey" scoped="" ref="0x7f37e930c340"/>
        <function-ref name="gen_key" scoped="" ref="0x7f37e930c4d0"/>
        <function-ref name="RSAtest" scoped="" ref="0x7f37e930c660"/>
        <function-ref name="gen_shared_key" scoped="" ref="0x7f37e930c7f0"/>
        <function-ref name="print_time" scoped="" ref="0x7f37e930c980"/>
        <function-ref name="rsa_gen_prime" scoped="" ref="0x7f37e930cb10"/>
        <function-ref name="rsa_encrypt" scoped="" ref="0x7f37e930cca0"/>
        <function-ref name="gen_val_key" scoped="" ref="0x7f37e930ce30"/>
        <function-ref name="rsa_decrypt" scoped="" ref="0x7f37e930b120"/>
        <function-ref name="get_private" scoped="" ref="0x7f37e930b2b0"/>
        <function-ref name="rsa_test_prime" scoped="" ref="0x7f37e930b440"/>
        <function-ref name="get_exponent" scoped="" ref="0x7f37e930b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="primeModule" ref="0x7f37e930f750" loc="8:TestPrintfC.nc">
      <component-ref qname="TestPrintfC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="primeModule" scoped="" ref="0x7f37e930f750"/></type-interface>
      <instance>
        <interfacedef-ref qname="primeModule"/>
      </instance>
      <interface-functions>
        <function-ref name="isPrime" scoped="" ref="0x7f37e930fad0"/>
        <function-ref name="genLargeNum" scoped="" ref="0x7f37e930fc60"/>
        <function-ref name="power" scoped="" ref="0x7f37e930fdf0"/>
        <function-ref name="gcd" scoped="" ref="0x7f37e9315020"/>
        <function-ref name="genLargePrime" scoped="" ref="0x7f37e93151b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f37e9319770" loc="7:TestPrintfC.nc">
      <component-ref qname="TestPrintfC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f37e9319770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f37e9502e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f37e9326200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f37e9317c40"/>
        <function-ref name="fired" scoped="" ref="0x7f37e93231e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f37e9317020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f37e9323ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f37e9316590"/>
        <function-ref name="gett0" scoped="" ref="0x7f37e9316110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f37e9323660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f37e9324390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f37e9317630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f37e9324860"/>
        <function-ref name="stop" scoped="" ref="0x7f37e9324d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f37e92ea640" loc="45:/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="TestPrintfAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f37e92ea640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f37e9502e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f37e9326200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f37e913ec40"/>
        <function-ref name="fired" scoped="" ref="0x7f37e91401e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f37e913e020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f37e9140ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f37e913d590"/>
        <function-ref name="gett0" scoped="" ref="0x7f37e913d110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f37e9140660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f37e9141390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f37e913e630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f37e9141860"/>
        <function-ref name="stop" scoped="" ref="0x7f37e9141d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f37e92e1020" loc="49:/opt/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f37e92e1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f37e9502e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f37e9326200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f37e92dd630"/>
        <function-ref name="fired" scoped="" ref="0x7f37e92e0a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f37e92df920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f37e92df4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f37e92dc020"/>
        <function-ref name="gett0" scoped="" ref="0x7f37e92ddab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f37e92df020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f37e92e1c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f37e92dd020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f37e92e0110"/>
        <function-ref name="stop" scoped="" ref="0x7f37e92e05e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f37e92d9c30" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f37e92d9c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f37e9502e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f37e9326200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f37e92d4110"/>
        <function-ref name="fired" scoped="" ref="0x7f37e92d66a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f37e92d54a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f37e92d5020"/>
        <function-ref name="getdt" scoped="" ref="0x7f37e92d4a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f37e92d4590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f37e92d6b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f37e92d7860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f37e92d5ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f37e92d7d30"/>
        <function-ref name="stop" scoped="" ref="0x7f37e92d6220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f37e92d2080" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f37e92d2080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f37e9502e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f37e9326200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f37e92d2cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f37e92dce50" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f37e92dce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f37e92d9210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f37e91de020" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f37e91de020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f37e9502e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f37e9326200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f37e91dc870"/>
        <function-ref name="fired" scoped="" ref="0x7f37e91dd840"/>
        <function-ref name="startAt" scoped="" ref="0x7f37e91dc220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f37e91ddd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f37e91dcd30"/>
        <function-ref name="start" scoped="" ref="0x7f37e91dee30"/>
        <function-ref name="stop" scoped="" ref="0x7f37e91dd380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f37e91df760" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f37e91df760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f37e91dfae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f37e86d36e0" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f37e86d36e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f37e9326640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f37e93269b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f37e86cf020"/>
        <function-ref name="fired" scoped="" ref="0x7f37e86d1020"/>
        <function-ref name="startAt" scoped="" ref="0x7f37e86d19a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f37e86d14e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f37e86cf4e0"/>
        <function-ref name="start" scoped="" ref="0x7f37e86d25b0"/>
        <function-ref name="stop" scoped="" ref="0x7f37e86d2ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f37e86d5e60" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f37e86d5e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f37e86d3210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f37e86bbda0" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f37e86bbda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e86ba180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f37e86ba310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f37e86ba4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f37e86ba630"/>
        <function-ref name="fired" scoped="" ref="0x7f37e86ba7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f37e86bd340" loc="39:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f37e86bd340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f37e86bd6c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f37e86bd850"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f37e86bd9e0"/>
        <function-ref name="get" scoped="" ref="0x7f37e86bdb70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f37e86bdd00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e86bc020"/>
        <function-ref name="getMode" scoped="" ref="0x7f37e86bc1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e86bc340"/>
        <function-ref name="overflow" scoped="" ref="0x7f37e86bc4d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f37e86bc660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f37e86bc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f37e86bca80" loc="40:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f37e86bca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f37e86bce00"/>
        <function-ref name="getControl" scoped="" ref="0x7f37e86bb020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f37e86bb1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f37e86bb340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f37e86bb4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f37e86bb660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f37e86bb7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f37e86bb980"/>
        <function-ref name="setControl" scoped="" ref="0x7f37e86bbb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f37e92ad1d0" loc="52:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f37e92ad1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e92ad550"/>
        <function-ref name="setEvent" scoped="" ref="0x7f37e92ad6e0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f37e92ad870"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f37e92ada00"/>
        <function-ref name="fired" scoped="" ref="0x7f37e92adb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f37e92b2990" loc="50:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f37e92b2990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f37e92b2d10"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f37e92b1020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f37e92b11b0"/>
        <function-ref name="get" scoped="" ref="0x7f37e92b1340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f37e92b14d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e92b1660"/>
        <function-ref name="getMode" scoped="" ref="0x7f37e92b17f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e92b1980"/>
        <function-ref name="overflow" scoped="" ref="0x7f37e92b1b10"/>
        <function-ref name="setMode" scoped="" ref="0x7f37e92b1ca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f37e92b1e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f37e92b0720" loc="51:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f37e92b0720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f37e92b0aa0"/>
        <function-ref name="getControl" scoped="" ref="0x7f37e92b0c30"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f37e92b0dc0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f37e92af020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f37e92af1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f37e92af340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f37e92af4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f37e92af660"/>
        <function-ref name="setControl" scoped="" ref="0x7f37e92af7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f37e86aca80" loc="49:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f37e86aca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f37e86ace00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f37e86aa020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f37e86aa1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f37e86aa340"/>
        <function-ref name="fired" scoped="" ref="0x7f37e86aa4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f37e86b3190" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f37e86b3190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f37e86b3510"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f37e86b36a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f37e86b3830"/>
        <function-ref name="get" scoped="" ref="0x7f37e86b39c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f37e86b3b50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e86b3ce0"/>
        <function-ref name="getMode" scoped="" ref="0x7f37e86b3e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e86b2030"/>
        <function-ref name="overflow" scoped="" ref="0x7f37e86b21c0"/>
        <function-ref name="setMode" scoped="" ref="0x7f37e86b2350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f37e86b24e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f37e86b6020" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f37e86b6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f37e9326640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f37e93269b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f37e86b4870"/>
        <function-ref name="fired" scoped="" ref="0x7f37e86b5840"/>
        <function-ref name="startAt" scoped="" ref="0x7f37e86b4220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f37e86b5d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f37e86b4d30"/>
        <function-ref name="start" scoped="" ref="0x7f37e86b6e30"/>
        <function-ref name="stop" scoped="" ref="0x7f37e86b5380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f37e86b8660" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f37e86b8660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f37e86b89e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f37e86b2770" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f37e86b2770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f37e86b2af0"/>
        <function-ref name="getControl" scoped="" ref="0x7f37e86b2c80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f37e86b2e10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f37e86ac020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f37e86ac1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f37e86ac340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f37e86ac4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f37e86ac660"/>
        <function-ref name="setControl" scoped="" ref="0x7f37e86ac7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f37e9258b50" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f37e9258b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f37e9502e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f37e9326200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f37e925c9b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e9257360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e925ce70"/>
        <function-ref name="overflow" scoped="" ref="0x7f37e9257820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f37e9256b70" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f37e9256b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f37e9326640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f37e93269b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f37e92539b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e9252360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e9253e70"/>
        <function-ref name="overflow" scoped="" ref="0x7f37e9252820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f37e9241c50" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f37e9241c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f37e923f020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f37e923f1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f37e923f340"/>
        <function-ref name="get" scoped="" ref="0x7f37e923f4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f37e923f660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e923f7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f37e923f980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e923fb10"/>
        <function-ref name="overflow" scoped="" ref="0x7f37e923fca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f37e923fe30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f37e923e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f37e924fb80" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f37e924fb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f37e9326640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f37e93269b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f37e924e9b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e9241360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e924ee70"/>
        <function-ref name="overflow" scoped="" ref="0x7f37e9241820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f37e921d950" loc="63:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f37e921d950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f37e9326640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f37e93269b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f37e921c780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e921b150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e921cc40"/>
        <function-ref name="overflow" scoped="" ref="0x7f37e921b610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f37e923a5f0" loc="62:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f37e923a5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f37e9502e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f37e9326200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f37e921f430"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e921fdb0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e921f8f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f37e921d2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f37e86cda90" loc="61:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f37e86cda90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f37e9502e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f37e9326200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f37e86ca2e0"/>
        <function-ref name="fired" scoped="" ref="0x7f37e86cb2e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f37e86cbc60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f37e86cb7a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f37e86ca7a0"/>
        <function-ref name="start" scoped="" ref="0x7f37e86cc8d0"/>
        <function-ref name="stop" scoped="" ref="0x7f37e86ccde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f37e86c6210" loc="73:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f37e86c6210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f37e9326640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f37e93269b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f37e86c4b30"/>
        <function-ref name="fired" scoped="" ref="0x7f37e86c5a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f37e86c44e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f37e86c4020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f37e86c3020"/>
        <function-ref name="start" scoped="" ref="0x7f37e86c5090"/>
        <function-ref name="stop" scoped="" ref="0x7f37e86c55a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f37e86cae10" loc="68:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f37e86cae10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f37e9502e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f37e9326200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f37e86c9ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e86c7670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e86c71b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f37e86c7b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f37e91a9490" loc="74:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f37e91a9490"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f37e91a9810"/>
        <function-ref name="runTask" scoped="" ref="0x7f37e91a99a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f37e91ad1d0" loc="49:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f37e91ad1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f37e9502e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f37e9326200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f37e91aab30"/>
        <function-ref name="fired" scoped="" ref="0x7f37e91ab9f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f37e91aa4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f37e91aa020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f37e91a9020"/>
        <function-ref name="start" scoped="" ref="0x7f37e91ab020"/>
        <function-ref name="stop" scoped="" ref="0x7f37e91ab530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f37e91b3cf0" loc="48:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f37e91b3cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f37e9502e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f37e9326200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f37e91ae220"/>
        <function-ref name="fired" scoped="" ref="0x7f37e91b07c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f37e91af590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f37e91af110"/>
        <function-ref name="getdt" scoped="" ref="0x7f37e91aeb20"/>
        <function-ref name="gett0" scoped="" ref="0x7f37e91ae6a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f37e91b0c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f37e91b2940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f37e91afba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f37e91b2e10"/>
        <function-ref name="stop" scoped="" ref="0x7f37e91b0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f37e9159e80" loc="71:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f37e9159e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f37e9157220"/>
        <function-ref name="runTask" scoped="" ref="0x7f37e91573b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f37e915ec30" loc="49:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f37e915ec30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f37e9502e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f37e9326200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f37e9159110"/>
        <function-ref name="fired" scoped="" ref="0x7f37e915b6a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f37e915a4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f37e915a020"/>
        <function-ref name="getdt" scoped="" ref="0x7f37e9159a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f37e9159590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f37e915bb20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f37e915c860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f37e915aab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f37e915cd30"/>
        <function-ref name="stop" scoped="" ref="0x7f37e915b220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f37e9164690" loc="48:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f37e9164690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f37e9502e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f37e9326200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f37e915fcf0"/>
        <function-ref name="fired" scoped="" ref="0x7f37e9161260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f37e915f090"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f37e9161ba0"/>
        <function-ref name="getdt" scoped="" ref="0x7f37e915e680"/>
        <function-ref name="gett0" scoped="" ref="0x7f37e915e1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f37e9161700"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f37e9163390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f37e915f6c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f37e9163880"/>
        <function-ref name="stop" scoped="" ref="0x7f37e9163d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f37e9155cf0" loc="48:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f37e9155cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f37e9502e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f37e9326200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f37e914a980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f37e9149020" loc="49:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f37e9149020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f37e9502e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f37e9326200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f37e9149e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e9148800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e9148340"/>
        <function-ref name="overflow" scoped="" ref="0x7f37e9148cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f37e913cc90" loc="20:/opt/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f37e913cc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f37e9502e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f37e9326200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f37e91398e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f37e8984540" loc="49:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f37e8984540"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f37e89848c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f37e8984a50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f37e8984be0"/>
        <function-ref name="cancel" scoped="" ref="0x7f37e8984d70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f37e8983020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f37e8983270" loc="50:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f37e8983270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f37e89835f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f37e8983780"/>
        <function-ref name="getPayload" scoped="" ref="0x7f37e8983910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f37e8983aa0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f37e8983c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f37e8983e80" loc="51:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f37e8983e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f37e8982220"/>
        <function-ref name="source" scoped="" ref="0x7f37e89823b0"/>
        <function-ref name="address" scoped="" ref="0x7f37e8982540"/>
        <function-ref name="destination" scoped="" ref="0x7f37e89826d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f37e8982860"/>
        <function-ref name="setDestination" scoped="" ref="0x7f37e89829f0"/>
        <function-ref name="type" scoped="" ref="0x7f37e8982b80"/>
        <function-ref name="setType" scoped="" ref="0x7f37e8982d10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f37e8981020"/>
        <function-ref name="setGroup" scoped="" ref="0x7f37e89811b0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f37e8981340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f37e89815d0" loc="52:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f37e89815d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f37e8981950"/>
        <function-ref name="noAck" scoped="" ref="0x7f37e8981ae0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f37e8981c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f37e8629390" loc="44:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f37e8629390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f37e8629710"/>
        <function-ref name="getPayload" scoped="" ref="0x7f37e86298a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f37e8629a30"/>
        <function-ref name="cancel" scoped="" ref="0x7f37e8629bc0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f37e8629d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f37e8628060" loc="46:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f37e8628060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f37e86283e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f37e8628570"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f37e8628700"/>
        <function-ref name="cancel" scoped="" ref="0x7f37e8628890"/>
        <function-ref name="sendDone" scoped="" ref="0x7f37e8628a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f37e8628c70" loc="47:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f37e8628c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f37e8627020"/>
        <function-ref name="source" scoped="" ref="0x7f37e86271b0"/>
        <function-ref name="address" scoped="" ref="0x7f37e8627340"/>
        <function-ref name="destination" scoped="" ref="0x7f37e86274d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f37e8627660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f37e86277f0"/>
        <function-ref name="type" scoped="" ref="0x7f37e8627980"/>
        <function-ref name="setType" scoped="" ref="0x7f37e8627b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f37e8627ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f37e8627e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f37e8626020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f37e90eacf0" loc="44:/opt/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f37e90eacf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f37e90e70a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f37e90e7230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f37e90e73c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f37e90e7550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f37e90e76e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f37e909d400" loc="48:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f37e909d400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f37e9517210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f37e909d7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f37e909d930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f37e909dac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f37e909dc50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f37e909dde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f37e909e580" loc="46:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f37e909e580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f37e909e920"/>
        <function-ref name="getPayload" scoped="" ref="0x7f37e909eab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f37e909ec40"/>
        <function-ref name="cancel" scoped="" ref="0x7f37e909edd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f37e909d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f37e909b720" loc="50:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f37e909b720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f37e909baa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f37e909bc30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f37e909bdc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f37e909a020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f37e909a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f37e909a480" loc="169:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f37e909a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f37e909a800"/>
        <function-ref name="runTask" scoped="" ref="0x7f37e909a990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f37e909ac60" loc="126:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f37e909ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f37e9098020"/>
        <function-ref name="runTask" scoped="" ref="0x7f37e90981b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f37e909c060" loc="49:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f37e909c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f37e909c3e0"/>
        <function-ref name="source" scoped="" ref="0x7f37e909c570"/>
        <function-ref name="address" scoped="" ref="0x7f37e909c700"/>
        <function-ref name="destination" scoped="" ref="0x7f37e909c890"/>
        <function-ref name="setSource" scoped="" ref="0x7f37e909ca20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f37e909cbb0"/>
        <function-ref name="type" scoped="" ref="0x7f37e909cd40"/>
        <function-ref name="setType" scoped="" ref="0x7f37e909b020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f37e909b1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f37e909b340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f37e909b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f37e908f3b0" loc="46:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f37e908f3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f37e908f730"/>
        <function-ref name="stopDone" scoped="" ref="0x7f37e908f8c0"/>
        <function-ref name="start" scoped="" ref="0x7f37e908fa50"/>
        <function-ref name="stop" scoped="" ref="0x7f37e908fbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f37e90933f0" loc="47:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f37e90933f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f37e9517210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f37e9093770"/>
        <function-ref name="getPayload" scoped="" ref="0x7f37e9093900"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f37e9093a90"/>
        <function-ref name="cancel" scoped="" ref="0x7f37e9093c20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f37e9093db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f37e908d7e0" loc="49:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f37e908d7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f37e908db60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f37e908dcf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f37e908de80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f37e908c030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f37e908c1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f37e908d1d0" loc="48:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f37e908d1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f37e9517210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f37e908d550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f37e907a330" loc="53:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f37e907a330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f37e907a6b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f37e907a840"/>
        <function-ref name="led1On" scoped="" ref="0x7f37e907a9d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f37e907ab60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f37e907acf0"/>
        <function-ref name="get" scoped="" ref="0x7f37e907ae80"/>
        <function-ref name="led1Off" scoped="" ref="0x7f37e9085030"/>
        <function-ref name="led2Off" scoped="" ref="0x7f37e9085670"/>
        <function-ref name="set" scoped="" ref="0x7f37e90851c0"/>
        <function-ref name="led0On" scoped="" ref="0x7f37e9085350"/>
        <function-ref name="led2On" scoped="" ref="0x7f37e90854e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f37e9088b20" loc="51:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f37e9088b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f37e9086020"/>
        <function-ref name="noAck" scoped="" ref="0x7f37e90861b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f37e9086340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f37e908c470" loc="50:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f37e908c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f37e908c7f0"/>
        <function-ref name="source" scoped="" ref="0x7f37e908c980"/>
        <function-ref name="address" scoped="" ref="0x7f37e908cb10"/>
        <function-ref name="destination" scoped="" ref="0x7f37e908cca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f37e908ce30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f37e9088020"/>
        <function-ref name="type" scoped="" ref="0x7f37e90881b0"/>
        <function-ref name="setType" scoped="" ref="0x7f37e9088340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f37e90884d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f37e9088660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f37e90887f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f37e90204a0" loc="54:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f37e90204a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f37e9020820"/>
        <function-ref name="getPayload" scoped="" ref="0x7f37e90209b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f37e9020b40"/>
        <function-ref name="cancel" scoped="" ref="0x7f37e9020cd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f37e9020e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f37e901f120" loc="55:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f37e901f120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f37e901f4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f37e9079300" loc="47:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f37e9079300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f37e9517210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f37e90796a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f37e9079830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f37e90799c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f37e9079b50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f37e9079ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f37e9023d60" loc="50:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f37e9023d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f37e9021180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f37e9021310"/>
        <function-ref name="getPayload" scoped="" ref="0x7f37e90214a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f37e9021630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f37e90217c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f37e90240d0" loc="48:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f37e90240d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f37e9517210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f37e9024470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f37e9021a10" loc="51:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f37e9021a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f37e9021d90"/>
        <function-ref name="noAck" scoped="" ref="0x7f37e9020020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f37e90201b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f37e90246c0" loc="49:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f37e90246c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f37e9024a40"/>
        <function-ref name="source" scoped="" ref="0x7f37e9024bd0"/>
        <function-ref name="address" scoped="" ref="0x7f37e9024d60"/>
        <function-ref name="destination" scoped="" ref="0x7f37e9023020"/>
        <function-ref name="setSource" scoped="" ref="0x7f37e90231b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f37e9023340"/>
        <function-ref name="type" scoped="" ref="0x7f37e90234d0"/>
        <function-ref name="setType" scoped="" ref="0x7f37e9023660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f37e90237f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f37e9023980"/>
        <function-ref name="localGroup" scoped="" ref="0x7f37e9023b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f37e901dba0" loc="50:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f37e901dba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f37e901a020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f37e901a1b0"/>
        <function-ref name="start" scoped="" ref="0x7f37e901a340"/>
        <function-ref name="stop" scoped="" ref="0x7f37e901a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f37e9019790" loc="52:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f37e9019790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f37e9516d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f37e9019b10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f37e9019ca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f37e9019e30"/>
        <function-ref name="cancel" scoped="" ref="0x7f37e9018020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f37e90181b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f37e901d550" loc="49:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f37e901d550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f37e901d8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f37e901ac60" loc="51:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f37e901ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f37e9516d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f37e9019020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f37e90172b0" loc="56:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f37e90172b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f37e9017630"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f37e90177c0"/>
        <function-ref name="led1On" scoped="" ref="0x7f37e9017950"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f37e9017ae0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f37e9017c70"/>
        <function-ref name="get" scoped="" ref="0x7f37e9017e00"/>
        <function-ref name="led1Off" scoped="" ref="0x7f37e9016020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f37e9016660"/>
        <function-ref name="set" scoped="" ref="0x7f37e90161b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f37e9016340"/>
        <function-ref name="led2On" scoped="" ref="0x7f37e90164d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7f37e9012970" loc="55:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f37e9012970"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f37e9516d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f37e9012cf0"/>
        <function-ref name="offset" scoped="" ref="0x7f37e9012e80"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f37e9017030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f37e900bc40" loc="66:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f37e900bc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f37e900a020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f37e900a1b0"/>
        <function-ref name="start" scoped="" ref="0x7f37e900a340"/>
        <function-ref name="stop" scoped="" ref="0x7f37e900a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7f37e8fa3e40" loc="332:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7f37e8fa3e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f37e8fa21e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f37e8fa2370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f37e8ff5530" loc="74:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f37e8ff5530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f37e8ff58b0"/>
        <function-ref name="stop" scoped="" ref="0x7f37e8ff5a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7f37e8fdbd50" loc="191:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7f37e8fdbd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f37e8fd9100"/>
        <function-ref name="runTask" scoped="" ref="0x7f37e8fd9290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f37e900b5f0" loc="65:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f37e900b5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f37e900b970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7f37e8ff3130" loc="75:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7f37e8ff3130"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7f37e8ff34b0"/>
        <function-ref name="flush" scoped="" ref="0x7f37e8ff3640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7f37e8fa6400" loc="322:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7f37e8fa6400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f37e8fa6780"/>
        <function-ref name="runTask" scoped="" ref="0x7f37e8fa6910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7f37e8ff9410" loc="72:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f37e8ff9410"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f37e8ff9790"/>
        <function-ref name="resetSend" scoped="" ref="0x7f37e8ff9920"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f37e8ff9ab0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f37e8ff9c40"/>
        <function-ref name="putData" scoped="" ref="0x7f37e8ff9dd0"/>
        <function-ref name="putDone" scoped="" ref="0x7f37e9003020"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f37e90031b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f37e9003430" loc="73:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f37e9003430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f37e90037b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f37e9003940"/>
        <function-ref name="led1On" scoped="" ref="0x7f37e9003ad0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f37e9003c60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f37e9003df0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8fff020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f37e8fff1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f37e8fff7f0"/>
        <function-ref name="set" scoped="" ref="0x7f37e8fff340"/>
        <function-ref name="led0On" scoped="" ref="0x7f37e8fff4d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f37e8fff660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7f37e8f9f0c0" loc="341:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f37e8f9f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f37e8f9f440"/>
        <function-ref name="runTask" scoped="" ref="0x7f37e8f9f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7f37e9004a40" loc="67:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f37e9004a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f37e9004dc0"/>
        <function-ref name="nextByte" scoped="" ref="0x7f37e9009020"/>
        <function-ref name="startSend" scoped="" ref="0x7f37e90091b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f37e9009340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7f37e9008080" loc="68:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f37e9008080"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f37e9008400"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f37e9008590"/>
        <function-ref name="endPacket" scoped="" ref="0x7f37e9008720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7f37e8ed5c50" loc="275:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7f37e8ed5c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f37e8ed4020"/>
        <function-ref name="runTask" scoped="" ref="0x7f37e8ed41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f37e8ed9830" loc="51:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f37e8ed9830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f37e9516d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f37e8ed9bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f37e8ed9d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f37e8ed8020"/>
        <function-ref name="cancel" scoped="" ref="0x7f37e8ed81b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f37e8ed8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7f37e8ed4480" loc="158:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7f37e8ed4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f37e8ed4800"/>
        <function-ref name="runTask" scoped="" ref="0x7f37e8ed4990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f37e8ed9110" loc="50:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f37e8ed9110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f37e9516d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f37e8ed94b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7f37e8ed8760" loc="54:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7f37e8ed8760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f37e9516d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f37e8ed8b00"/>
        <function-ref name="offset" scoped="" ref="0x7f37e8ed8c90"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f37e8ed8e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f37e8ed6590" loc="57:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f37e8ed6590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f37e8ed6910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f37e8ed6aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f37e8ed6c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f37e8ed6dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f37e8ed5020"/>
        <function-ref name="get" scoped="" ref="0x7f37e8ed51b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f37e8ed5340"/>
        <function-ref name="led2On" scoped="" ref="0x7f37e8ed5980"/>
        <function-ref name="set" scoped="" ref="0x7f37e8ed5660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f37e8ed54d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f37e8ed57f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7f37e8ed79d0" loc="56:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f37e8ed79d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f37e8ed7d50"/>
        <function-ref name="nextByte" scoped="" ref="0x7f37e8ed6020"/>
        <function-ref name="startSend" scoped="" ref="0x7f37e8ed61b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f37e8ed6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7f37e8ed70e0" loc="55:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f37e8ed70e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f37e8ed7460"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f37e8ed75f0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f37e8ed7780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7f37e8ec2d20" loc="50:/opt/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f37e8ec2d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f37e8ecd0e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f37e8ecd270"/>
        <function-ref name="receive" scoped="" ref="0x7f37e8ecd400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f37e8ecd590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f37e8ecd720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f37e8ecd8b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f37e8ecda40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7f37e8ed1b70" loc="48:/opt/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f37e8ed1b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f37e8ece020"/>
        <function-ref name="resetSend" scoped="" ref="0x7f37e8ece1b0"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f37e8ece340"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f37e8ece4d0"/>
        <function-ref name="putData" scoped="" ref="0x7f37e8ece660"/>
        <function-ref name="putDone" scoped="" ref="0x7f37e8ece7f0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f37e8ece980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f37e8ecdcc0" loc="51:/opt/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f37e8ecdcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f37e8ecc0a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f37e8ecc230"/>
        <function-ref name="led1On" scoped="" ref="0x7f37e8ecc3c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f37e8ecc550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f37e8ecc6e0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8ecc870"/>
        <function-ref name="led1Off" scoped="" ref="0x7f37e8ecca00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f37e8ec11b0"/>
        <function-ref name="set" scoped="" ref="0x7f37e8eccb90"/>
        <function-ref name="led0On" scoped="" ref="0x7f37e8eccd20"/>
        <function-ref name="led2On" scoped="" ref="0x7f37e8ec1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f37e8ea2d50" loc="6:/opt/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f37e8ea2d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f37e8ea5100"/>
        <function-ref name="receive" scoped="" ref="0x7f37e8ea5290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f37e8ea7890" loc="5:/opt/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f37e8ea7890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f37e8ea7c10"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f37e8ea7da0"/>
        <function-ref name="receive" scoped="" ref="0x7f37e8ea6020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f37e8ea61b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f37e8ea6340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f37e8ea64d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f37e8ea6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f37e8ea7080" loc="4:/opt/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f37e8ea7080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f37e8ea7400"/>
        <function-ref name="stop" scoped="" ref="0x7f37e8ea7590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f37e89b58f0" loc="45:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f37e89b58f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f37e89b5c70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f37e89b5e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f37e89b3060" loc="47:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f37e89b3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f37e89b33e0"/>
        <function-ref name="receive" scoped="" ref="0x7f37e89b3570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f37e89b3800" loc="49:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f37e89b3800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f37e89b3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f37e89b40c0" loc="46:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f37e89b40c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f37e89b4440"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f37e89b45d0"/>
        <function-ref name="receive" scoped="" ref="0x7f37e89b4760"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f37e89b48f0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f37e89b4a80"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f37e89b4c10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f37e89b4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f37e89b6c00" loc="44:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f37e89b6c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f37e89b5020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f37e89b51b0"/>
        <function-ref name="request" scoped="" ref="0x7f37e89b5340"/>
        <function-ref name="granted" scoped="" ref="0x7f37e89b54d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f37e89b5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f37e8e40450" loc="42:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f37e8e40450"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f37e8e407d0"/>
        <function-ref name="configure" scoped="" ref="0x7f37e8e40960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f37e8e3c850" loc="44:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f37e8e3c850"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f37e8e3cbd0"/>
        <function-ref name="receive" scoped="" ref="0x7f37e8e3cd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f37e8e3aa40" loc="47:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f37e8e3aa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f37e8e3adc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f37e8e3f1d0" loc="43:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f37e8e3f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f37e8e3f550"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f37e8e3f6e0"/>
        <function-ref name="receive" scoped="" ref="0x7f37e8e3f870"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f37e8e3fa00"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f37e8e3fb90"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f37e8e3fd20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f37e8e3c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f37e8e3b690" loc="46:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f37e8e3b690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f37e8e3ba10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f37e8e3bba0"/>
        <function-ref name="request" scoped="" ref="0x7f37e8e3bd30"/>
        <function-ref name="granted" scoped="" ref="0x7f37e8e3a020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f37e8e3a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f37e8e458d0" loc="41:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f37e8e458d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f37e8e45c50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f37e8e45de0"/>
        <function-ref name="request" scoped="" ref="0x7f37e8e41020"/>
        <function-ref name="granted" scoped="" ref="0x7f37e8e411b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f37e8e41340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f37e8e37020" loc="48:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f37e8e37020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f37e8e373a0"/>
        <function-ref name="txDone" scoped="" ref="0x7f37e8e37530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f37e8db5dc0" loc="44:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f37e8db5dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f37e8db4180"/>
        <function-ref name="configure" scoped="" ref="0x7f37e8db4310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f37e8db3890" loc="46:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f37e8db3890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f37e8db3c30"/>
        <function-ref name="receive" scoped="" ref="0x7f37e8db3dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f37e8db1020" loc="49:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f37e8db1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f37e8db13c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f37e8db1690" loc="50:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f37e8db1690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f37e8db1a10"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f37e8db1ba0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f37e8db1d30"/>
        <function-ref name="enableUart" scoped="" ref="0x7f37e8db0020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f37e8db01b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f37e8db0340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f37e8db04d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f37e8db0660"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f37e8db07f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f37e8db0980"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f37e8db0b10"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f37e8db0ca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f37e8db0e30"/>
        <function-ref name="getUbr" scoped="" ref="0x7f37e8daf120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f37e8daf2b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f37e8daf440"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f37e8daf5d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f37e8daf760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f37e8daf8f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f37e8dafa80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f37e8dafc10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f37e8dafda0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f37e8dae020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f37e8dae1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f37e8dae340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f37e8dae6d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f37e8dae860"/>
        <function-ref name="setUbr" scoped="" ref="0x7f37e8dae9f0"/>
        <function-ref name="tx" scoped="" ref="0x7f37e8daeb80"/>
        <function-ref name="getUctl" scoped="" ref="0x7f37e8daed10"/>
        <function-ref name="disableUart" scoped="" ref="0x7f37e8dad020"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f37e8dad1b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f37e8dad340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f37e8dad4d0"/>
        <function-ref name="rx" scoped="" ref="0x7f37e8dad660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f37e8dad7f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f37e8dad980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f37e8dadb10"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f37e8dadca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f37e8dade30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f37e8db46d0" loc="45:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f37e8db46d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f37e8db4a70"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f37e8db4c00"/>
        <function-ref name="receive" scoped="" ref="0x7f37e8db4d90"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f37e8db3020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f37e8db31b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f37e8db3340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f37e8db34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f37e8dacc90" loc="52:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f37e8dacc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f37e9326640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f37e93269b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f37e8daaac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e8da94e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e8da9020"/>
        <function-ref name="overflow" scoped="" ref="0x7f37e8da99a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f37e8db2230" loc="48:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f37e8db2230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f37e8db25d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f37e8db2760"/>
        <function-ref name="request" scoped="" ref="0x7f37e8db28f0"/>
        <function-ref name="granted" scoped="" ref="0x7f37e8db2a80"/>
        <function-ref name="isOwner" scoped="" ref="0x7f37e8db2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f37e8db5020" loc="43:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f37e8db5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f37e8db53c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f37e8db5550"/>
        <function-ref name="request" scoped="" ref="0x7f37e8db56e0"/>
        <function-ref name="granted" scoped="" ref="0x7f37e8db5870"/>
        <function-ref name="isOwner" scoped="" ref="0x7f37e8db5a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f37e8dac290" loc="51:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f37e8dac290"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f37e8dac630"/>
        <function-ref name="txDone" scoped="" ref="0x7f37e8dac7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f37e8da9dd0" loc="53:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f37e8da9dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f37e8da8180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f37e8da8310"/>
        <function-ref name="led1On" scoped="" ref="0x7f37e8da84a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f37e8da8630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f37e8da87c0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8da8950"/>
        <function-ref name="led1Off" scoped="" ref="0x7f37e8da8ae0"/>
        <function-ref name="led2On" scoped="" ref="0x7f37e8da71b0"/>
        <function-ref name="set" scoped="" ref="0x7f37e8da8e00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f37e8da8c70"/>
        <function-ref name="led0On" scoped="" ref="0x7f37e8da7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f37e8d993b0" loc="78:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f37e8d993b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f37e8d99730"/>
        <function-ref name="txDone" scoped="" ref="0x7f37e8d998c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f37e8d9f080" loc="76:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f37e8d9f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f37e8d9f400"/>
        <function-ref name="stop" scoped="" ref="0x7f37e8d9f590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f37e8d9f8b0" loc="77:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f37e8d9f8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f37e8d9fc30"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f37e8d9fdc0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f37e8d9e020"/>
        <function-ref name="enableUart" scoped="" ref="0x7f37e8d9e1b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f37e8d9e340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f37e8d9e4d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f37e8d9e660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f37e8d9e7f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f37e8d9e980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f37e8d9eb10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f37e8d9eca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f37e8d9ee30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f37e8d9c020"/>
        <function-ref name="getUbr" scoped="" ref="0x7f37e8d9c2b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f37e8d9c440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f37e8d9c5d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f37e8d9c760"/>
        <function-ref name="isUart" scoped="" ref="0x7f37e8d9c8f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f37e8d9ca80"/>
        <function-ref name="isSpi" scoped="" ref="0x7f37e8d9cc10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f37e8d9cda0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f37e8d9b020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f37e8d9b1b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f37e8d9b340"/>
        <function-ref name="getMode" scoped="" ref="0x7f37e8d9b4d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f37e8d9b860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f37e8d9b9f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f37e8d9bb80"/>
        <function-ref name="tx" scoped="" ref="0x7f37e8d9bd10"/>
        <function-ref name="getUctl" scoped="" ref="0x7f37e8d9a020"/>
        <function-ref name="disableUart" scoped="" ref="0x7f37e8d9a1b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f37e8d9a340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f37e8d9a4d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f37e8d9a660"/>
        <function-ref name="rx" scoped="" ref="0x7f37e8d9a7f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f37e8d9a980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f37e8d9ab10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f37e8d9aca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f37e8d9ae30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f37e8d99020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f37e8d81800" loc="80:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f37e8d81800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8d81b80"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8d81d10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8d80020"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8d801b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8d80340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8d804d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8d80660"/>
        <function-ref name="get" scoped="" ref="0x7f37e8d807f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8d80980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8d80b10"/>
        <function-ref name="set" scoped="" ref="0x7f37e8d80ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8d80e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8d7f020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8d7f2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8d7f440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f37e8d91dc0" loc="76:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f37e8d91dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f37e8d90180"/>
        <function-ref name="txDone" scoped="" ref="0x7f37e8d90310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f37e8d7f800" loc="81:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f37e8d7f800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8d7fb80"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8d7fd10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8d7e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8d7e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8d7e340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8d7e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8d7e660"/>
        <function-ref name="get" scoped="" ref="0x7f37e8d7e7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8d7e980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8d7eb10"/>
        <function-ref name="set" scoped="" ref="0x7f37e8d7eca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8d7ee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8d7d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8d7d2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8d7d440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f37e8d7d800" loc="82:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f37e8d7d800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8d7db80"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8d7dd10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8d7c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8d7c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8d7c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8d7c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8d7c660"/>
        <function-ref name="get" scoped="" ref="0x7f37e8d7c7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8d7c980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8d7cb10"/>
        <function-ref name="set" scoped="" ref="0x7f37e8d7cca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8d7ce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8d7b020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8d7b2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8d7b440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f37e8d95020" loc="75:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f37e8d95020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f37e8d953a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f37e8d95530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f37e8d956c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f37e8d95850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f37e8d959e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f37e8d95b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f37e8d95d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f37e8d94020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f37e8d941b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f37e8d94340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f37e8d944d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f37e8d94660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f37e8d947f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f37e8d94a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f37e8d94c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f37e8d94da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f37e8d93020"/>
        <function-ref name="isUart" scoped="" ref="0x7f37e8d931b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f37e8d93340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f37e8d934d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f37e8d93660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f37e8d937f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f37e8d93980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f37e8d93b10"/>
        <function-ref name="getMode" scoped="" ref="0x7f37e8d93ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f37e8d92220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f37e8d923b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f37e8d92540"/>
        <function-ref name="tx" scoped="" ref="0x7f37e8d926d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f37e8d92860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f37e8d929f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f37e8d92b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f37e8d92d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f37e8d91020"/>
        <function-ref name="rx" scoped="" ref="0x7f37e8d911b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f37e8d91340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f37e8d914d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f37e8d91660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f37e8d917f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f37e8d91980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f37e8d98710" loc="74:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f37e8d98710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f37e8d98a90"/>
        <function-ref name="stop" scoped="" ref="0x7f37e8d98c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f37e8d8d800" loc="79:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f37e8d8d800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8d8db80"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8d8dd10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8d82020"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8d821b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8d82340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8d824d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8d82660"/>
        <function-ref name="get" scoped="" ref="0x7f37e8d827f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8d82980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8d82b10"/>
        <function-ref name="set" scoped="" ref="0x7f37e8d82ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8d82e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8d81020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8d812b0"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8d81440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f37e8d84860" loc="78:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f37e8d84860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8d84be0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8d84d70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8d8e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8d8e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8d8e340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8d8e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8d8e660"/>
        <function-ref name="get" scoped="" ref="0x7f37e8d8e7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8d8e980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8d8eb10"/>
        <function-ref name="set" scoped="" ref="0x7f37e8d8eca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8d8ee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8d8d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8d8d2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8d8d440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f37e8d02cc0" loc="53:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f37e8d02cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8d010a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8d01230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8d013c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8d01550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8d016e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8d01870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8d01a00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8d01b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8d01d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8d00020"/>
        <function-ref name="set" scoped="" ref="0x7f37e8d001b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8d00340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8d004d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8d00760"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8d008f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f37e8ceecc0" loc="66:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f37e8ceecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8ced0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8ced230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8ced3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8ced550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8ced6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8ced870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8ceda00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8cedb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8cedd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8cec020"/>
        <function-ref name="set" scoped="" ref="0x7f37e8cec1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8cec340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8cec4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8cec760"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8cec8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f37e8ca33d0" loc="145:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f37e8ca33d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8ca3750"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8ca38e0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8ca3a70"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8ca3c00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8ca3d90"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8ca2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8ca21b0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8ca2340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8ca24d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8ca2660"/>
        <function-ref name="set" scoped="" ref="0x7f37e8ca27f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8ca2980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8ca2b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8ca2da0"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8ca1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f37e8c7e3e0" loc="165:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f37e8c7e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8c7e760"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8c7e8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8c7ea80"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8c7ec10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8c7eda0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8c7d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8c7d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8c7d340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8c7d4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8c7d660"/>
        <function-ref name="set" scoped="" ref="0x7f37e8c7d7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8c7d980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8c7db10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8c7dda0"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8c7c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f37e8ca13f0" loc="146:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f37e8ca13f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8ca1770"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8ca1900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8ca1a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8ca1c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8ca1db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8ca0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8ca01b0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8ca0340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8ca04d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8ca0660"/>
        <function-ref name="set" scoped="" ref="0x7f37e8ca07f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8ca0980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8ca0b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8ca0da0"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8c9f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f37e8ce9cc0" loc="71:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f37e8ce9cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8ce80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8ce8230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8ce83c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8ce8550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8ce86e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8ce8870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8ce8a00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8ce8b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8ce8d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8ce7020"/>
        <function-ref name="set" scoped="" ref="0x7f37e8ce71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8ce7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8ce74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8ce7760"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8ce78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f37e8cd4020" loc="84:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f37e8cd4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8cd43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8cd4530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8cd46c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8cd4850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8cd49e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8cd4b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8cd4d00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8cd3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8cd31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8cd3340"/>
        <function-ref name="set" scoped="" ref="0x7f37e8cd34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8cd3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8cd37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8cd3a80"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8cd3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f37e8cc0020" loc="97:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f37e8cc0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8cc03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8cc0530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8cc06c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8cc0850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8cc09e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8cc0b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8cc0d00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8cbf020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8cbf1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8cbf340"/>
        <function-ref name="set" scoped="" ref="0x7f37e8cbf4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8cbf660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8cbf7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8cbfa80"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8cbfc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f37e8caf020" loc="108:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f37e8caf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8caf3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8caf530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8caf6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8caf850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8caf9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8cafb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8cafd00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8cae020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8cae1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8cae340"/>
        <function-ref name="set" scoped="" ref="0x7f37e8cae4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8cae660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8cae7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8caea80"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8caec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f37e8c9b3f0" loc="149:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f37e8c9b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8c9b770"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8c9b900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8c9ba90"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8c9bc20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8c9bdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8c9a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8c9a1b0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8c9a340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8c9a4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8c9a660"/>
        <function-ref name="set" scoped="" ref="0x7f37e8c9a7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8c9a980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8c9ab10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8c9ada0"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8c99020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f37e8c8a3e0" loc="159:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f37e8c8a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8c8a760"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8c8a8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8c8aa80"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8c8ac10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8c8ada0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8c89020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8c891b0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8c89340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8c894d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8c89660"/>
        <function-ref name="set" scoped="" ref="0x7f37e8c897f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8c89980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8c89b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8c89da0"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8c88020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f37e8c763f0" loc="171:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f37e8c763f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8c76770"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8c76900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8c76a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8c76c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8c76db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8c75020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8c751b0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8c75340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8c754d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8c75660"/>
        <function-ref name="set" scoped="" ref="0x7f37e8c757f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8c75980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8c75b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8c75da0"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8c74020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f37e8cfccc0" loc="56:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f37e8cfccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8cfb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8cfb230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8cfb3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8cfb550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8cfb6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8cfb870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8cfba00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8cfbb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8cfbd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8cfa020"/>
        <function-ref name="set" scoped="" ref="0x7f37e8cfa1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8cfa340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8cfa4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8cfa760"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8cfa8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f37e8c993f0" loc="150:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f37e8c993f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8c99770"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8c99900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8c99a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8c99c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8c99db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8c98020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8c981b0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8c98340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8c984d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8c98660"/>
        <function-ref name="set" scoped="" ref="0x7f37e8c987f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8c98980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8c98b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8c98da0"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8c97020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f37e8cf8cc0" loc="61:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f37e8cf8cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8cf70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8cf7230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8cf73c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8cf7550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8cf76e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8cf7870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8cf7a00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8cf7b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8cf7d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8cf6020"/>
        <function-ref name="set" scoped="" ref="0x7f37e8cf61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8cf6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8cf64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8cf6760"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8cf68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f37e8ce3cc0" loc="74:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f37e8ce3cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8ce20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8ce2230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8ce23c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8ce2550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8ce26e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8ce2870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8ce2a00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8ce2b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8ce2d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8ce1020"/>
        <function-ref name="set" scoped="" ref="0x7f37e8ce11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8ce1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8ce14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8ce1760"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8ce18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f37e8cce020" loc="87:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f37e8cce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8cce3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8cce530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8cce6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8cce850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8cce9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8cceb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8cced00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8ccd020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8ccd1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8ccd340"/>
        <function-ref name="set" scoped="" ref="0x7f37e8ccd4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8ccd660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8ccd7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8ccda80"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8ccdc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f37e8cb9020" loc="100:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f37e8cb9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8cb93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8cb9530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8cb96c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8cb9850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8cb99e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8cb9b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8cb9d00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8cb8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8cb81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8cb8340"/>
        <function-ref name="set" scoped="" ref="0x7f37e8cb84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8cb8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8cb87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8cb8a80"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8cb8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f37e8ca9020" loc="111:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f37e8ca9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8ca93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8ca9530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8ca96c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8ca9850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8ca99e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8ca9b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8ca9d00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8ca8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8ca81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8ca8340"/>
        <function-ref name="set" scoped="" ref="0x7f37e8ca84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8ca8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8ca87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8ca8a80"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8ca8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f37e8d06cc0" loc="51:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f37e8d06cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8d050a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8d05230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8d053c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8d05550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8d056e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8d05870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8d05a00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8d05b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8d05d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8d04020"/>
        <function-ref name="set" scoped="" ref="0x7f37e8d041b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8d04340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8d044d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8d04760"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8d048f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f37e8cf2cc0" loc="64:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f37e8cf2cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8cf1180"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8cf1310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8cf14a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8cf1630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8cf17c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8cf1950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8cf1ae0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8cf1c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8cf1e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8cf0020"/>
        <function-ref name="set" scoped="" ref="0x7f37e8cf01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8cf0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8cf04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8cf0760"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8cf08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f37e8cddcc0" loc="77:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f37e8cddcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8cdc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8cdc230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8cdc3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8cdc550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8cdc6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8cdc870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8cdca00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8cdcb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8cdcd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8cdb020"/>
        <function-ref name="set" scoped="" ref="0x7f37e8cdb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8cdb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8cdb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8cdb760"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8cdb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f37e8ca53f0" loc="144:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f37e8ca53f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8ca5770"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8ca5900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8ca5a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8ca5c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8ca5db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8ca4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8ca41b0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8ca4340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8ca44d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8ca4660"/>
        <function-ref name="set" scoped="" ref="0x7f37e8ca47f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8ca4980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8ca4b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8ca4da0"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8ca3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f37e8c843e0" loc="162:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f37e8c843e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8c84760"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8c848f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8c84a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8c84c10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8c84da0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8c83020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8c831b0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8c83340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8c834d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8c83660"/>
        <function-ref name="set" scoped="" ref="0x7f37e8c837f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8c83980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8c83b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8c83da0"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8c82020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f37e8c783e0" loc="169:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f37e8c783e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8c78760"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8c788f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8c78a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8c78c10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8c78da0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8c77020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8c771b0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8c77340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8c774d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8c77660"/>
        <function-ref name="set" scoped="" ref="0x7f37e8c777f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8c77980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8c77b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8c77da0"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8c76020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f37e8c913f0" loc="155:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f37e8c913f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8c91770"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8c91900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8c91a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8c91c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8c91db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8c90020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8c901b0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8c90340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8c904d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8c90660"/>
        <function-ref name="set" scoped="" ref="0x7f37e8c907f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8c90980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8c90b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8c90da0"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8c8f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f37e8cd9cc0" loc="82:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f37e8cd9cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8cd8410"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8cd85a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8cd8730"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8cd88c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8cd8a50"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8cd8be0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8cd8d70"/>
        <function-ref name="get" scoped="" ref="0x7f37e8cd7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8cd71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8cd7340"/>
        <function-ref name="set" scoped="" ref="0x7f37e8cd74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8cd7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8cd77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8cd7a80"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8cd7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f37e8cc4020" loc="95:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f37e8cc4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8cc43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8cc4530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8cc46c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8cc4850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8cc49e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8cc4b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8cc4d00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8cc3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8cc31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8cc3340"/>
        <function-ref name="set" scoped="" ref="0x7f37e8cc34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8cc3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8cc37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8cc3a80"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8cc3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f37e8cb3020" loc="106:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f37e8cb3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8cb33a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8cb3530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8cb36c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8cb3850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8cb39e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8cb3b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8cb3d00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8cb2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8cb21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8cb2340"/>
        <function-ref name="set" scoped="" ref="0x7f37e8cb24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8cb2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8cb27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8cb2a80"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8cb2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f37e8c823e0" loc="163:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f37e8c823e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8c82760"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8c828f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8c82a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8c82c10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8c82da0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8c81020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8c811b0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8c81340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8c814d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8c81660"/>
        <function-ref name="set" scoped="" ref="0x7f37e8c817f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8c81980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8c81b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8c81da0"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8c80020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f37e8c973e0" loc="152:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f37e8c973e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8c97760"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8c978f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8c97a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8c97c10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8c97da0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8c96020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8c961b0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8c96340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8c964d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8c96660"/>
        <function-ref name="set" scoped="" ref="0x7f37e8c967f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8c96980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8c96b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8c96da0"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8c95020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f37e8d00cc0" loc="54:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f37e8d00cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8cff0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8cff230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8cff3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8cff550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8cff6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8cff870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8cffa00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8cffb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8cffd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8cfe020"/>
        <function-ref name="set" scoped="" ref="0x7f37e8cfe1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8cfe340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8cfe4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8cfe760"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8cfe8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f37e8ceccc0" loc="67:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f37e8ceccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8cea0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8cea230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8cea3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8cea550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8cea6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8cea870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8ceaa00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8ceab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8cead20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8ce9020"/>
        <function-ref name="set" scoped="" ref="0x7f37e8ce91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8ce9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8ce94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8ce9760"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8ce98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f37e8cb7020" loc="104:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f37e8cb7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8cb73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8cb7530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8cb76c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8cb7850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8cb79e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8cb7b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8cb7d00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8cb6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8cb61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8cb6340"/>
        <function-ref name="set" scoped="" ref="0x7f37e8cb64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8cb6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8cb67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8cb6a80"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8cb6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f37e8ce7cc0" loc="72:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f37e8ce7cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8ce60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8ce6230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8ce63c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8ce6550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8ce66e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8ce6870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8ce6a00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8ce6b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8ce6d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8ce5020"/>
        <function-ref name="set" scoped="" ref="0x7f37e8ce51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8ce5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8ce54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8ce5760"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8ce58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f37e8cd2020" loc="85:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f37e8cd2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8cd23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8cd2530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8cd26c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8cd2850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8cd29e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8cd2b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8cd2d00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8cd1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8cd11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8cd1340"/>
        <function-ref name="set" scoped="" ref="0x7f37e8cd14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8cd1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8cd17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8cd1a80"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8cd1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f37e8cbe020" loc="98:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f37e8cbe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8cbe3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8cbe530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8cbe6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8cbe850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8cbe9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8cbeb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8cbed00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8cbd020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8cbd1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8cbd340"/>
        <function-ref name="set" scoped="" ref="0x7f37e8cbd4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8cbd660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8cbd7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8cbda80"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8cbdc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f37e8cad020" loc="109:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f37e8cad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8cad3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8cad530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8cad6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8cad850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8cad9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8cadb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8cadd00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8cac020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8cac1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8cac340"/>
        <function-ref name="set" scoped="" ref="0x7f37e8cac4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8cac660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8cac7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8caca80"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8cacc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f37e8c933f0" loc="154:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f37e8c933f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8c93770"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8c93900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8c93a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8c93c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8c93db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8c92020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8c921b0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8c92340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8c924d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8c92660"/>
        <function-ref name="set" scoped="" ref="0x7f37e8c927f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8c92980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8c92b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8c92da0"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8c91020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f37e8d0ce00" loc="49:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f37e8d0ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8d091c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8d09350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8d094e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8d09670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8d09800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8d09990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8d09b20"/>
        <function-ref name="get" scoped="" ref="0x7f37e8d09cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8d09e40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8d08020"/>
        <function-ref name="set" scoped="" ref="0x7f37e8d081b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8d08340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8d084d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8d08760"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8d088f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f37e8cf6cc0" loc="62:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f37e8cf6cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8cf50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8cf5230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8cf53c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8cf5550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8cf56e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8cf5870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8cf5a00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8cf5b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8cf5d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8cf4020"/>
        <function-ref name="set" scoped="" ref="0x7f37e8cf41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8cf4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8cf44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8cf4760"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8cf48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f37e8ce1cc0" loc="75:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f37e8ce1cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8ce00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8ce0230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8ce03c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8ce0550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8ce06e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8ce0870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8ce0a00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8ce0b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8ce0d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8cdf020"/>
        <function-ref name="set" scoped="" ref="0x7f37e8cdf1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8cdf340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8cdf4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8cdf760"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8cdf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f37e8ccc020" loc="88:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f37e8ccc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8ccc3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8ccc530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8ccc6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8ccc850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8ccc9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8cccb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8cccd00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8ccb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8ccb1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8ccb340"/>
        <function-ref name="set" scoped="" ref="0x7f37e8ccb4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8ccb660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8ccb7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8ccba80"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8ccbc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f37e8c8f3f0" loc="156:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f37e8c8f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8c8f770"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8c8f900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8c8fa90"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8c8fc20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8c8fdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8c8e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8c8e1b0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8c8e340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8c8e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8c8e660"/>
        <function-ref name="set" scoped="" ref="0x7f37e8c8e7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8c8e980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8c8eb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8c8eda0"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8c8d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f37e8c883e0" loc="160:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f37e8c883e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8c88760"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8c888f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8c88a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8c88c10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8c88da0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8c87020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8c871b0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8c87340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8c874d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8c87660"/>
        <function-ref name="set" scoped="" ref="0x7f37e8c877f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8c87980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8c87b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8c87da0"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8c86020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f37e8c7c3e0" loc="166:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f37e8c7c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8c7c760"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8c7c8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8c7ca80"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8c7cc10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8c7cda0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8c7b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8c7b1b0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8c7b340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8c7b4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8c7b660"/>
        <function-ref name="set" scoped="" ref="0x7f37e8c7b7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8c7b980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8c7bb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8c7bda0"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8c7a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f37e8cc8020" loc="93:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f37e8cc8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8cc83a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8cc8530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8cc86c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8cc8850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8cc89e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8cc8b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8cc8d00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8cc7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8cc71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8cc7340"/>
        <function-ref name="set" scoped="" ref="0x7f37e8cc74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8cc7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8cc77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8cc7a80"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8cc7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f37e8c8d3f0" loc="157:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f37e8c8d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8c8d770"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8c8d900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8c8da90"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8c8dc20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8c8ddb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8c8b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8c8b1b0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8c8b340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8c8b4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8c8b660"/>
        <function-ref name="set" scoped="" ref="0x7f37e8c8b7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8c8b980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8c8bb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8c8bda0"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8c8a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f37e8d04cc0" loc="52:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f37e8d04cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8d030a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8d03230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8d033c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8d03550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8d036e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8d03870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8d03a00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8d03b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8d03d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8d02020"/>
        <function-ref name="set" scoped="" ref="0x7f37e8d021b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8d02340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8d024d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8d02760"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8d028f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f37e8cf0cc0" loc="65:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f37e8cf0cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8cef0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8cef230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8cef3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8cef550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8cef6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8cef870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8cefa00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8cefb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8cefd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8cee020"/>
        <function-ref name="set" scoped="" ref="0x7f37e8cee1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8cee340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8cee4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8cee760"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8cee8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f37e8cdbcc0" loc="78:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f37e8cdbcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8cda0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8cda230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8cda3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8cda550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8cda6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8cda870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8cdaa00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8cdab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8cdad20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8cd9020"/>
        <function-ref name="set" scoped="" ref="0x7f37e8cd91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8cd9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8cd94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8cd9760"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8cd98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f37e8c953f0" loc="153:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f37e8c953f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8c95770"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8c95900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8c95a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8c95c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8c95db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8c94020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8c941b0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8c94340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8c944d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8c94660"/>
        <function-ref name="set" scoped="" ref="0x7f37e8c947f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8c94980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8c94b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8c94da0"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8c93020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f37e8c803e0" loc="164:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f37e8c803e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8c80760"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8c808f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8c80a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8c80c10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8c80da0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8c7f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8c7f1b0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8c7f340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8c7f4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8c7f660"/>
        <function-ref name="set" scoped="" ref="0x7f37e8c7f7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8c7f980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8c7fb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8c7fda0"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8c7e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f37e8cd6020" loc="83:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f37e8cd6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8cd63a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8cd6530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8cd66c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8cd6850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8cd69e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8cd6b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8cd6d00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8cd5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8cd51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8cd5340"/>
        <function-ref name="set" scoped="" ref="0x7f37e8cd54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8cd5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8cd57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8cd5a80"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8cd5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f37e8cc2020" loc="96:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f37e8cc2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8cc23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8cc2530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8cc26c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8cc2850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8cc29e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8cc2b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8cc2d00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8cc1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8cc11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8cc1340"/>
        <function-ref name="set" scoped="" ref="0x7f37e8cc14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8cc1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8cc17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8cc1a80"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8cc1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f37e8cb1020" loc="107:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f37e8cb1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8cb13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8cb1530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8cb16c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8cb1850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8cb19e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8cb1b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8cb1d00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8cb0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8cb01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8cb0340"/>
        <function-ref name="set" scoped="" ref="0x7f37e8cb04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8cb0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8cb07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8cb0a80"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8cb0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f37e8cfecc0" loc="55:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f37e8cfecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8cfd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8cfd230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8cfd3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8cfd550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8cfd6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8cfd870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8cfda00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8cfdb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8cfdd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8cfc020"/>
        <function-ref name="set" scoped="" ref="0x7f37e8cfc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8cfc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8cfc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8cfc760"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8cfc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f37e8cb5020" loc="105:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f37e8cb5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8cb53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8cb5530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8cb56c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8cb5850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8cb59e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8cb5b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8cb5d00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8cb4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8cb41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8cb4340"/>
        <function-ref name="set" scoped="" ref="0x7f37e8cb44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8cb4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8cb47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8cb4a80"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8cb4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f37e8cfacc0" loc="60:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f37e8cfacc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8cf90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8cf9230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8cf93c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8cf9550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8cf96e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8cf9870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8cf9a00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8cf9b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8cf9d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8cf8020"/>
        <function-ref name="set" scoped="" ref="0x7f37e8cf81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8cf8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8cf84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8cf8760"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8cf88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f37e8ce5cc0" loc="73:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f37e8ce5cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8ce40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8ce4230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8ce43c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8ce4550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8ce46e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8ce4870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8ce4a00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8ce4b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8ce4d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8ce3020"/>
        <function-ref name="set" scoped="" ref="0x7f37e8ce31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8ce3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8ce34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8ce3760"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8ce38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f37e8cd0020" loc="86:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f37e8cd0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8cd03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8cd0530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8cd06c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8cd0850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8cd09e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8cd0b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8cd0d00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8ccf020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8ccf1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8ccf340"/>
        <function-ref name="set" scoped="" ref="0x7f37e8ccf4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8ccf660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8ccf7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8ccfa80"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8ccfc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f37e8cbb020" loc="99:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f37e8cbb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8cbb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8cbb530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8cbb6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8cbb850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8cbb9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8cbbb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8cbbd00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8cba020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8cba1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8cba340"/>
        <function-ref name="set" scoped="" ref="0x7f37e8cba4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8cba660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8cba7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8cbaa80"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8cbac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f37e8cab020" loc="110:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f37e8cab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8cab3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8cab530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8cab6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8cab850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8cab9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8cabb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8cabd00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8caa020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8caa1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8caa340"/>
        <function-ref name="set" scoped="" ref="0x7f37e8caa4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8caa660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8caa7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8caaa80"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8caac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f37e8d08cc0" loc="50:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f37e8d08cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8d070a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8d07230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8d073c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8d07550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8d076e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8d07870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8d07a00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8d07b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8d07d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8d06020"/>
        <function-ref name="set" scoped="" ref="0x7f37e8d061b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8d06340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8d064d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8d06760"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8d068f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f37e8cf4cc0" loc="63:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f37e8cf4cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8cf30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8cf3230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8cf33c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8cf3550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8cf36e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8cf3870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8cf3a00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8cf3b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8cf3d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8cf2020"/>
        <function-ref name="set" scoped="" ref="0x7f37e8cf21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8cf2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8cf24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8cf2760"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8cf28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f37e8cdfcc0" loc="76:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f37e8cdfcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8cde0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8cde230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8cde3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8cde550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8cde6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8cde870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8cdea00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8cdeb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8cded20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8cdd020"/>
        <function-ref name="set" scoped="" ref="0x7f37e8cdd1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8cdd340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8cdd4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8cdd760"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8cdd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f37e8cca020" loc="89:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f37e8cca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8cca3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8cca530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8cca6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8cca850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8cca9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8ccab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8ccad00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8cc9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8cc91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8cc9340"/>
        <function-ref name="set" scoped="" ref="0x7f37e8cc94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8cc9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8cc97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8cc9a80"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8cc9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f37e8c9d3d0" loc="148:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f37e8c9d3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8c9d750"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8c9d8e0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8c9da70"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8c9dc00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8c9dd90"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8c9c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8c9c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8c9c340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8c9c4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8c9c660"/>
        <function-ref name="set" scoped="" ref="0x7f37e8c9c7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8c9c980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8c9cb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8c9cda0"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8c9b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f37e8c863e0" loc="161:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f37e8c863e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8c86760"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8c868f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8c86a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8c86c10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8c86da0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8c85020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8c851b0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8c85340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8c854d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8c85660"/>
        <function-ref name="set" scoped="" ref="0x7f37e8c857f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8c85980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8c85b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8c85da0"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8c84020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f37e8c9f3f0" loc="147:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f37e8c9f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8c9f770"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8c9f900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8c9fa90"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8c9fc20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8c9fdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8c9e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8c9e1b0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8c9e340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8c9e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8c9e660"/>
        <function-ref name="set" scoped="" ref="0x7f37e8c9e7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8c9e980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8c9eb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8c9eda0"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8c9d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f37e8cc6020" loc="94:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f37e8cc6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8cc63a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8cc6530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8cc66c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8cc6850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8cc69e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8cc6b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8cc6d00"/>
        <function-ref name="get" scoped="" ref="0x7f37e8cc5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8cc51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8cc5340"/>
        <function-ref name="set" scoped="" ref="0x7f37e8cc54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8cc5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8cc57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8cc5a80"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8cc5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f37e8c7a3e0" loc="168:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f37e8c7a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8c7a760"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8c7a8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8c7aa80"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8c7ac10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8c7ada0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8c79020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8c791b0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8c79340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8c794d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8c79660"/>
        <function-ref name="set" scoped="" ref="0x7f37e8c797f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8c79980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8c79b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8c79da0"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8c78020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f37e8c743f0" loc="172:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f37e8c743f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8c74770"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8c74900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8c74a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8c74c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8c74db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8c73020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8c731b0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8c73340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8c734d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8c73660"/>
        <function-ref name="set" scoped="" ref="0x7f37e8c737f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8c73980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8c73b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8c73da0"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8c72020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f37e8ca7060" loc="143:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f37e8ca7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8ca77e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8ca7970"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8ca7b00"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8ca7c90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8ca7e20"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8ca6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8ca61b0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8ca6340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8ca64d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8ca6660"/>
        <function-ref name="set" scoped="" ref="0x7f37e8ca67f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8ca6980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8ca6b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8ca6da0"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8ca5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8c483f0" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8c483f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8c48770"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8c48900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8c48a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8c48c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8c48db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8c47020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8c471b0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8c47340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8c474d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8c47660"/>
        <function-ref name="set" scoped="" ref="0x7f37e8c477f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8c47980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8c47b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8c47da0"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8c46020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8c44e00" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8c44e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8c431c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8c43350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8c434e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8c43670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8c43800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8c43990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8c43b20"/>
        <function-ref name="get" scoped="" ref="0x7f37e8c43cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8c43e40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8c42020"/>
        <function-ref name="set" scoped="" ref="0x7f37e8c421b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8c42340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8c424d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8c42760"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8c428f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8c3f740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8c3f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8c3fac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8c3fc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8c3fde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8c3d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8c3d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8c3d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8c3d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8c3d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8c3d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8c3d980"/>
        <function-ref name="set" scoped="" ref="0x7f37e8c3db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8c3dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8c3de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8c3c120"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8c3c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8c39100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8c39100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8c39480"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8c39610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8c397a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8c39930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8c39ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8c39c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8c39de0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8c38020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8c381b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8c38340"/>
        <function-ref name="set" scoped="" ref="0x7f37e8c384d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8c38660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8c387f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8c38a80"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8c38c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8c35d10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8c35d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8c340e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8c34270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8c34400"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8c34590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8c34720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8c348b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8c34a40"/>
        <function-ref name="get" scoped="" ref="0x7f37e8c34bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8c34d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8c33020"/>
        <function-ref name="set" scoped="" ref="0x7f37e8c331b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8c33340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8c334d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8c33760"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8c338f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8c30740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8c30740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8c30ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8c30c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8c30de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8c2f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8c2f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8c2f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8c2f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8c2f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8c2f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8c2f980"/>
        <function-ref name="set" scoped="" ref="0x7f37e8c2fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8c2fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8c2fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8c2e120"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8c2e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8c2b100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8c2b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8c2b480"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8c2b610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8c2b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8c2b930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8c2bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8c2bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8c2bde0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8c2a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8c2a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8c2a340"/>
        <function-ref name="set" scoped="" ref="0x7f37e8c2a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8c2a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8c2a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8c2aa80"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8c2ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8c27d10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8c27d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8c260e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8c26270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8c26400"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8c26590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8c26720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8c268b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8c26a40"/>
        <function-ref name="get" scoped="" ref="0x7f37e8c26bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8c26d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8c25020"/>
        <function-ref name="set" scoped="" ref="0x7f37e8c251b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8c25340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8c254d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8c25760"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8c258f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8c22740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8c22740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8c22ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8c22c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8c22de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8c21020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8c211b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8c21340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8c214d0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8c21660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8c217f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8c21980"/>
        <function-ref name="set" scoped="" ref="0x7f37e8c21b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8c21ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8c21e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8c20120"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8c202b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8c1d100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8c1d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8c1d480"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8c1d610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8c1d7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8c1d930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8c1dac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8c1dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8c1dde0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8c1c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8c1c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8c1c340"/>
        <function-ref name="set" scoped="" ref="0x7f37e8c1c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8c1c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8c1c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8c1ca80"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8c1cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8c19d10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8c19d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8c170e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8c17270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8c17400"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8c17590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8c17720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8c178b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8c17a40"/>
        <function-ref name="get" scoped="" ref="0x7f37e8c17bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8c17d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8c16020"/>
        <function-ref name="set" scoped="" ref="0x7f37e8c161b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8c16340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8c164d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8c16760"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8c168f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8c13740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8c13740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8c13ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8c13c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8c13de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8c12020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8c121b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8c12340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8c124d0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8c12660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8c127f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8c12980"/>
        <function-ref name="set" scoped="" ref="0x7f37e8c12b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8c12ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8c12e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8c11120"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8c112b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8c0e260" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8c0e260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8c0e5e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8c0e770"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8c0e900"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8c0ea90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8c0ec20"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8c0edb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8c0d020"/>
        <function-ref name="get" scoped="" ref="0x7f37e8c0d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8c0d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8c0d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f37e8c0d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8c0d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8c0d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8c0dc10"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8c0dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8c0ad10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8c0ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8c090e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8c09270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8c09400"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8c09590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8c09720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8c098b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8c09a40"/>
        <function-ref name="get" scoped="" ref="0x7f37e8c09bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8c09d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8c08020"/>
        <function-ref name="set" scoped="" ref="0x7f37e8c081b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8c08340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8c084d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8c08760"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8c088f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8c05740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8c05740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8c05ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8c05c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8c05de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8c04020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8c041b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8c04340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8c044d0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8c04660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8c047f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8c04980"/>
        <function-ref name="set" scoped="" ref="0x7f37e8c04b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8c04ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8c04e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8c03120"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8c032b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8c00100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8c00100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8c00480"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8c00610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8c007a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8c00930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8c00ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8c00c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8c00de0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8bff020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8bff1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8bff340"/>
        <function-ref name="set" scoped="" ref="0x7f37e8bff4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8bff660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8bff7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8bffa80"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8bffc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8bfcd10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8bfcd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8bfb0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8bfb270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8bfb400"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8bfb590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8bfb720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8bfb8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8bfba40"/>
        <function-ref name="get" scoped="" ref="0x7f37e8bfbbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8bfbd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8bfa020"/>
        <function-ref name="set" scoped="" ref="0x7f37e8bfa1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8bfa340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8bfa4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8bfa760"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8bfa8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8bf7740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8bf7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8bf7ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8bf7c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8bf7de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8bf6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8bf61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8bf6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8bf64d0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8bf6660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8bf67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8bf6980"/>
        <function-ref name="set" scoped="" ref="0x7f37e8bf6b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8bf6ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8bf6e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8bf5120"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8bf52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8bf1100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8bf1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8bf1480"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8bf1610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8bf17a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8bf1930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8bf1ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8bf1c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8bf1de0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8bf0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8bf01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8bf0340"/>
        <function-ref name="set" scoped="" ref="0x7f37e8bf04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8bf0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8bf07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8bf0a80"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8bf0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8bedd10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8bedd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8bec0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8bec270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8bec400"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8bec590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8bec720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8bec8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8beca40"/>
        <function-ref name="get" scoped="" ref="0x7f37e8becbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8becd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8beb020"/>
        <function-ref name="set" scoped="" ref="0x7f37e8beb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8beb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8beb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8beb760"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8beb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8be8740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8be8740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8be8ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8be8c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8be8de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8be7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8be71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8be7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8be74d0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8be7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8be77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8be7980"/>
        <function-ref name="set" scoped="" ref="0x7f37e8be7b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8be7ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8be7e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8be6120"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8be62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8be3100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8be3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8be3480"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8be3610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8be37a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8be3930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8be3ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8be3c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8be3de0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8be2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8be21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8be2340"/>
        <function-ref name="set" scoped="" ref="0x7f37e8be24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8be2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8be27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8be2a80"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8be2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8bdfd10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8bdfd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8bde0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8bde270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8bde400"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8bde590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8bde720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8bde8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8bdea40"/>
        <function-ref name="get" scoped="" ref="0x7f37e8bdebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8bded60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8bdd020"/>
        <function-ref name="set" scoped="" ref="0x7f37e8bdd1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8bdd340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8bdd4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8bdd760"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8bdd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8bda740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8bda740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8bdaac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8bdac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8bdade0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8bd9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8bd91b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8bd9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8bd94d0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8bd9660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8bd97f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8bd9980"/>
        <function-ref name="set" scoped="" ref="0x7f37e8bd9b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8bd9ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8bd9e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8bd8120"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8bd82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8bd53f0" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8bd53f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8bd5770"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8bd5900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8bd5a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8bd5c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8bd5db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8bd4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8bd41b0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8bd4340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8bd44d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8bd4660"/>
        <function-ref name="set" scoped="" ref="0x7f37e8bd47f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8bd4980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8bd4b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8bd4da0"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8bd3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8bd1e00" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8bd1e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8bcf1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8bcf350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8bcf4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8bcf670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8bcf800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8bcf990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8bcfb20"/>
        <function-ref name="get" scoped="" ref="0x7f37e8bcfcb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8bcfe40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8bce020"/>
        <function-ref name="set" scoped="" ref="0x7f37e8bce1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8bce340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8bce4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8bce760"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8bce8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8bcb740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8bcb740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8bcbac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8bcbc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8bcbde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8bca020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8bca1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8bca340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8bca4d0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8bca660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8bca7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8bca980"/>
        <function-ref name="set" scoped="" ref="0x7f37e8bcab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8bcaca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8bcae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8bc9120"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8bc92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8bc6100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8bc6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8bc6480"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8bc6610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8bc67a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8bc6930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8bc6ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8bc6c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8bc6de0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8bc5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8bc51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8bc5340"/>
        <function-ref name="set" scoped="" ref="0x7f37e8bc54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8bc5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8bc57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8bc5a80"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8bc5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8bc2d10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8bc2d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8bc10e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8bc1270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8bc1400"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8bc1590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8bc1720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8bc18b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8bc1a40"/>
        <function-ref name="get" scoped="" ref="0x7f37e8bc1bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8bc1d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8bc0020"/>
        <function-ref name="set" scoped="" ref="0x7f37e8bc01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8bc0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8bc04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8bc0760"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8bc08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8bbd740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8bbd740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8bbdac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8bbdc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8bbdde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8bbc020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8bbc1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8bbc340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8bbc4d0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8bbc660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8bbc7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8bbc980"/>
        <function-ref name="set" scoped="" ref="0x7f37e8bbcb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8bbcca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8bbce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8bbb120"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8bbb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8bb8100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8bb8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8bb8480"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8bb8610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8bb87a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8bb8930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8bb8ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8bb8c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8bb8de0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8bb7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8bb71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8bb7340"/>
        <function-ref name="set" scoped="" ref="0x7f37e8bb74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8bb7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8bb77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8bb7a80"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8bb7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8bb4d10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8bb4d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8bb30e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8bb3270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8bb3400"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8bb3590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8bb3720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8bb38b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8bb3a40"/>
        <function-ref name="get" scoped="" ref="0x7f37e8bb3bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8bb3d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8bb2020"/>
        <function-ref name="set" scoped="" ref="0x7f37e8bb21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8bb2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8bb24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8bb2760"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8bb28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8baf740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8baf740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8bafac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8bafc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8bafde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8bae020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8bae1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8bae340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8bae4d0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8bae660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8bae7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8bae980"/>
        <function-ref name="set" scoped="" ref="0x7f37e8baeb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8baeca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8baee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8bad120"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8bad2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8baa100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8baa100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8baa480"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8baa610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8baa7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8baa930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8baaac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8baac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8baade0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8ba8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8ba81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8ba8340"/>
        <function-ref name="set" scoped="" ref="0x7f37e8ba84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8ba8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8ba87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8ba8a80"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8ba8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8ba5d10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8ba5d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8ba40e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8ba4270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8ba4400"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8ba4590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8ba4720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8ba48b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8ba4a40"/>
        <function-ref name="get" scoped="" ref="0x7f37e8ba4bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8ba4d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8ba3020"/>
        <function-ref name="set" scoped="" ref="0x7f37e8ba31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8ba3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8ba34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8ba3760"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8ba38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8ba0740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8ba0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8ba0ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8ba0c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8ba0de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8b9f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8b9f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8b9f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8b9f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8b9f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8b9f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8b9f980"/>
        <function-ref name="set" scoped="" ref="0x7f37e8b9fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8b9fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8b9fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8b9e120"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8b9e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8b9b100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8b9b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8b9b480"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8b9b610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8b9b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8b9b930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8b9bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8b9bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8b9bde0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8b9a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8b9a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8b9a340"/>
        <function-ref name="set" scoped="" ref="0x7f37e8b9a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8b9a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8b9a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8b9aa80"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8b9ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8b97d10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8b97d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8b960e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8b96270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8b96400"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8b96590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8b96720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8b968b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8b96a40"/>
        <function-ref name="get" scoped="" ref="0x7f37e8b96bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8b96d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8b95020"/>
        <function-ref name="set" scoped="" ref="0x7f37e8b951b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8b95340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8b954d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8b95760"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8b958f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8b92740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8b92740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8b92ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8b92c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8b92de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8b91020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8b911b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8b91340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8b914d0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8b91660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8b917f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8b91980"/>
        <function-ref name="set" scoped="" ref="0x7f37e8b91b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8b91ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8b91e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8b90120"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8b902b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8b8d100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8b8d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8b8d480"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8b8d610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8b8d7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8b8d930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8b8dac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8b8dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8b8dde0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8b8c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8b8c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8b8c340"/>
        <function-ref name="set" scoped="" ref="0x7f37e8b8c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8b8c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8b8c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8b8ca80"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8b8cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8b89d10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8b89d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8b880e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8b88270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8b88400"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8b88590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8b88720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8b888b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8b88a40"/>
        <function-ref name="get" scoped="" ref="0x7f37e8b88bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8b88d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8b87020"/>
        <function-ref name="set" scoped="" ref="0x7f37e8b871b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8b87340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8b874d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8b87760"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8b878f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8b83740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8b83740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8b83ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8b83c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8b83de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8b82020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8b821b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8b82340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8b824d0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8b82660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8b827f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8b82980"/>
        <function-ref name="set" scoped="" ref="0x7f37e8b82b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8b82ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8b82e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8b81120"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8b812b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8b7e100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8b7e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8b7e480"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8b7e610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8b7e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8b7e930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8b7eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8b7ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8b7ede0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8b7d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8b7d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8b7d340"/>
        <function-ref name="set" scoped="" ref="0x7f37e8b7d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8b7d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8b7d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8b7da80"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8b7dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8b7ad10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8b7ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8b790e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8b79270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8b79400"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8b79590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8b79720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8b798b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8b79a40"/>
        <function-ref name="get" scoped="" ref="0x7f37e8b79bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8b79d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8b78020"/>
        <function-ref name="set" scoped="" ref="0x7f37e8b781b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8b78340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8b784d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8b78760"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8b788f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8b75740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8b75740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8b75ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8b75c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8b75de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8b74020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8b741b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8b74340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8b744d0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8b74660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8b747f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8b74980"/>
        <function-ref name="set" scoped="" ref="0x7f37e8b74b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8b74ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8b74e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8b73120"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8b732b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8b70100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8b70100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8b70480"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8b70610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8b707a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8b70930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8b70ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8b70c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8b70de0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8b6f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8b6f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8b6f340"/>
        <function-ref name="set" scoped="" ref="0x7f37e8b6f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8b6f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8b6f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8b6fa80"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8b6fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8b6cd10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8b6cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8b6b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8b6b270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8b6b400"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8b6b590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8b6b720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8b6b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8b6ba40"/>
        <function-ref name="get" scoped="" ref="0x7f37e8b6bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8b6bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8b6a020"/>
        <function-ref name="set" scoped="" ref="0x7f37e8b6a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8b6a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8b6a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8b6a760"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8b6a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f37e8b67740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f37e8b67740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8b67ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8b67c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8b67de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8b66020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8b661b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8b66340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8b664d0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8b66660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8b667f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8b66980"/>
        <function-ref name="set" scoped="" ref="0x7f37e8b66b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8b66ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8b66e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8b65120"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8b652b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f37e8af69a0" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f37e8af69a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f37e9326640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f37e93269b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f37e8af37e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f37e8af21b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f37e8af3ca0"/>
        <function-ref name="overflow" scoped="" ref="0x7f37e8af2670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f37e8af5c10" loc="46:/opt/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f37e8af5c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f37e8aef020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f37e8aef1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f37e8aef340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f37e8aef4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f37e8aef660"/>
        <function-ref name="get" scoped="" ref="0x7f37e8aef7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f37e8aef980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f37e8aee020"/>
        <function-ref name="set" scoped="" ref="0x7f37e8aefb10"/>
        <function-ref name="led0On" scoped="" ref="0x7f37e8aefca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f37e8aefe30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f37e8ae1b50" loc="50:/opt/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f37e8ae1b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8ae7020"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8ae71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8ae7340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8ae74d0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8ae7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8ae77f0"/>
        <function-ref name="set" scoped="" ref="0x7f37e8ae7980"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8ae7b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f37e8ae9020" loc="46:/opt/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f37e8ae9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f37e8ae93a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f37e8ae7e30" loc="51:/opt/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f37e8ae7e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8ae01e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8ae0370"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8ae0500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8ae0690"/>
        <function-ref name="get" scoped="" ref="0x7f37e8ae0820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8ae09b0"/>
        <function-ref name="set" scoped="" ref="0x7f37e8ae0b40"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8ae0cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f37e8ae9620" loc="47:/opt/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f37e8ae9620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f37e8ae99a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f37e8ae9b30"/>
        <function-ref name="led1On" scoped="" ref="0x7f37e8ae9cc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f37e8ae9e50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f37e8ae8020"/>
        <function-ref name="get" scoped="" ref="0x7f37e8ae81b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f37e8ae8340"/>
        <function-ref name="led2Off" scoped="" ref="0x7f37e8ae8980"/>
        <function-ref name="set" scoped="" ref="0x7f37e8ae84d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f37e8ae8660"/>
        <function-ref name="led2On" scoped="" ref="0x7f37e8ae87f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f37e8adf020" loc="52:/opt/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f37e8adf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8adf3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8adf530"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8adf6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8adf850"/>
        <function-ref name="get" scoped="" ref="0x7f37e8adf9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8adfb70"/>
        <function-ref name="set" scoped="" ref="0x7f37e8adfd00"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8ade020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f37e8aec5a0" loc="41:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f37e8aec5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8aec920"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8aecab0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8aecc40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8aecdd0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8ac3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8ac31b0"/>
        <function-ref name="set" scoped="" ref="0x7f37e8ac3340"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8ac34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f37e8ac3830" loc="42:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f37e8ac3830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8ac3bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8ac3d40"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8ac2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8ac21b0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8ac2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8ac24d0"/>
        <function-ref name="set" scoped="" ref="0x7f37e8ac2660"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8ac27f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f37e8ac1dd0" loc="44:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f37e8ac1dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f37e8ac0180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f37e8ac2b50" loc="43:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f37e8ac2b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8ac1020"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8ac11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8ac1340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8ac14d0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8ac1660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8ac17f0"/>
        <function-ref name="set" scoped="" ref="0x7f37e8ac1980"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8ac1b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f37e8aadc50" loc="44:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f37e8aadc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8aac020"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8aac1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8aac340"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8aac4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8aac660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8aac7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8aac980"/>
        <function-ref name="get" scoped="" ref="0x7f37e8aacb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8aacca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8aace30"/>
        <function-ref name="set" scoped="" ref="0x7f37e8aab020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8aab1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8aab340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8aab5d0"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8aab760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f37e8abe9e0" loc="43:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f37e8abe9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8abed60"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8aad020"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8aad1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8aad340"/>
        <function-ref name="get" scoped="" ref="0x7f37e8aad4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8aad660"/>
        <function-ref name="set" scoped="" ref="0x7f37e8aad7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8aad980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f37e8aa77a0" loc="44:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f37e8aa77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8aa7b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8aa7cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8aa7e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8aa6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8aa61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8aa6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8aa64d0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8aa6660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8aa67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8aa6980"/>
        <function-ref name="set" scoped="" ref="0x7f37e8aa6b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8aa6ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8aa6e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8aa5120"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8aa52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f37e8aa8520" loc="43:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f37e8aa8520"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8aa88a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8aa8a30"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8aa8bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8aa8d50"/>
        <function-ref name="get" scoped="" ref="0x7f37e8aa7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8aa71b0"/>
        <function-ref name="set" scoped="" ref="0x7f37e8aa7340"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8aa74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f37e8aa22f0" loc="44:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f37e8aa22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8aa2670"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8aa2800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f37e8aa2990"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8aa2b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8aa2cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f37e8aa2e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8aa1020"/>
        <function-ref name="get" scoped="" ref="0x7f37e8aa11b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f37e8aa1340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f37e8aa14d0"/>
        <function-ref name="set" scoped="" ref="0x7f37e8aa1660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f37e8aa17f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f37e8aa1980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f37e8aa1c10"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8aa1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f37e8aa3060" loc="43:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f37e8aa3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f37e8aa33e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f37e8aa3570"/>
        <function-ref name="toggle" scoped="" ref="0x7f37e8aa3700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f37e8aa3890"/>
        <function-ref name="get" scoped="" ref="0x7f37e8aa3a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f37e8aa3bb0"/>
        <function-ref name="set" scoped="" ref="0x7f37e8aa3d40"/>
        <function-ref name="clr" scoped="" ref="0x7f37e8aa2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f37e856e970" loc="43:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f37e856e970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f37e856ecf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f37e856ee80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f37e8568a50" loc="48:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f37e8568a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f37e8568dd0"/>
        <function-ref name="configure" scoped="" ref="0x7f37e8567020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f37e85682b0" loc="46:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f37e85682b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f37e8568630"/>
        <function-ref name="txDone" scoped="" ref="0x7f37e85687c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f37e8570cc0" loc="42:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f37e8570cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f37e856e0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f37e856e230"/>
        <function-ref name="request" scoped="" ref="0x7f37e856e3c0"/>
        <function-ref name="granted" scoped="" ref="0x7f37e856e550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f37e856e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f37e856d8d0" loc="45:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f37e856d8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f37e856dc50"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f37e856dde0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f37e856c020"/>
        <function-ref name="enableUart" scoped="" ref="0x7f37e856c1b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f37e856c340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f37e856c4d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f37e856c660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f37e856c7f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f37e856c980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f37e856cb10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f37e856cca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f37e856ce30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f37e856b020"/>
        <function-ref name="getUbr" scoped="" ref="0x7f37e856b2b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f37e856b440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f37e856b5d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f37e856b760"/>
        <function-ref name="isUart" scoped="" ref="0x7f37e856b8f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f37e856ba80"/>
        <function-ref name="isSpi" scoped="" ref="0x7f37e856bc10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f37e856bda0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f37e856a020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f37e856a1b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f37e856a340"/>
        <function-ref name="getMode" scoped="" ref="0x7f37e856a4d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f37e856a860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f37e856a9f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f37e856ab80"/>
        <function-ref name="tx" scoped="" ref="0x7f37e856ad10"/>
        <function-ref name="getUctl" scoped="" ref="0x7f37e8569020"/>
        <function-ref name="disableUart" scoped="" ref="0x7f37e85691b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f37e8569340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f37e85694d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f37e8569660"/>
        <function-ref name="rx" scoped="" ref="0x7f37e85697f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f37e8569980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f37e8569b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f37e8569ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f37e8569e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f37e8568020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f37e856d130" loc="44:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f37e856d130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f37e856d4b0"/>
        <function-ref name="userId" scoped="" ref="0x7f37e856d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f37e8a7c2c0" loc="42:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f37e8a7c2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f37e8a7c640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f37e8a7c7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f37e8a7b8a0" loc="45:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f37e8a7b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f37e8a7bc20"/>
        <function-ref name="configure" scoped="" ref="0x7f37e8a7bdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f37e8a7f1d0" loc="40:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f37e8a7f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f37e8a7f550"/>
        <function-ref name="txDone" scoped="" ref="0x7f37e8a7f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f37e8a7d020" loc="41:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f37e8a7d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f37e8a7d3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f37e8a7d530"/>
        <function-ref name="request" scoped="" ref="0x7f37e8a7d6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f37e8a7d850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f37e8a7d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f37e8a7cad0" loc="43:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f37e8a7cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f37e8a7ce50"/>
        <function-ref name="userId" scoped="" ref="0x7f37e8a7b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f37e8a64a90" loc="43:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f37e8a64a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f37e8a64e10"/>
        <function-ref name="userId" scoped="" ref="0x7f37e8a63020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f37e8a79b60" loc="39:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f37e8a79b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f37e8a77020"/>
        <function-ref name="txDone" scoped="" ref="0x7f37e8a771b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f37e8a64480" loc="42:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f37e8a64480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f37e8a64800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f37e8a775b0" loc="40:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f37e8a775b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f37e8a77950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f37e8a77c20" loc="41:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f37e8a77c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f37e8a64020"/>
        <function-ref name="txDone" scoped="" ref="0x7f37e8a641b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f37e89ea020" loc="92:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f37e89ea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f37e89ea3c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f37e89ea550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f37e89e9cd0" loc="96:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f37e89e9cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f37e89e70a0"/>
        <function-ref name="configure" scoped="" ref="0x7f37e89e7230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f37e89ea7a0" loc="93:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f37e89ea7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f37e89eab20"/>
        <function-ref name="requested" scoped="" ref="0x7f37e89eacb0"/>
        <function-ref name="granted" scoped="" ref="0x7f37e89eae40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f37e89e9020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f37e89e91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f37e89eb210" loc="91:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f37e89eb210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f37e89eb5b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f37e89eb740"/>
        <function-ref name="request" scoped="" ref="0x7f37e89eb8d0"/>
        <function-ref name="granted" scoped="" ref="0x7f37e89eba60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f37e89ebbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f37e89e9400" loc="94:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f37e89e9400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f37e89e9780"/>
        <function-ref name="userId" scoped="" ref="0x7f37e89e9910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f37e81b7ca0" loc="44:/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f37e81b7ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f37e81b60a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f37e81b6330" loc="45:/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f37e81b6330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f37e81b66b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f37e81b6840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f37e81b69d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f37e81b6b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f37e81b33a0" loc="55:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f37e81b33a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f37e81b3740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f37e81b38d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f37e81b1210" loc="60:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f37e81b1210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f37e81b15b0"/>
        <function-ref name="configure" scoped="" ref="0x7f37e81b1740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f37e81b19d0" loc="61:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f37e81b19d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f37e81b1d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f37e81af020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f37e81af1b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f37e81af340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f37e81b3b20" loc="56:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f37e81b3b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f37e81b2020"/>
        <function-ref name="requested" scoped="" ref="0x7f37e81b21b0"/>
        <function-ref name="granted" scoped="" ref="0x7f37e81b2340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f37e81b24d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f37e81b2660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f37e81af590" loc="62:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f37e81af590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f37e81af910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f37e81afaa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f37e81afc30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f37e81afdc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f37e81ae020"/>
        <function-ref name="get" scoped="" ref="0x7f37e81ae1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f37e81ae340"/>
        <function-ref name="led0On" scoped="" ref="0x7f37e81ae980"/>
        <function-ref name="set" scoped="" ref="0x7f37e81ae660"/>
        <function-ref name="led2On" scoped="" ref="0x7f37e81ae4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f37e81ae7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f37e81b4540" loc="54:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f37e81b4540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f37e81b48e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f37e81b4a70"/>
        <function-ref name="request" scoped="" ref="0x7f37e81b4c00"/>
        <function-ref name="granted" scoped="" ref="0x7f37e81b4d90"/>
        <function-ref name="isOwner" scoped="" ref="0x7f37e81b3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f37e81b28b0" loc="57:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f37e81b28b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f37e81b2c30"/>
        <function-ref name="userId" scoped="" ref="0x7f37e81b2dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f37e81aec50" loc="75:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f37e81aec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f37e81ad020"/>
        <function-ref name="runTask" scoped="" ref="0x7f37e81ad1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f37e89ce400" loc="72:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f37e89ce400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f37e89ce780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f37e89ce9d0" loc="73:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f37e89ce9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f37e89ced50"/>
        <function-ref name="requested" scoped="" ref="0x7f37e89cd020"/>
        <function-ref name="granted" scoped="" ref="0x7f37e89cd1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f37e89cd340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f37e89cd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f37e89e3b20" loc="70:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f37e89e3b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f37e89ce020"/>
        <function-ref name="stop" scoped="" ref="0x7f37e89ce1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f37e89cd720" loc="74:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f37e89cd720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f37e89cdaa0"/>
        <function-ref name="userId" scoped="" ref="0x7f37e89cdc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f37e817eb00" loc="62:/opt/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f37e817eb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f37e817ee80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f37e817d0f0" loc="63:/opt/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f37e817d0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f37e817d470"/>
        <function-ref name="requested" scoped="" ref="0x7f37e817d600"/>
        <function-ref name="granted" scoped="" ref="0x7f37e817d790"/>
        <function-ref name="isOwner" scoped="" ref="0x7f37e817d920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f37e817dab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f37e817e3a0" loc="60:/opt/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f37e817e3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f37e817e720"/>
        <function-ref name="stop" scoped="" ref="0x7f37e817e8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f37e817dd00" loc="64:/opt/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f37e817dd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f37e817c0a0"/>
        <function-ref name="userId" scoped="" ref="0x7f37e817c230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7f37e89ad080" loc="3:/opt/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f37e89ad080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f37e89ad400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f37e89ad6f0" loc="4:/opt/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f37e89ad6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f37e89ada70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f37e89adc00"/>
        <function-ref name="request" scoped="" ref="0x7f37e89add90"/>
        <function-ref name="granted" scoped="" ref="0x7f37e89ac020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f37e89ac1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f37e89b07a0" loc="2:/opt/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f37e89b07a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f37e89b0b20"/>
        <function-ref name="stop" scoped="" ref="0x7f37e89b0cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7f37e89991e0" loc="47:/opt/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7f37e89991e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f37e8999560"/>
        <function-ref name="offset" scoped="" ref="0x7f37e89996f0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f37e8999880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f37e897ebf0" loc="43:/opt/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f37e897ebf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f37e8959ae0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f37e8958880"/>
        <function-ref name="element" scoped="" ref="0x7f37e8956020"/>
        <function-ref name="full" scoped="" ref="0x7f37e897dce0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f37e8959660"/>
        <function-ref name="dequeue" scoped="" ref="0x7f37e89581d0"/>
        <function-ref name="empty" scoped="" ref="0x7f37e897d860"/>
        <function-ref name="size" scoped="" ref="0x7f37e89591e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f37e894fa20" loc="93:/opt/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f37e894fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f37e894e920"/>
        <function-ref name="enqueue" scoped="" ref="0x7f37e894d6d0"/>
        <function-ref name="element" scoped="" ref="0x7f37e894dd40"/>
        <function-ref name="full" scoped="" ref="0x7f37e8951af0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f37e894e4a0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f37e894d020"/>
        <function-ref name="empty" scoped="" ref="0x7f37e8951670"/>
        <function-ref name="size" scoped="" ref="0x7f37e894e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f37e894c440" loc="94:/opt/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f37e894c440"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f37e894c7c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f37e894c950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f37e894cae0"/>
        <function-ref name="cancel" scoped="" ref="0x7f37e894cc70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f37e894ce00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f37e894b0c0" loc="95:/opt/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f37e894b0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f37e894b440"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f37e894b5d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f37e894b760"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f37e894b8f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f37e894ba80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x7f37e8945500" loc="114:/opt/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="retrySend" scoped="" ref="0x7f37e8945500"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f37e8945880"/>
        <function-ref name="runTask" scoped="" ref="0x7f37e8945a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f37e8955a60" loc="89:/opt/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f37e8955a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f37e8955de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f37e894bd00" loc="96:/opt/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f37e894bd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f37e89490a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f37e8949230"/>
        <function-ref name="led1On" scoped="" ref="0x7f37e89493c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f37e8949550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f37e89496e0"/>
        <function-ref name="get" scoped="" ref="0x7f37e8949870"/>
        <function-ref name="led1Off" scoped="" ref="0x7f37e8949a00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f37e89481b0"/>
        <function-ref name="set" scoped="" ref="0x7f37e8949b90"/>
        <function-ref name="led0On" scoped="" ref="0x7f37e8949d20"/>
        <function-ref name="led2On" scoped="" ref="0x7f37e8948020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x7f37e894f1a0" loc="90:/opt/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f37e894f1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f37e894f520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f37e892ebe0" loc="43:/opt/tinyos-main/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f37e892ebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f37e892b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f37e8928020" loc="94:/opt/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f37e8928020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f37e89283a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f37e8928680" loc="95:/opt/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f37e8928680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f37e8928a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f37e8922380" loc="39:/opt/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f37e8922380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f37e8922700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f37e8922aa0" loc="40:/opt/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f37e8922aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f37e8922e20"/>
        <function-ref name="stopDone" scoped="" ref="0x7f37e891f020"/>
        <function-ref name="start" scoped="" ref="0x7f37e891f1b0"/>
        <function-ref name="stop" scoped="" ref="0x7f37e891f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="primeModule" ref="0x7f37e892c880" loc="2:primeC.nc">
      <component-ref qname="primeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="primeModule" scoped="" ref="0x7f37e892c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="primeModule"/>
      </instance>
      <interface-functions>
        <function-ref name="isPrime" scoped="" ref="0x7f37e892cc00"/>
        <function-ref name="genLargeNum" scoped="" ref="0x7f37e892cd90"/>
        <function-ref name="power" scoped="" ref="0x7f37e8918020"/>
        <function-ref name="gcd" scoped="" ref="0x7f37e89181b0"/>
        <function-ref name="genLargePrime" scoped="" ref="0x7f37e8918340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="primeModule" ref="0x7f37e8918e20" loc="3:primeP.nc">
      <component-ref qname="primeP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="primeModule" scoped="" ref="0x7f37e8918e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="primeModule"/>
      </instance>
      <interface-functions>
        <function-ref name="isPrime" scoped="" ref="0x7f37e89151c0"/>
        <function-ref name="genLargeNum" scoped="" ref="0x7f37e8915350"/>
        <function-ref name="power" scoped="" ref="0x7f37e89154e0"/>
        <function-ref name="gcd" scoped="" ref="0x7f37e8915670"/>
        <function-ref name="genLargePrime" scoped="" ref="0x7f37e8915800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSAinterface" ref="0x7f37e89297b0" loc="2:RSAC.nc">
      <component-ref qname="RSAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSAinterface" scoped="" ref="0x7f37e89297b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RSAinterface"/>
      </instance>
      <interface-functions>
        <function-ref name="encrypt_shared_key" scoped="" ref="0x7f37e8929b30"/>
        <function-ref name="get_modulus" scoped="" ref="0x7f37e8929cc0"/>
        <function-ref name="test_key_gen" scoped="" ref="0x7f37e8929e50"/>
        <function-ref name="rsa_test_key" scoped="" ref="0x7f37e88fc020"/>
        <function-ref name="decrypt_shared_key" scoped="" ref="0x7f37e88fc1b0"/>
        <function-ref name="checkKey" scoped="" ref="0x7f37e88fc340"/>
        <function-ref name="gen_key" scoped="" ref="0x7f37e88fc4d0"/>
        <function-ref name="RSAtest" scoped="" ref="0x7f37e88fc660"/>
        <function-ref name="gen_shared_key" scoped="" ref="0x7f37e88fc7f0"/>
        <function-ref name="print_time" scoped="" ref="0x7f37e88fc980"/>
        <function-ref name="rsa_gen_prime" scoped="" ref="0x7f37e88fcb10"/>
        <function-ref name="rsa_encrypt" scoped="" ref="0x7f37e88fcca0"/>
        <function-ref name="gen_val_key" scoped="" ref="0x7f37e88fce30"/>
        <function-ref name="rsa_decrypt" scoped="" ref="0x7f37e88fb120"/>
        <function-ref name="get_private" scoped="" ref="0x7f37e88fb2b0"/>
        <function-ref name="rsa_test_prime" scoped="" ref="0x7f37e88fb440"/>
        <function-ref name="get_exponent" scoped="" ref="0x7f37e88fb5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSAinterface" ref="0x7f37e88f8160" loc="10:RSAP.nc">
      <component-ref qname="RSAP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSAinterface" scoped="" ref="0x7f37e88f8160"/></type-interface>
      <instance>
        <interfacedef-ref qname="RSAinterface"/>
      </instance>
      <interface-functions>
        <function-ref name="encrypt_shared_key" scoped="" ref="0x7f37e88f84e0"/>
        <function-ref name="get_modulus" scoped="" ref="0x7f37e88f8670"/>
        <function-ref name="test_key_gen" scoped="" ref="0x7f37e88f8800"/>
        <function-ref name="rsa_test_key" scoped="" ref="0x7f37e88f8990"/>
        <function-ref name="decrypt_shared_key" scoped="" ref="0x7f37e88f8b20"/>
        <function-ref name="checkKey" scoped="" ref="0x7f37e88f8cb0"/>
        <function-ref name="gen_key" scoped="" ref="0x7f37e88f8e40"/>
        <function-ref name="RSAtest" scoped="" ref="0x7f37e88f7020"/>
        <function-ref name="gen_shared_key" scoped="" ref="0x7f37e88f71b0"/>
        <function-ref name="print_time" scoped="" ref="0x7f37e88f7340"/>
        <function-ref name="rsa_gen_prime" scoped="" ref="0x7f37e88f74d0"/>
        <function-ref name="rsa_encrypt" scoped="" ref="0x7f37e88f7660"/>
        <function-ref name="gen_val_key" scoped="" ref="0x7f37e88f77f0"/>
        <function-ref name="rsa_decrypt" scoped="" ref="0x7f37e88f7a80"/>
        <function-ref name="get_private" scoped="" ref="0x7f37e88f7c10"/>
        <function-ref name="rsa_test_prime" scoped="" ref="0x7f37e88f7da0"/>
        <function-ref name="get_exponent" scoped="" ref="0x7f37e88f6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x7f37e88f0610" loc="14:RSAP.nc">
      <component-ref qname="RSAP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f37e88f0610"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f37e9502e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f37e9326200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f37e88ef3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="primeModule" ref="0x7f37e88f6320" loc="12:RSAP.nc">
      <component-ref qname="RSAP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="primeModule" scoped="" ref="0x7f37e88f6320"/></type-interface>
      <instance>
        <interfacedef-ref qname="primeModule"/>
      </instance>
      <interface-functions>
        <function-ref name="isPrime" scoped="" ref="0x7f37e88f66a0"/>
        <function-ref name="genLargeNum" scoped="" ref="0x7f37e88f6830"/>
        <function-ref name="power" scoped="" ref="0x7f37e88f69c0"/>
        <function-ref name="gcd" scoped="" ref="0x7f37e88f6b50"/>
        <function-ref name="genLargePrime" scoped="" ref="0x7f37e88f6ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f37e88f5160" loc="13:RSAP.nc">
      <component-ref qname="RSAP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f37e88f5160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f37e9502e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f37e9326200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f37e88f1630"/>
        <function-ref name="fired" scoped="" ref="0x7f37e88f4bb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f37e88f2990"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f37e88f2510"/>
        <function-ref name="getdt" scoped="" ref="0x7f37e88f0020"/>
        <function-ref name="gett0" scoped="" ref="0x7f37e88f1ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f37e88f2090"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f37e88f5d50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f37e88f1020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f37e88f4260"/>
        <function-ref name="stop" scoped="" ref="0x7f37e88f4730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f37e8864970" loc="45:/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="RSAC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f37e8864970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f37e9502e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f37e9326200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f37e8860e80"/>
        <function-ref name="fired" scoped="" ref="0x7f37e88614a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f37e8860260"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f37e8861da0"/>
        <function-ref name="getdt" scoped="" ref="0x7f37e885f7a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f37e885f320"/>
        <function-ref name="isRunning" scoped="" ref="0x7f37e8861920"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f37e88635a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f37e8860870"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f37e8863a70"/>
        <function-ref name="stop" scoped="" ref="0x7f37e8861020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/opt/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f37e9501a60" loc="62:/opt/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f37e94ff690" loc="60:/opt/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f37e94d0b40" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f37e94d2de0" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f37e94d0420" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f37e94d2700" loc="42:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f37e94d15a0" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f37e94d6900" loc="40:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f37e94d2020" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f37e94d1cc0" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/opt/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f37e98e7b70" loc="62:/opt/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f37e9934c00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f37e947d020" loc="55:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f37e947ecc0" loc="55:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f37e9481390" loc="42:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f37e94c85a0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f37e94c6020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f37e947d890" loc="57:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f37e947c7b0" loc="59:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f37e99f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f37e947e560" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f37e947c020" loc="58:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f37e9481b30" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f37e99f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f37e9480350" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f37e9480da0" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f37e94c85a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f37e94c6020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f37e9480b20" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f37e94c85a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f37e94c6020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f37e94700e0" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f37e946d630" loc="79:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f37e99f1090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f37e946d3b0" loc="79:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f37e99f1090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f37e946c2a0" loc="86:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f37e946c020" loc="86:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f37e946ebe0" loc="68:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f37e946e3e0" loc="63:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f37e99f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f37e9470a90" loc="56:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f37e9470810" loc="56:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f37e94773e0" loc="40:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f37e9477d60" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f37e9477ae0" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f37e9475790" loc="42:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f37e9475510" loc="42:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f37e94742a0" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f37e9474020" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f37e9474990" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f37e9487810" loc="52:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f37e94842a0" loc="55:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f37e9484020" loc="55:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f37e9485020" loc="53:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f37e948dab0" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f37e9485760" loc="54:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f37e94899b0" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f37e9487120" loc="51:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f37e9489270" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f37e99f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f37e94880e0" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f37e94889f0" loc="50:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f37e9488770" loc="50:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f37e9484cb0" loc="56:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f37e9484a30" loc="56:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f37e94461f0" loc="39:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f37e95922b0" loc="76:/opt/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f37e97ab420" loc="52:/opt/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f37e99ed020" loc="57:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f37e99ec020" loc="72:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f37e99ed790" loc="65:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f37e99f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f37e99e1020" loc="67:/opt/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f37e99e1870" loc="75:/opt/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f37e9315bf0" loc="53:/opt/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f37e9315bf0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f37e930d560" loc="61:/opt/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RSAinterface" loc="2:RSAinterface.nc">
      <function command="" provided="0" name="encrypt_shared_key" ref="0x7f37e92fe990" loc="37:RSAinterface.nc">
        <interfacedef-ref qname="RSAinterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
            </type-int>
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f37ea34d930"/></typename>
            </type-int>
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f37ea34d930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x7f37e92fe020" loc="37:RSAinterface.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
            </type-int>
          </variable>
          <variable name="exponent" ref="0x7f37e92fe390" loc="37:RSAinterface.nc">
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f37ea34d930"/></typename>
            </type-int>
          </variable>
          <variable name="modulus" ref="0x7f37e92fe6f0" loc="37:RSAinterface.nc">
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f37ea34d930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get_modulus" ref="0x7f37e9303920" loc="23:RSAinterface.nc">
        <interfacedef-ref qname="RSAinterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long" size="I:4" alignment="I:2">
            <typename><typedef-ref name="int32_t" ref="0x7f37ea34d930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test_key_gen" ref="0x7f37e93031f0" loc="21:RSAinterface.nc">
        <interfacedef-ref qname="RSAinterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rsa_test_key" ref="0x7f37e93084e0" loc="9:RSAinterface.nc">
        <interfacedef-ref qname="RSAinterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="decrypt_shared_key" ref="0x7f37e92fc3b0" loc="39:RSAinterface.nc">
        <interfacedef-ref qname="RSAinterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x7f37e92fc130" loc="39:RSAinterface.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkKey" ref="0x7f37e9300020" loc="29:RSAinterface.nc">
        <interfacedef-ref qname="RSAinterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f37e99f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gen_key" ref="0x7f37e9304aa0" loc="19:RSAinterface.nc">
        <interfacedef-ref qname="RSAinterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="RSAtest" ref="0x7f37e9309d70" loc="5:RSAinterface.nc">
        <interfacedef-ref qname="RSAinterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f37e99f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gen_shared_key" ref="0x7f37e92ff780" loc="35:RSAinterface.nc">
        <interfacedef-ref qname="RSAinterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="print_time" ref="0x7f37e92ff020" loc="33:RSAinterface.nc">
        <interfacedef-ref qname="RSAinterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rsa_gen_prime" ref="0x7f37e93043e0" loc="17:RSAinterface.nc">
        <interfacedef-ref qname="RSAinterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rsa_encrypt" ref="0x7f37e93073a0" loc="11:RSAinterface.nc">
        <interfacedef-ref qname="RSAinterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-qualified const="">
                <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="message" ref="0x7f37e9308c70" loc="11:RSAinterface.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="message_size" ref="0x7f37e93070d0" loc="11:RSAinterface.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="gen_val_key" ref="0x7f37e9300700" loc="31:RSAinterface.nc">
        <interfacedef-ref qname="RSAinterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rsa_decrypt" ref="0x7f37e93052f0" loc="13:RSAinterface.nc">
        <interfacedef-ref qname="RSAinterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
                <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2"></type-int>
              </type-qualified>
            </type-pointer>
            <type-qualified const="">
                <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="message" ref="0x7f37e9307b30" loc="13:RSAinterface.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
                <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="message_size" ref="0x7f37e9305020" loc="13:RSAinterface.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get_private" ref="0x7f37e9301810" loc="27:RSAinterface.nc">
        <interfacedef-ref qname="RSAinterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long" size="I:4" alignment="I:2">
            <typename><typedef-ref name="int32_t" ref="0x7f37ea34d930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rsa_test_prime" ref="0x7f37e9305c40" loc="15:RSAinterface.nc">
        <interfacedef-ref qname="RSAinterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x7f37e93059c0" loc="15:RSAinterface.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get_exponent" ref="0x7f37e93010e0" loc="25:RSAinterface.nc">
        <interfacedef-ref qname="RSAinterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long" size="I:4" alignment="I:2">
            <typename><typedef-ref name="int32_t" ref="0x7f37ea34d930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="primeModule" loc="1:primeModule.nc">
      <function command="" provided="0" name="isPrime" ref="0x7f37e93105d0" loc="4:primeModule.nc">
        <interfacedef-ref qname="primeModule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f37e99f1090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
            </type-int>
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f37ea34d930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f37e9310020" loc="4:primeModule.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
            </type-int>
          </variable>
          <variable name="k" ref="0x7f37e9310340" loc="4:primeModule.nc">
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f37ea34d930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="genLargeNum" ref="0x7f37e9310d10" loc="5:primeModule.nc">
        <interfacedef-ref qname="primeModule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="power" ref="0x7f37e9313b20" loc="2:primeModule.nc">
        <interfacedef-ref qname="primeModule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long" size="I:4" alignment="I:2">
            <typename><typedef-ref name="int32_t" ref="0x7f37ea34d930"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f37ea34d930"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
            </type-int>
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f37ea34d930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x7f37e9313230" loc="2:primeModule.nc">
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f37ea34d930"/></typename>
            </type-int>
          </variable>
          <variable name="n" ref="0x7f37e9313560" loc="2:primeModule.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
            </type-int>
          </variable>
          <variable name="p" ref="0x7f37e9313880" loc="2:primeModule.nc">
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f37ea34d930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="gcd" ref="0x7f37e93127e0" loc="3:primeModule.nc">
        <interfacedef-ref qname="primeModule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long" size="I:4" alignment="I:2">
            <typename><typedef-ref name="int32_t" ref="0x7f37ea34d930"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f37ea34d930"/></typename>
            </type-int>
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f37ea34d930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x7f37e9312230" loc="3:primeModule.nc">
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f37ea34d930"/></typename>
            </type-int>
          </variable>
          <variable name="b" ref="0x7f37e9312550" loc="3:primeModule.nc">
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f37ea34d930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="genLargePrime" ref="0x7f37e930f4b0" loc="6:primeModule.nc">
        <interfacedef-ref qname="primeModule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f37e9322390" loc="53:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f37e9322390"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f37e931a1f0" loc="136:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f37e931fa60" loc="83:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f37e931d820" loc="114:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f37e931d250" loc="114:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f37e931d590" loc="114:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f37e931ea60" loc="98:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f37e99f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f37e9319270" loc="151:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f37e931a980" loc="144:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f37e931e270" loc="92:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f37e99f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f37e9320020" loc="64:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f37e9322c80" loc="64:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f37e931b820" loc="129:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f37e931b250" loc="129:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f37e931b590" loc="129:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f37e9320ae0" loc="73:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f37e9320860" loc="73:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f37ea34c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f37e931f350" loc="78:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f37e92ceba0" loc="56:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f37e92ceba0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f37e92cede0" loc="56:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f37e92cede0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f37e92c79c0" loc="109:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f37e92cede0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f37e92c99b0" loc="78:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f37e92c7020" loc="103:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f37e92cede0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f37e92cede0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f37e92c8a10" loc="103:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f37e92cede0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f37e92c8d50" loc="103:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f37e92cede0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f37e92c81f0" loc="88:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f37e99f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f37e92c61f0" loc="116:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f37e92cede0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f37e92cb960" loc="66:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f37e92cede0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f37e92cb6e0" loc="66:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f37e92cede0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f37e92c91f0" loc="73:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f37e925a100" loc="57:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f37e925a100"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f37e925a340" loc="57:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f37e925a340"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f37e925ac60" loc="64:/opt/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f37e925a340"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f37e9259d70" loc="76:/opt/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f37e9259510" loc="71:/opt/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f37e99f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f37e9258500" loc="82:/opt/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f37e9130e60" loc="80:/opt/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f37e95179d0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f37e9130510" loc="80:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f37e95179d0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f37e9130890" loc="80:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f37e9130bc0" loc="80:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f37e912b620" loc="135:/opt/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f37e912b020" loc="135:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f37e912b350" loc="135:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f37e912a6d0" loc="123:/opt/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f37e912e2a0" loc="96:/opt/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f37e912e020" loc="96:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f37e912d7f0" loc="110:/opt/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f37e912d210" loc="110:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f37e912d560" loc="110:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f37e9126020" loc="65:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f37e9132c60" loc="65:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f37e9125110" loc="78:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f37e9126e10" loc="78:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f37e9121490" loc="126:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f37e9122e50" loc="126:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f37e91211c0" loc="126:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f37e9122560" loc="106:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f37e91235e0" loc="94:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f37e9123020" loc="94:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f37e9123350" loc="94:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f37e9111d30" loc="177:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f37e95175f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f37e9111ab0" loc="177:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f37e911ba10" loc="88:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f37e95179d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f37e911b790" loc="88:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f37e9131e50" loc="68:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f37e95179d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f37e911d950" loc="78:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f37e95179d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f37e911d6d0" loc="78:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f37e91183a0" loc="121:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f37e95179d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f37e911cd70" loc="121:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f37e9118110" loc="121:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f37e95179d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f37e9119e50" loc="103:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f37e95179d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f37e9119870" loc="103:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f37e9119bc0" loc="103:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f37e95179d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f37e9115810" loc="147:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f37e9517210"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f37e9115590" loc="147:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f37e9113b90" loc="162:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f37e9517210"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f37e91135e0" loc="162:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f37e9113900" loc="162:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f37e9517210"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f37e9117600" loc="136:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f37e99f1090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f37e9117380" loc="136:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f37e91102f0" loc="187:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f37e95175f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f37e9112cf0" loc="187:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f37e9110060" loc="187:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f37e95175f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f37e910f190" loc="195:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f37e95175f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f37e910cad0" loc="59:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f37e910c850" loc="59:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f37e910acd0" loc="71:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f37e910aa50" loc="71:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f37e9109020" loc="85:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f37e99f1090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f37e910bce0" loc="85:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f37e91025e0" loc="75:/opt/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f37e9102020" loc="75:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f37e9102350" loc="75:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f37e90fdbb0" loc="125:/opt/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f37e90fd5b0" loc="125:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f37e90fd8e0" loc="125:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f37e9101d20" loc="112:/opt/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f37e9100900" loc="89:/opt/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f37e9100680" loc="89:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f37e90fee00" loc="100:/opt/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f37e90fe820" loc="100:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f37e90feb70" loc="100:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f37e9091ab0" loc="113:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f37e9091830" loc="113:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f37e908f020" loc="138:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f37e9090d30" loc="138:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f37e9094d60" loc="104:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f37e9090350" loc="130:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f37e908b410" loc="78:/opt/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
              <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f37e908ea90" loc="78:/opt/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f37e908ede0" loc="78:/opt/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f37e908b130" loc="78:/opt/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f37e9080270" loc="61:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f37e9080a20" loc="67:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f37e907f270" loc="72:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f37e907e1f0" loc="83:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f37e907c940" loc="100:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f37e907b190" loc="117:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f37e907fa00" loc="77:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f37e907bd00" loc="134:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f37e907ba80" loc="134:/opt/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f37e9081a60" loc="56:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f37e907e9d0" loc="89:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f37e907c190" loc="94:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7f37e9012020" loc="31:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f37e9013960" loc="31:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7f37e9013ce0" loc="31:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7f37e9014020" loc="15:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7f37e9013020" loc="23:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f37e90148b0" loc="23:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f37e95083c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f37e9507a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7f37e9014c20" loc="23:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f37e8ff6760" loc="95:/opt/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f37e8ff5020" loc="105:/opt/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/opt/tinyos-main/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/opt/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7f37e8ff4e10" loc="54:/opt/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/opt/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f37e8ff46a0" loc="49:/opt/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/opt/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7f37e8ffe770" loc="56:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7f37e8ffdbe0" loc="72:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7f37e8ffb840" loc="94:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f37e8ffb5c0" loc="94:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7f37e8ffc4a0" loc="79:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7f37e8ffd350" loc="65:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f37e8ffd0d0" loc="65:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7f37e8ff90e0" loc="100:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7f37e8ffcd50" loc="85:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7f37e90050e0" loc="71:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7f37e9005a10" loc="81:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7f37e9007720" loc="62:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7f37e90074a0" loc="62:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7f37e90045c0" loc="91:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f37e9004340" loc="91:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7f37e9002270" loc="62:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7f37e9001020" loc="69:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f37e9002c10" loc="69:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7f37e9001af0" loc="80:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f37e9001870" loc="80:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f37e8ecbc40" loc="48:/opt/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f37e8ecb670" loc="48:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f37e8ecb9b0" loc="48:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f37e8ec6a70" loc="79:/opt/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f37e8ec67f0" loc="79:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f37e8ec5890" loc="90:/opt/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f37e8ec52c0" loc="90:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f37e8ec5600" loc="90:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f37e8ec8610" loc="65:/opt/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f37e8ec22c0" loc="99:/opt/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f37e8ec3820" loc="99:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f37e8ec3b60" loc="99:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f37e8ec2020" loc="99:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f37e8ec6020" loc="72:/opt/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f37e8eca610" loc="57:/opt/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f37e8ec9bd0" loc="57:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f37e8eca020" loc="57:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f37e8eca370" loc="57:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f37e8ea35b0" loc="46:/opt/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f37e8ea3330" loc="46:/opt/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f37e8ea2430" loc="56:/opt/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f37e8ea3e20" loc="56:/opt/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f37e8ea21a0" loc="56:/opt/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f37e8e4faf0" loc="53:/opt/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f37e8e484e0" loc="61:/opt/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:/opt/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f37e8e44610" loc="39:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f37e8e6ee70"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f37e8e6d2b0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f37e8e4c350" loc="120:/opt/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f37e8e4d350" loc="97:/opt/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f37e8e50980" loc="88:/opt/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f37e8e4db40" loc="102:/opt/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f37e8e4cdb0" loc="128:/opt/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f37e99f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f37e8e3eb70" loc="65:/opt/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f37e8e3e350" loc="59:/opt/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:/opt/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f37e8e35680" loc="54:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f37e8e35400" loc="54:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f37e8e38c00" loc="49:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:/opt/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f37e8e10af0" loc="213:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f37e99f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f37e8e1b790" loc="143:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f37e8e28530" loc="50:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f37e8e9dd80"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f37e8e9c650"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f37e8e282b0" loc="50:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f37e8e9dd80"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f37e8e9c650"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f37e8e1e870" loc="123:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f37e8e26a40" loc="70:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f37e8e98d60"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f37e8e97650"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f37e8e267c0" loc="70:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f37e8e98d60"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f37e8e97650"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f37e8e15e70" loc="180:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f37e8e11480" loc="197:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f37e8e26020" loc="65:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f37e8e9bc80"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f37e8e9a440"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f37e8e24270" loc="75:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f37e8e98d60"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f37e8e97650"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f37e8e20020" loc="97:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f37e99f1090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f37e8e22d30" loc="97:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f37e99f1090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f37e8e22610" loc="95:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f37e8e15740" loc="179:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f37e8e27780" loc="60:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f37e8e9bc80"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f37e8e9a440"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f37e8e27500" loc="60:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f37e8e9bc80"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f37e8e9a440"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f37e8e23420" loc="85:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f37e8e145d0" loc="181:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f37e8e23e00" loc="90:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f37e8e23b80" loc="90:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f37e8e1f910" loc="113:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f37e99f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f37e8e1e0e0" loc="118:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f37e99f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f37e8e16840" loc="177:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f37e8e19790" loc="163:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f37e99f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f37e8e1d7e0" loc="133:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f37e8e15020" loc="178:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f37e8e1a020" loc="148:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f37e8e14cf0" loc="182:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f37e8e20800" loc="103:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f37e8ea5d10"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f37e8e9e460"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f37e8e134c0" loc="187:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f37e99f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f37e8e10350" loc="207:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f37e8e24c10" loc="80:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f37e8e24990" loc="80:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f37ea34c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f37e8e0f4d0" loc="224:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f37e8e0f250" loc="224:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f37e8e28d10" loc="55:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f37e8e9dd80"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f37e8e9c650"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f37e8e1d020" loc="128:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f37e8e1a770" loc="153:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f37e8e16020" loc="174:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f37e8e6ee70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f37e8e6d2b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f37e8e18cf0" loc="174:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f37e8e6ee70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f37e8e6d2b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f37e8e182a0" loc="168:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f37e8e80020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f37e8e80440"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f37e8e18020" loc="168:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f37e8e80020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f37e8e80440"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f37e8e0fd90" loc="231:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f37e8e13cb0" loc="192:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f37e99f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f37e8e1f070" loc="108:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f37e99f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f37e8e11be0" loc="202:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f37e8e19020" loc="158:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f37e8e1b020" loc="138:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f37e8d9d390" loc="95:/opt/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f37e8d9dbe0" loc="105:/opt/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f37e8d8a7c0" loc="78:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f37e8d89020" loc="80:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f37e99f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f37e8d85b10" loc="110:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f37e8d85890" loc="110:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f37e8d8b020" loc="58:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f37e8d87020" loc="87:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f37e99f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f37e8d84490" loc="117:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f37e8d89760" loc="85:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f37e8d8a020" loc="73:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f37e99f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f37e8d86770" loc="99:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f37e8d8b7c0" loc="66:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f37e8d8c0e0" loc="48:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f37e8d877a0" loc="92:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f37e8d85020" loc="101:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f37e99f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f37e8d86020" loc="94:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f37e99f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f37e8d8c810" loc="53:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f37e8ae2270" loc="44:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f37e8ae29a0" loc="45:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f37e99f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f37e8ae3420" loc="42:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f37e8ae1820" loc="47:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f37e99f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f37e8ae3b20" loc="43:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f37e99f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f37e8ae10e0" loc="46:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f37e8ae5610" loc="40:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f37e8ae5ce0" loc="41:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f37e8a88460" loc="90:/opt/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f37e99f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f37e8a88cc0" loc="98:/opt/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f37e8a75a40" loc="39:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f37e8a59e00" loc="56:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f37e8a56020" loc="73:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f37e8a59570" loc="46:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f37e8a586d0" loc="65:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f37e99f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f37e8a56950" loc="81:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f37e8a4b020" loc="79:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f37e8a52090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f37e8a4cd20" loc="79:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f37e8a52090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f37e8a4e020" loc="53:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f37e99f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f37e8a4eb20" loc="62:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f37e99f1090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f37e8a52090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f37e8a4e8a0" loc="62:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f37e8a52090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f37e8a4c470" loc="70:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f37e8a52090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/opt/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/opt/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f37e89df770" loc="62:/opt/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/opt/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/opt/tinyos-main/tos/interfaces/Queue.nc">
      <documentation loc="33:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f37e897c9a0" loc="43:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f37e897c9a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7f37e8976120" loc="80:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="74:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f37e897c9a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7f37e8974b70" loc="97:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="90:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f37e99e8980"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f37e897c9a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f37e89748f0" loc="97:/opt/tinyos-main/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f37e897c9a0"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x7f37ea352c30"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:2"><attribute-ref name="one" ref="0x7f37ea352c30"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7f37e8973b30" loc="108:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="99:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f37e897c9a0"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f37e89738b0" loc="108:/opt/tinyos-main/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x7f37e89799e0" loc="57:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="52:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f37e99f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f37e8978990" loc="72:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="67:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f37e8976d00" loc="88:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="82:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f37e897c9a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f37e8979270" loc="50:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="45:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f37e99f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f37e8978190" loc="65:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="59:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f37ea34c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/opt/tinyos-main/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/opt/tinyos-main/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x7f37e8952dd0" loc="49:/opt/tinyos-main/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/opt/tinyos-main/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x7f37e8952b50" loc="49:/opt/tinyos-main/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
