<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="13:TestPrintfAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f1823c0a5d0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f1823de4a60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f1823de4a60"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f1823c18590"/></to>
    </wire>
    <wire loc="14:TestPrintfAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1823bfe770"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1823be0640"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1823be0640"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1823bd71d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:TestPrintfAppC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f1823bf2a40"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f1823a32c90"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f1823a32c90"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f1823bc8080"/></to>
    </wire>
    <wire loc="16:TestPrintfAppC.nc">
      <from><interface-ref name="primeModule" scoped="" ref="0x7f1823bf4750"/></from>
      <to><interface-ref name="primeModule" scoped="" ref="0x7f182321f880"/></to>
    </wire>
    <wire loc="8:primeC.nc">
      <from><interface-ref name="primeModule" scoped="" ref="0x7f182321f880"/></from>
      <to><interface-ref name="primeModule" scoped="" ref="0x7f182320ee20"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1823de5020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f182321e020"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1823de5020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1822b54ca0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1823de5020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1823913550"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1823de5020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f182324ba60"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1823de5020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1823bd2e50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f1823c18c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f18242d13a0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f18242d13a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f1823e7c140"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f1823c176c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1823de0020"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1823de0020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1823ddd280"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1823c17dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f1823de5020"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f1823ddd990"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f1823dde910"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f1823dde910"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1823dbe850"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f1823ddc0c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1823dd6450"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f1823ddc7a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f18233b7920"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1823dbe850"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1823da5c00"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f1823db5de0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f1823da4350"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f182412f080"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f1823da3680"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f1823d605a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1823c9d6d0"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f1823d4e020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1823c96b30"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f1823d57700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1823ca3160"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f1823d3ba20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1823c7ccb0"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f1823d5eaa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1823ca4480"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f1823d41020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1823c7c020"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f1823d38a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1823c65cb0"/></to>
    </wire>
    <wire loc="154:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f1823d485a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1823c76220"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f1823d61b10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1823cf39d0"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f1823d3da20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1823c8b2f0"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f1823d433e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1823c8c610"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f1823d4d5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1823c8d220"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f1823d56700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1823c9b7a0"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f1823d3aa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1823c742f0"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f1823d4cbe0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1823c866d0"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f1823d5d890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1823c9cac0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f1823d71060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1823d01540"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f1823d41da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1823c75610"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f1823d670c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1823ca5020"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f1823d47a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1823c6e6d0"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f1823d51690"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1823caba90"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f1823d3ca20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1823c847a0"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f1823d59cf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1823cacde0"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f1823d421f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1823c85ac0"/></to>
    </wire>
    <wire loc="163:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f1823d39a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1823c6c7a0"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f1823d490c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1823c7eb30"/></to>
    </wire>
    <wire loc="120:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f1823d506c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1823cf93e0"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f1823d40b80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1823c6dac0"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f1823d3ea20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1823c94cb0"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f1823d3fa20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1823c65020"/></to>
    </wire>
    <wire loc="127:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f1823d44570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1823c94020"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f1823d45020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1823c67b30"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f1823cff450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1823d00d80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f1823cffaa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f1823c5fa90"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f1823cfd120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f1823c5c260"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1823caa930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1823d01540"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1823ca8020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1823d00d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1823ca2020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1823d01540"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1823ca07a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1823d00d80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1823c9a610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1823d01540"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1823c99c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1823d00d80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f1823cf72f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1823cf8bf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f1823cf7940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f1823c5c9f0"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f1823cf6020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f1823c5b240"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1823c93b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1823cf93e0"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1823c902f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1823cf8bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1823c8a160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1823cf93e0"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1823c897a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1823cf8bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1823c83610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1823cf93e0"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1823c82c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1823cf8bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1823c7bb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1823cf93e0"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1823c792f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1823cf8bf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1823c73160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1823cf93e0"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1823c727a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1823cf8bf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1823c6b610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1823cf93e0"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1823c6ac50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1823cf8bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1823c64b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1823cf93e0"/></to>
    </wire>
    <wire loc="172:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1823c622f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1823cf8bf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f18243401d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1823e7a040"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f1823e775d0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f18242682d0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f1823bd71d0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1823bcfc30"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f1823bcfc30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1823a5a690"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1823bd2e50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1823ad5760"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f1823bc8080"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f1823a4bcf0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1823ad5760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1823071b10"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f1823a54c30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1823aa9cf0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f1823aa31d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1823ad4020"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f1823ad4020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1823065890"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1823a3f020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1823b4eb50"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1823b4eb50"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1823b31cf0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1823071b10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f182304f660"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f182305e0a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f18230704f0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f18230704f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f182304e020"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1823061c00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1823b4eb50"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f182304a190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f1823054340"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1823054340"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f1823ba8990"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1823049770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1823053a80"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1823053a80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1823ba6720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1823048a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f1823052da0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1823052da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f1823ba31d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1823ba8990"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1823d506c0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1823ba6720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f1823d4e020"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1823ba31d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f1823d44570"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1823ba8990"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1823d506c0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1823ba6720"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f1823d4cbe0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1823ba31d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f1823d421f0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1823ba8990"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1823d506c0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1823ba6720"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f1823d490c0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1823ba31d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f1823d41020"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1823ba8990"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1823d506c0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1823ba6720"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f1823d485a0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1823ba31d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f1823d41da0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1823ba8990"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1823d506c0"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1823ba6720"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f1823d47a50"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1823ba31d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f1823d40b80"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1823ba8990"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1823d506c0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1823ba6720"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f1823d45020"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1823ba31d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f1823d3fa20"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f1823b130f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f1823b4cb70"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f1823b4cb70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1823b45b80"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1823b37c50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1823d506c0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f1823a9f490"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f18243401d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f1823a4fe80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f18243401d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f1823245a20"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f1823274bf0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1823242440"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f182327b540"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f182327b540"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1822fc6390"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f18232410c0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1823279270"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1823279270"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f18239837e0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f1823224be0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f18232451a0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f18239837e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1823919d60"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1823279e80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1823980470"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1823980470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f182391a6c0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f18232775d0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f182397eb20"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f182397eb20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1823918a10"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f1822fc5060"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f18239e0cf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1822fc5c70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1823980470"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f18239e0cf0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1823994580"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1823993400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f18239893f0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f18239893f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f182396f300"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1823992060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1823980470"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1823991720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f18239837e0"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f1823990480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f18243401d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f1823990c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f18243401d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f18239853b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1823913ba0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1823913ba0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1823901c40"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f18239831d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f182391a0d0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1823913550"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f18239015f0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f182390d2b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1823970330"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f18239164a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f182390f790"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f1823915120"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1823910c60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f1823908970"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7f182328f1e0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f182390f790"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f18237cf830"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1823910c60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f18237cf110"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7f18237ce760"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f1823908970"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f18238f9430"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f182390d2b0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f18237cc590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f182390d2b0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f18237c3cc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f182390d2b0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f18237cd0e0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f18238fe080"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7f18237cd9d0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7f18238faa40"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7f18238f0410"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7f18237c8b70"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f18238eb530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f182379d080"/></to>
    </wire>
    <wire loc="17:/opt/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f182379d080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f18232a67a0"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f18237bad20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f182379d890"/></to>
    </wire>
    <wire loc="13:/opt/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f182379d890"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f18232aa0c0"/></to>
    </wire>
    <wire loc="332:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7f1823899e40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f18243401d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7f18238d1d50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f18243401d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7f182389c400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f18243401d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f18238950c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f18243401d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7f18237cbc50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f18243401d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7f18237ca480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f18243401d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:/opt/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f1823798d50"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f18232a9060"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f18232a9060"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f1823732850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f18232aa0c0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f18237351d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:/opt/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f18232a9800"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f18232a3080"/></to>
    </wire>
    <wire loc="19:/opt/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f18232a36f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f18232acc00"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f18232acc00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f182373c8d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f18232ab8f0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1822f0b970"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1822f0b970"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1823373bc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1823730a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f18232a9800"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1822f05a50"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1823736450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f1823731690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1822f0ccc0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1822f0ccc0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1823375850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f182372d020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1822f052b0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1822f052b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f1823376980"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1823736450"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f18236abdc0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f1823732850"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f18236a9890"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f18237351d0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f18236aa6d0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f182373c8d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f18236ab020"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f18236a7020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1823730a40"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f18236a8230"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f1823731690"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f18236a2290"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f182372d020"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f18236a7690"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f18236958b0"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f18236958b0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f182368b020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f18236a2c90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f18233ea200"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f18233ea200"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f1823b4cb70"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f182369fdd0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f18233ec3c0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f18233ec3c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f18233e4dc0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f182368f3b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f1823687dc0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1823695080"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f182368e710"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f182367a860"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7f182358b3f0"/></to>
    </wire>
    <wire loc="539:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f182358b3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f18234a1100"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f1823684800"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7f18235893f0"/></to>
    </wire>
    <wire loc="540:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f18235893f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f182349cd10"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f1823678800"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7f18235873f0"/></to>
    </wire>
    <wire loc="541:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f18235873f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1823497740"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f1823675800"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7f18235833f0"/></to>
    </wire>
    <wire loc="543:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f18235833f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f18234d1740"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f1823673800"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7f18235853f0"/></to>
    </wire>
    <wire loc="542:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f18235853f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f18234d6d10"/></to>
    </wire>
    <wire loc="442:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f18235f8cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f182352cd10"/></to>
    </wire>
    <wire loc="455:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f18235e4cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f18234fc740"/></to>
    </wire>
    <wire loc="531:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f18235993d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f18234ee740"/></to>
    </wire>
    <wire loc="551:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f18235743e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1823463d10"/></to>
    </wire>
    <wire loc="532:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f18235973f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f18234e9100"/></to>
    </wire>
    <wire loc="460:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f18235e0cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f18234f3d10"/></to>
    </wire>
    <wire loc="473:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f18235ca020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f18234c3740"/></to>
    </wire>
    <wire loc="486:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f18235b6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1823492100"/></to>
    </wire>
    <wire loc="497:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f18235a5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f182346c740"/></to>
    </wire>
    <wire loc="535:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f18235913f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f18234df740"/></to>
    </wire>
    <wire loc="545:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f18235813e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1823480d10"/></to>
    </wire>
    <wire loc="557:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f182356c3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f182345e740"/></to>
    </wire>
    <wire loc="445:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f18235f2cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f182351ed10"/></to>
    </wire>
    <wire loc="536:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f182358f3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f18234da100"/></to>
    </wire>
    <wire loc="450:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f18235eecc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1823514100"/></to>
    </wire>
    <wire loc="463:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f18235d9cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f18234e4d10"/></to>
    </wire>
    <wire loc="476:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f18235c4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f18234b4740"/></to>
    </wire>
    <wire loc="489:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f18235b0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1823484100"/></to>
    </wire>
    <wire loc="500:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f182359f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f182345e740"/></to>
    </wire>
    <wire loc="440:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f18235fccc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1823536740"/></to>
    </wire>
    <wire loc="453:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f18235e8cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1823505260"/></to>
    </wire>
    <wire loc="466:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f18235d3cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f18234d6d10"/></to>
    </wire>
    <wire loc="530:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f182359b3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f18234ee740"/></to>
    </wire>
    <wire loc="548:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f182357a3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1823471d10"/></to>
    </wire>
    <wire loc="555:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f182356e3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f182345e740"/></to>
    </wire>
    <wire loc="471:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f18235cfcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f18234cc3f0"/></to>
    </wire>
    <wire loc="484:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f18235ba020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f182349cd10"/></to>
    </wire>
    <wire loc="495:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f18235a9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1823475100"/></to>
    </wire>
    <wire loc="549:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f18235783e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f182346c740"/></to>
    </wire>
    <wire loc="538:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f182358d3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f18234a6740"/></to>
    </wire>
    <wire loc="443:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f18235f6cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1823527740"/></to>
    </wire>
    <wire loc="456:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f18235e2cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f18234f7100"/></to>
    </wire>
    <wire loc="493:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f18235ad020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1823480d10"/></to>
    </wire>
    <wire loc="461:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f18235decc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f18234ee740"/></to>
    </wire>
    <wire loc="474:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f18235c8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f18234bd100"/></to>
    </wire>
    <wire loc="487:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f18235b4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f182348ed10"/></to>
    </wire>
    <wire loc="498:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f18235a3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1823467100"/></to>
    </wire>
    <wire loc="438:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f1823602e00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f182353f3f0"/></to>
    </wire>
    <wire loc="451:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f18235eccc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1823510d10"/></to>
    </wire>
    <wire loc="464:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f18235d7cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f18234df740"/></to>
    </wire>
    <wire loc="477:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f18235c2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f18234af100"/></to>
    </wire>
    <wire loc="546:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f182357f3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f182347b740"/></to>
    </wire>
    <wire loc="552:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f18235723e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f182345e740"/></to>
    </wire>
    <wire loc="482:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f18235be020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f18234a6740"/></to>
    </wire>
    <wire loc="441:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f18235facc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1823531100"/></to>
    </wire>
    <wire loc="454:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f18235e6cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1823501d10"/></to>
    </wire>
    <wire loc="467:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f18235d1cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f18234d1740"/></to>
    </wire>
    <wire loc="550:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f18235763e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1823467100"/></to>
    </wire>
    <wire loc="472:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f18235cc020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f18234c8e00"/></to>
    </wire>
    <wire loc="485:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f18235b8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1823497740"/></to>
    </wire>
    <wire loc="496:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f18235a7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1823471d10"/></to>
    </wire>
    <wire loc="444:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f18235f4cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1823522100"/></to>
    </wire>
    <wire loc="494:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f18235ab020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f182347b740"/></to>
    </wire>
    <wire loc="449:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f18235f0cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1823519740"/></to>
    </wire>
    <wire loc="462:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f18235dbcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f18234e9100"/></to>
    </wire>
    <wire loc="475:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f18235c6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f18234b9d10"/></to>
    </wire>
    <wire loc="488:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f18235b2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1823489740"/></to>
    </wire>
    <wire loc="499:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f18235a1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1823463d10"/></to>
    </wire>
    <wire loc="439:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f18235fecc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f182353be00"/></to>
    </wire>
    <wire loc="452:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f18235eacc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f182350a740"/></to>
    </wire>
    <wire loc="465:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f18235d5cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f18234da100"/></to>
    </wire>
    <wire loc="478:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f18235c0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f18234abd10"/></to>
    </wire>
    <wire loc="534:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f18235933d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f18234e4d10"/></to>
    </wire>
    <wire loc="547:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f182357c3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1823475100"/></to>
    </wire>
    <wire loc="533:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f18235953f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f18234e4d10"/></to>
    </wire>
    <wire loc="483:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f18235bc020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f18234a1100"/></to>
    </wire>
    <wire loc="554:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f18235703e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1823463d10"/></to>
    </wire>
    <wire loc="558:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f182356a3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1823484100"/></to>
    </wire>
    <wire loc="529:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f182359d060"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f18234f3d10"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f18233b7920"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f18233e47c0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f18233d93a0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f18233ba060"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f18233ba060"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f18233b4440"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f18233df660"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f18233b9380"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f18233b9380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f182339f020"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f18233de980"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f18233b86a0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f18233b86a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f182339ab90"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f18233a3610"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f18235b6020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f182339d2f0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f18235b4020"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1823399de0"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f18235b2020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1822f0a8d0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f18236958b0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1822f0a130"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f18233724b0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f18233724b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f18232df060"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1823371280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1822f05a50"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1823373bc0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f18232e1bf0"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f18232e1bf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1822b4f3a0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f1823376980"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f182336e5c0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1823375850"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f18232e2e60"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f18232e2e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1822b51540"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f18232df060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1822b4e8b0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f182335b690"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f182368f3b0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f18232df930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1823371280"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f182335a4b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f18232df060"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f18232c49d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f18232e0400"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f18232e0400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1822b4fb20"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f18232d9b20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1823695080"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1822b4d210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f18232df930"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f1822b4d9d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f1822b53330"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f1822b4bc50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f18243401d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1822b1a3a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f18232d9b20"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1822b1ab00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f18232c4400"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1822b190f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f18232c49d0"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1822b19d00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f18232c3720"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-main/tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x7f182323b500"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f18243401d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f182321e680"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f1823224be0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-main/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f1823218380"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f1823de4a60"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-main/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f1823218aa0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f18239853b0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/opt/tinyos-main/tos/system/MainC.nc">
      <documentation loc="45:/opt/tinyos-main/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/opt/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/opt/tinyos-main/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/opt/tinyos-main/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/opt/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/opt/tinyos-main/tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/opt/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="TestPrintfC" loc="4:TestPrintfC.nc">
      <module/>
    </component>
    <component qname="TestPrintfAppC.TimerMilliC" loc="44(TestPrintfAppC.TimerMilliC):/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/opt/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1823c0b640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1823c0b9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/opt/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1823c0b640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1823c0b9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1823de7e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1823c0b200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1824c31920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1823c0b640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1823c0b9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1824c31920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1823de7e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1823c0b200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1824c31920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1823c0b640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1823c0b9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1823de7e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1823c0b200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1823de7e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1823c0b200"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1823de7e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1823c0b200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/tinyos-main/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1823dfc210"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/opt/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/opt/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/opt/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:/opt/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:/opt/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):/opt/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):/opt/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:/opt/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/opt/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):/opt/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
          </type-int>
          <value cst="I:250">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:/opt/tinyos-main/tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:/opt/tinyos-main/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/opt/tinyos-main/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/opt/tinyos-main/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/opt/tinyos-main/tos/lib/printf/PutcharP.nc">
      <documentation loc="64:/opt/tinyos-main/tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/opt/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/lib/serial/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="primeC" loc="1:primeC.nc">
      <configuration/>
    </component>
    <component qname="primeP" loc="2:primeP.nc">
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f1823d33890" loc="40:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f1823d33c30" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f1823d32020" loc="42:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f1823d323a0" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f1823d32720" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f1823d32a90" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f1823d32e20" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f1823d30200" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f1823d305d0" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f18242d6090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f1823cf5e70" loc="40:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f1823cf2270" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f1823b833b0" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f1823b833b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/opt/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f1823b46c80" loc="42:/opt/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f1823b46c80"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f1823b30570" loc="55:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f1823b30570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f1823b30d40" loc="56:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f1823b30d40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f1823b2f160" loc="57:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f1823b2f160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f1823b2f940" loc="58:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f1823b2f940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f1823b2fd10" loc="59:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f1823b2e540" loc="60:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f1823b2e540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f1823b0fae0" loc="52:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f1823b0fae0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f1823b0c2d0" loc="53:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f1823b0c2d0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f1823b0c6c0" loc="54:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f1823b0c6c0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f1823b0b020" loc="55:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f1823b0b020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f1823b0b3f0" loc="56:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1823acd4f0" loc="46:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1823acd4f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1823a9dd80" loc="46:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1823a9dd80"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f1823a99110" loc="46:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1823a481f0" loc="46:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1823a481f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f1823a2c680" loc="47:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1823dfc210"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f18239fc0d0" loc="43:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1823dfc210"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f18239d90d0" loc="45:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f1823565890" loc="40:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f1823565c40" loc="41:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f1823564020" loc="42:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f18235643d0" loc="43:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f1823564740" loc="44:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/opt/tinyos-main/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f1823355020" loc="89:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f18233480d0" loc="42:/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/tinyos-main/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f182332d800" loc="52:/opt/tinyos-main/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/opt/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/opt/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/opt/tinyos-main/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7f1823275bb0" loc="42:/opt/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7f1823275bb0"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7f1823272020" loc="42:/opt/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f1823de5020" loc="58:/opt/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f1823de5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1823de53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f1823de4a60" loc="57:/opt/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f1823de4a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f1823de4de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1823de0020" loc="42:/opt/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1823de0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1823de03a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f1823ddc0c0" loc="6:/opt/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f1823ddc0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1823ddc440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1823ddd280" loc="4:/opt/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1823ddd280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1823ddd600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f1823ddd990" loc="5:/opt/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f1823ddd990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1823dddd10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f1823ddc7a0" loc="7:/opt/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f1823ddc7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1823ddcb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1823dd6450" loc="2:/opt/tinyos-main/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1823dd6450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1823dd67d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f1823dde910" loc="39:/opt/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f1823dde910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1823ddec90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f1823db5de0" loc="40:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f1823db5de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f1823dbac70"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f1823dba310"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f1823dba4a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f1823dba630"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f1823dba180"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f1823dba7c0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f1823dba950"/>
        <function-ref name="initClocks" scoped="" ref="0x7f1823dbaae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1823dbe850" loc="39:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1823dbe850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1823dbebd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f1823da4350" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f1823da4350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f1823da3340"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f1823da4860"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f1823da49f0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f1823da4b80"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f1823da46d0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f1823da4d10"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f1823da3020"/>
        <function-ref name="initClocks" scoped="" ref="0x7f1823da31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f1823da3680" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f1823da3680"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f1823da3a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1823da5c00" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1823da5c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1823da4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f1823d605a0" loc="42:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f1823d605a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1823d60920"/>
        <function-ref name="getControl" scoped="" ref="0x7f1823d60ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1823d60c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1823d60dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1823d5f020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1823d5f1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1823d5f340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1823d5f4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1823d5f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f1823d4e020" loc="51:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f1823d4e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1823d4e3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1823d4e530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1823d4e6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1823d4e850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1823d4e9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1823d4eb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1823d4ed00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1823d4d020"/>
        <function-ref name="setControl" scoped="" ref="0x7f1823d4d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f1823d57700" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f1823d57700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823d57a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1823d57c10"/>
        <function-ref name="captured" scoped="" ref="0x7f1823d57da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823d56020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823d561b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1823d56340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f1823d3ba20" loc="68:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f1823d3ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823d3bda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1823d3a020"/>
        <function-ref name="captured" scoped="" ref="0x7f1823d3a1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823d3a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823d3a4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1823d3a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f1823d5eaa0" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f1823d5eaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823d5ee20"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1823d5d020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1823d5d1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1823d5d340"/>
        <function-ref name="fired" scoped="" ref="0x7f1823d5d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f1823d41020" loc="61:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f1823d41020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823d413a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1823d41530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1823d416c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1823d41850"/>
        <function-ref name="fired" scoped="" ref="0x7f1823d419e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f1823d38a20" loc="71:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f1823d38a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823d38da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1823d37020"/>
        <function-ref name="captured" scoped="" ref="0x7f1823d371b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823d37340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823d374d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1823d37660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f1823d485a0" loc="55:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f1823d485a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1823d48920"/>
        <function-ref name="getControl" scoped="" ref="0x7f1823d48ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1823d48c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1823d48dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1823d47020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1823d471b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1823d47340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1823d474d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1823d47660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f1823d61b10" loc="40:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f1823d61b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1823d68020"/>
        <function-ref name="getControl" scoped="" ref="0x7f1823d681b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1823d68340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1823d684d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1823d68660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1823d687f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1823d68980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1823d68b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f1823d68ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f1823d3da20" loc="66:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f1823d3da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823d3dda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1823d3c020"/>
        <function-ref name="captured" scoped="" ref="0x7f1823d3c1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823d3c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823d3c4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1823d3c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f1823d433e0" loc="59:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f1823d433e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823d43760"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1823d438f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1823d43a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1823d43c10"/>
        <function-ref name="fired" scoped="" ref="0x7f1823d43da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f1823d4d5a0" loc="52:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f1823d4d5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1823d4da20"/>
        <function-ref name="getControl" scoped="" ref="0x7f1823d4dbb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1823d4dd40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1823d4c020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1823d4c1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1823d4c340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1823d4c4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1823d4c660"/>
        <function-ref name="setControl" scoped="" ref="0x7f1823d4c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f1823d56700" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f1823d56700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823d56a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1823d56c10"/>
        <function-ref name="captured" scoped="" ref="0x7f1823d56da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823d50020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823d501b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1823d50340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f1823d3aa20" loc="69:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f1823d3aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823d3ada0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1823d39020"/>
        <function-ref name="captured" scoped="" ref="0x7f1823d391b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823d39340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823d394d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1823d39660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f1823d4cbe0" loc="53:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f1823d4cbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1823d4a020"/>
        <function-ref name="getControl" scoped="" ref="0x7f1823d4a1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1823d4a340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1823d4a4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1823d4a660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1823d4a7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1823d4a980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1823d4ab10"/>
        <function-ref name="setControl" scoped="" ref="0x7f1823d4aca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f1823d5d890" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f1823d5d890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823d5dc10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1823d5dda0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1823d58020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1823d581b0"/>
        <function-ref name="fired" scoped="" ref="0x7f1823d58340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f1823d71060" loc="39:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f1823d71060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1823d713e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1823d71570"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1823d71700"/>
        <function-ref name="get" scoped="" ref="0x7f1823d71890"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1823d71a20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823d71bb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1823d71d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823d70020"/>
        <function-ref name="overflow" scoped="" ref="0x7f1823d701b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1823d70340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1823d704d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f1823d41da0" loc="62:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f1823d41da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823d40180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1823d40310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1823d404a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1823d40630"/>
        <function-ref name="fired" scoped="" ref="0x7f1823d407c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f1823d670c0" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f1823d670c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1823d67440"/>
        <function-ref name="getControl" scoped="" ref="0x7f1823d675d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1823d67760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1823d678f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1823d67a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1823d67c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1823d67da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1823d60020"/>
        <function-ref name="setControl" scoped="" ref="0x7f1823d601b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f1823d47a50" loc="56:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f1823d47a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1823d47dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1823d46020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1823d461b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1823d46340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1823d464d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1823d46660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1823d467f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1823d46980"/>
        <function-ref name="setControl" scoped="" ref="0x7f1823d46b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f1823d51690" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f1823d51690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823d51a10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1823d51ba0"/>
        <function-ref name="captured" scoped="" ref="0x7f1823d51d30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823d57020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823d571b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1823d57340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f1823d3ca20" loc="67:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f1823d3ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823d3cda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1823d3b020"/>
        <function-ref name="captured" scoped="" ref="0x7f1823d3b1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823d3b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823d3b4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1823d3b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f1823d59cf0" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f1823d59cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823d5e0a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1823d5e230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1823d5e3c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1823d5e550"/>
        <function-ref name="fired" scoped="" ref="0x7f1823d5e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f1823d421f0" loc="60:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f1823d421f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823d42570"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1823d42700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1823d42890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1823d42a20"/>
        <function-ref name="fired" scoped="" ref="0x7f1823d42bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f1823d39a20" loc="70:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f1823d39a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823d39da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1823d38020"/>
        <function-ref name="captured" scoped="" ref="0x7f1823d381b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823d38340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823d384d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1823d38660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f1823d490c0" loc="54:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f1823d490c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1823d49440"/>
        <function-ref name="getControl" scoped="" ref="0x7f1823d495d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1823d49760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1823d498f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1823d49a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1823d49c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1823d49da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1823d48020"/>
        <function-ref name="setControl" scoped="" ref="0x7f1823d481b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f1823d506c0" loc="50:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f1823d506c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1823d50a40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1823d50bd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1823d50d60"/>
        <function-ref name="get" scoped="" ref="0x7f1823d4f020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1823d4f1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823d4f340"/>
        <function-ref name="getMode" scoped="" ref="0x7f1823d4f4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823d4f660"/>
        <function-ref name="overflow" scoped="" ref="0x7f1823d4f7f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1823d4f980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1823d4fb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f1823d40b80" loc="63:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f1823d40b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823d3f020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1823d3f1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1823d3f340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1823d3f4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f1823d3f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f1823d3ea20" loc="65:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f1823d3ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823d3eda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1823d3d020"/>
        <function-ref name="captured" scoped="" ref="0x7f1823d3d1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823d3d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823d3d4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1823d3d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f1823d3fa20" loc="64:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f1823d3fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823d3e020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1823d3e1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1823d3e340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1823d3e4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f1823d3e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f1823d44570" loc="58:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f1823d44570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823d448f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1823d44a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1823d44c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1823d44da0"/>
        <function-ref name="fired" scoped="" ref="0x7f1823d43020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f1823d45020" loc="57:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f1823d45020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1823d453a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1823d45530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1823d456c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1823d45850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1823d459e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1823d45b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1823d45d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1823d44020"/>
        <function-ref name="setControl" scoped="" ref="0x7f1823d441b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f1823cffaa0" loc="53:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f1823cffaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1823cffe20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f1823cff450" loc="52:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f1823cff450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1823cff7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f1823cfd120" loc="54:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f1823cfd120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1823cfd4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f1823d00d80" loc="51:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1823d00d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1823cff180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1823d01540" loc="50:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1823d01540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1823d018c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1823d01a50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1823d01be0"/>
        <function-ref name="get" scoped="" ref="0x7f1823d01d70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1823d00020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823d001b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1823d00340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823d004d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1823d00660"/>
        <function-ref name="setMode" scoped="" ref="0x7f1823d007f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1823d00980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f1823cf7940" loc="53:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f1823cf7940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1823cf7cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f1823cf72f0" loc="52:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f1823cf72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1823cf7670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f1823cf6020" loc="54:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f1823cf6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1823cf63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f1823cf8bf0" loc="51:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1823cf8bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1823cf7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1823cf93e0" loc="50:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1823cf93e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1823cf9760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1823cf98f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1823cf9a80"/>
        <function-ref name="get" scoped="" ref="0x7f1823cf9c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1823cf9da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823cf8020"/>
        <function-ref name="getMode" scoped="" ref="0x7f1823cf81b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823cf8340"/>
        <function-ref name="overflow" scoped="" ref="0x7f1823cf84d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1823cf8660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1823cf87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1823caba90" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1823caba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823cabe10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1823caa020"/>
        <function-ref name="captured" scoped="" ref="0x7f1823caa1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823caa340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823caa4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1823caa660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1823cf39d0" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1823cf39d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1823cf3d50"/>
        <function-ref name="getControl" scoped="" ref="0x7f1823cac020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1823cac1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1823cac340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1823cac4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1823cac660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1823cac7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1823cac980"/>
        <function-ref name="setControl" scoped="" ref="0x7f1823cacb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1823ca8020" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1823ca8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1823ca83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1823cacde0" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1823cacde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823cab180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1823cab310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1823cab4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1823cab630"/>
        <function-ref name="fired" scoped="" ref="0x7f1823cab7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1823caa930" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1823caa930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1823caacb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1823caae40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1823ca9020"/>
        <function-ref name="get" scoped="" ref="0x7f1823ca91b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1823ca9340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823ca94d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1823ca9660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823ca97f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1823ca9980"/>
        <function-ref name="setMode" scoped="" ref="0x7f1823ca9b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1823ca9ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1823ca3160" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1823ca3160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823ca34e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1823ca3670"/>
        <function-ref name="captured" scoped="" ref="0x7f1823ca3800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823ca3990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823ca3b20"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1823ca3cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1823ca5020" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1823ca5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1823ca53a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1823ca5530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1823ca56c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1823ca5850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1823ca59e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1823ca5b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1823ca5d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1823ca4020"/>
        <function-ref name="setControl" scoped="" ref="0x7f1823ca41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1823ca07a0" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1823ca07a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1823ca0b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1823ca4480" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1823ca4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823ca4800"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1823ca4990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1823ca4b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1823ca4cb0"/>
        <function-ref name="fired" scoped="" ref="0x7f1823ca4e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1823ca2020" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1823ca2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1823ca23a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1823ca2530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1823ca26c0"/>
        <function-ref name="get" scoped="" ref="0x7f1823ca2850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1823ca29e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823ca2b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f1823ca2d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823ca0020"/>
        <function-ref name="overflow" scoped="" ref="0x7f1823ca01b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1823ca0340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1823ca04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1823c9b7a0" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1823c9b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823c9bb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1823c9bcb0"/>
        <function-ref name="captured" scoped="" ref="0x7f1823c9be40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823c9a020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823c9a1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1823c9a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1823c9d6d0" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1823c9d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1823c9da50"/>
        <function-ref name="getControl" scoped="" ref="0x7f1823c9dbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1823c9dd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1823c9c020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1823c9c1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1823c9c340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1823c9c4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1823c9c660"/>
        <function-ref name="setControl" scoped="" ref="0x7f1823c9c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1823c99c50" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1823c99c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1823c98020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1823c9cac0" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1823c9cac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823c9ce40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1823c9b020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1823c9b1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1823c9b340"/>
        <function-ref name="fired" scoped="" ref="0x7f1823c9b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1823c9a610" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1823c9a610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1823c9a990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1823c9ab20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1823c9acb0"/>
        <function-ref name="get" scoped="" ref="0x7f1823c9ae40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1823c99020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823c991b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1823c99340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823c994d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1823c99660"/>
        <function-ref name="setMode" scoped="" ref="0x7f1823c997f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1823c99980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1823c94cb0" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1823c94cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823c930a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1823c93230"/>
        <function-ref name="captured" scoped="" ref="0x7f1823c933c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823c93550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823c936e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1823c93870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1823c96b30" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1823c96b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1823c95020"/>
        <function-ref name="getControl" scoped="" ref="0x7f1823c951b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1823c95340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1823c954d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1823c95660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1823c957f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1823c95980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1823c95b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f1823c95ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1823c902f0" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1823c902f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1823c90670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1823c94020" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1823c94020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823c943a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1823c94530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1823c946c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1823c94850"/>
        <function-ref name="fired" scoped="" ref="0x7f1823c949e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1823c93b40" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1823c93b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1823c91020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1823c911b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1823c91340"/>
        <function-ref name="get" scoped="" ref="0x7f1823c914d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1823c91660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823c917f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1823c91980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823c91b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f1823c91ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1823c91e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1823c90020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1823c8b2f0" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1823c8b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823c8b670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1823c8b800"/>
        <function-ref name="captured" scoped="" ref="0x7f1823c8b990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823c8bb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823c8bcb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1823c8be40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1823c8d220" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1823c8d220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1823c8d5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1823c8d730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1823c8d8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1823c8da50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1823c8dbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1823c8dd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1823c8c020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1823c8c1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1823c8c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1823c897a0" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1823c897a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1823c89b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1823c8c610" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1823c8c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823c8c990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1823c8cb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1823c8ccb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1823c8ce40"/>
        <function-ref name="fired" scoped="" ref="0x7f1823c8b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1823c8a160" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1823c8a160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1823c8a4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1823c8a670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1823c8a800"/>
        <function-ref name="get" scoped="" ref="0x7f1823c8a990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1823c8ab20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823c8acb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1823c8ae40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823c89020"/>
        <function-ref name="overflow" scoped="" ref="0x7f1823c891b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1823c89340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1823c894d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1823c847a0" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1823c847a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823c84b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1823c84cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f1823c84e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823c83020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823c831b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1823c83340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1823c866d0" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1823c866d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1823c86a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f1823c86be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1823c86d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1823c85020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1823c851b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1823c85340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1823c854d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1823c85660"/>
        <function-ref name="setControl" scoped="" ref="0x7f1823c857f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1823c82c50" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1823c82c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1823c80020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1823c85ac0" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1823c85ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823c85e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1823c84020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1823c841b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1823c84340"/>
        <function-ref name="fired" scoped="" ref="0x7f1823c844d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1823c83610" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1823c83610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1823c83990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1823c83b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1823c83cb0"/>
        <function-ref name="get" scoped="" ref="0x7f1823c83e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1823c82020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823c821b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1823c82340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823c824d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1823c82660"/>
        <function-ref name="setMode" scoped="" ref="0x7f1823c827f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1823c82980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1823c7ccb0" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1823c7ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823c7b0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1823c7b230"/>
        <function-ref name="captured" scoped="" ref="0x7f1823c7b3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823c7b550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823c7b6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1823c7b870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1823c7eb30" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1823c7eb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1823c7d020"/>
        <function-ref name="getControl" scoped="" ref="0x7f1823c7d1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1823c7d340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1823c7d4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1823c7d660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1823c7d7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1823c7d980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1823c7db10"/>
        <function-ref name="setControl" scoped="" ref="0x7f1823c7dca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1823c792f0" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1823c792f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1823c79670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1823c7c020" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1823c7c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823c7c3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1823c7c530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1823c7c6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1823c7c850"/>
        <function-ref name="fired" scoped="" ref="0x7f1823c7c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1823c7bb40" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1823c7bb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1823c7a020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1823c7a1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1823c7a340"/>
        <function-ref name="get" scoped="" ref="0x7f1823c7a4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1823c7a660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823c7a7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1823c7a980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823c7ab10"/>
        <function-ref name="overflow" scoped="" ref="0x7f1823c7aca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1823c7ae30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1823c79020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1823c742f0" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1823c742f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823c74670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1823c74800"/>
        <function-ref name="captured" scoped="" ref="0x7f1823c74990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823c74b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823c74cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1823c74e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1823c76220" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1823c76220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1823c765a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1823c76730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1823c768c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1823c76a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1823c76be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1823c76d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1823c75020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1823c751b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1823c75340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1823c727a0" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1823c727a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1823c72b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1823c75610" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1823c75610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823c75990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1823c75b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1823c75cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1823c75e40"/>
        <function-ref name="fired" scoped="" ref="0x7f1823c74020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1823c73160" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1823c73160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1823c734e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1823c73670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1823c73800"/>
        <function-ref name="get" scoped="" ref="0x7f1823c73990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1823c73b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823c73cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1823c73e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823c72020"/>
        <function-ref name="overflow" scoped="" ref="0x7f1823c721b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1823c72340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1823c724d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1823c6c7a0" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1823c6c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823c6cb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1823c6ccb0"/>
        <function-ref name="captured" scoped="" ref="0x7f1823c6ce40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823c6b020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823c6b1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1823c6b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1823c6e6d0" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1823c6e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1823c6ea50"/>
        <function-ref name="getControl" scoped="" ref="0x7f1823c6ebe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1823c6ed70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1823c6d020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1823c6d1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1823c6d340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1823c6d4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1823c6d660"/>
        <function-ref name="setControl" scoped="" ref="0x7f1823c6d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1823c6ac50" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1823c6ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1823c69020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1823c6dac0" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1823c6dac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823c6de40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1823c6c020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1823c6c1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1823c6c340"/>
        <function-ref name="fired" scoped="" ref="0x7f1823c6c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1823c6b610" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1823c6b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1823c6b990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1823c6bb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1823c6bcb0"/>
        <function-ref name="get" scoped="" ref="0x7f1823c6be40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1823c6a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823c6a1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1823c6a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823c6a4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1823c6a660"/>
        <function-ref name="setMode" scoped="" ref="0x7f1823c6a7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1823c6a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1823c65cb0" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1823c65cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823c640a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1823c64230"/>
        <function-ref name="captured" scoped="" ref="0x7f1823c643c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823c64550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823c646e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1823c64870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1823c67b30" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1823c67b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1823c66020"/>
        <function-ref name="getControl" scoped="" ref="0x7f1823c661b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1823c66340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1823c664d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1823c66660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1823c667f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1823c66980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1823c66b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f1823c66ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1823c622f0" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1823c622f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1823c62670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1823c65020" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1823c65020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823c653a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1823c65530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1823c656c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1823c65850"/>
        <function-ref name="fired" scoped="" ref="0x7f1823c659e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1823c64b40" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1823c64b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1823c63020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1823c631b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1823c63340"/>
        <function-ref name="get" scoped="" ref="0x7f1823c634d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1823c63660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823c637f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1823c63980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823c63b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f1823c63ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1823c63e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1823c62020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f1823c5b240" loc="7:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f1823c5b240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1823c5b5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f1823c5fa90" loc="4:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f1823c5fa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1823c5fe10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f1823c5c260" loc="5:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f1823c5c260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1823c5c5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f1823c5c9f0" loc="6:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f1823c5c9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1823c5cd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f182412f080" loc="55:/opt/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f182412f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f182412f400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f18242682d0" loc="51:/opt/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f18242682d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f1824268650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f18240907d0" loc="52:/opt/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f18240907d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f1824090b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f1823dbcb50" loc="39:/opt/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f1823dbcb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f1823c24b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f1823c241b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f1823c24340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f1823c244d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f1823c24020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f1823c24660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f1823c247f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f1823c24980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f1823c17dc0" loc="60:/opt/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f1823c17dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1823c16180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f1823c18590" loc="57:/opt/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f1823c18590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f1823c18910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f1823c176c0" loc="59:/opt/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f1823c176c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1823c17a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f1823c18c00" loc="58:/opt/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f1823c18c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1823c17020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f1823c171b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f1823c17340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f18243401d0" loc="48:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f18243401d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1824340550"/>
        <function-ref name="runTask" scoped="" ref="0x7f18243406e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f18242d13a0" loc="47:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f18242d13a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f18242d1720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f18242d18b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f18242d1a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f1823e7a040" loc="56:/opt/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f1823e7a040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1823e7a3c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1823e7a550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f1823e775d0" loc="57:/opt/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f1823e775d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f1823e77950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f1823e7c140" loc="55:/opt/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f1823e7c140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1823e7c4c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f1823e7c650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f1823e7c7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f1823c0a5d0" loc="6:TestPrintfC.nc">
      <component-ref qname="TestPrintfC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f1823c0a5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f1823c0a950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x7f1823bf2a40" loc="9:TestPrintfC.nc">
      <component-ref qname="TestPrintfC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f1823bf2a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1823de7e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1823c0b200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1823bf96b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="primeModule" ref="0x7f1823bf4750" loc="8:TestPrintfC.nc">
      <component-ref qname="TestPrintfC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="primeModule" scoped="" ref="0x7f1823bf4750"/></type-interface>
      <instance>
        <interfacedef-ref qname="primeModule"/>
      </instance>
      <interface-functions>
        <function-ref name="isPrime" scoped="" ref="0x7f1823bf4ad0"/>
        <function-ref name="genLargeNum" scoped="" ref="0x7f1823bf4c60"/>
        <function-ref name="power" scoped="" ref="0x7f1823bf4df0"/>
        <function-ref name="gcd" scoped="" ref="0x7f1823bfa020"/>
        <function-ref name="genLargePrime" scoped="" ref="0x7f1823bfa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1823bfe770" loc="7:TestPrintfC.nc">
      <component-ref qname="TestPrintfC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1823bfe770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1823de7e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1823c0b200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1823bfcc40"/>
        <function-ref name="fired" scoped="" ref="0x7f1823c081e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1823bfc020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1823c08ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1823bfb590"/>
        <function-ref name="gett0" scoped="" ref="0x7f1823bfb110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1823c08660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1823c09390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1823bfc630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1823c09860"/>
        <function-ref name="stop" scoped="" ref="0x7f1823c09d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1823be0640" loc="45:/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="TestPrintfAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1823be0640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1823de7e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1823c0b200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1823a34c40"/>
        <function-ref name="fired" scoped="" ref="0x7f1823a361e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1823a34020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1823a36ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1823a33590"/>
        <function-ref name="gett0" scoped="" ref="0x7f1823a33110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1823a36660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1823a37390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1823a34630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1823a37860"/>
        <function-ref name="stop" scoped="" ref="0x7f1823a37d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f1823bd71d0" loc="49:/opt/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f1823bd71d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1823de7e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1823c0b200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1823bd4630"/>
        <function-ref name="fired" scoped="" ref="0x7f1823bd6c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1823bd59d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1823bd5550"/>
        <function-ref name="getdt" scoped="" ref="0x7f1823bd2020"/>
        <function-ref name="gett0" scoped="" ref="0x7f1823bd4ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1823bd50d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1823bd7dc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1823bd4020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1823bd62e0"/>
        <function-ref name="stop" scoped="" ref="0x7f1823bd67b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f1823bcfc30" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f1823bcfc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1823de7e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1823c0b200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1823bca110"/>
        <function-ref name="fired" scoped="" ref="0x7f1823bcc6a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1823bcb4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1823bcb020"/>
        <function-ref name="getdt" scoped="" ref="0x7f1823bcaa10"/>
        <function-ref name="gett0" scoped="" ref="0x7f1823bca590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1823bccb20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1823bce860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1823bcbab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1823bced30"/>
        <function-ref name="stop" scoped="" ref="0x7f1823bcc220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f1823bc8080" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f1823bc8080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1823de7e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1823c0b200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1823bc8cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1823bd2e50" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1823bd2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1823bcf210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1823ad4020" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1823ad4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1823de7e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1823c0b200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1824c31920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1823ad2870"/>
        <function-ref name="fired" scoped="" ref="0x7f1823ad3840"/>
        <function-ref name="startAt" scoped="" ref="0x7f1823ad2220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1823ad3d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1823ad2d30"/>
        <function-ref name="start" scoped="" ref="0x7f1823ad4e30"/>
        <function-ref name="stop" scoped="" ref="0x7f1823ad3380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1823ad5760" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1823ad5760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1823ad5ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f18230704f0" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f18230704f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1823c0b640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1823c0b9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1823068db0"/>
        <function-ref name="fired" scoped="" ref="0x7f1823069da0"/>
        <function-ref name="startAt" scoped="" ref="0x7f1823068760"/>
        <function-ref name="isRunning" scoped="" ref="0x7f18230682a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f18230672a0"/>
        <function-ref name="start" scoped="" ref="0x7f18230693d0"/>
        <function-ref name="stop" scoped="" ref="0x7f18230698e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1823071b10" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1823071b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1823070020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f1823052da0" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f1823052da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823051180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1823051310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f18230514a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1823051630"/>
        <function-ref name="fired" scoped="" ref="0x7f18230517c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f1823054340" loc="39:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1823054340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f18230546c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1823054850"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f18230549e0"/>
        <function-ref name="get" scoped="" ref="0x7f1823054b70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1823054d00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823053020"/>
        <function-ref name="getMode" scoped="" ref="0x7f18230531b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823053340"/>
        <function-ref name="overflow" scoped="" ref="0x7f18230534d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1823053660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f18230537f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f1823053a80" loc="40:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1823053a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1823053e00"/>
        <function-ref name="getControl" scoped="" ref="0x7f1823052020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f18230521b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1823052340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f18230524d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1823052660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f18230527f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1823052980"/>
        <function-ref name="setControl" scoped="" ref="0x7f1823052b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f1823ba31d0" loc="52:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f1823ba31d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823ba3550"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1823ba36e0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1823ba3870"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1823ba3a00"/>
        <function-ref name="fired" scoped="" ref="0x7f1823ba3b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f1823ba8990" loc="50:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1823ba8990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1823ba8d10"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1823ba7020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1823ba71b0"/>
        <function-ref name="get" scoped="" ref="0x7f1823ba7340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1823ba74d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823ba7660"/>
        <function-ref name="getMode" scoped="" ref="0x7f1823ba77f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823ba7980"/>
        <function-ref name="overflow" scoped="" ref="0x7f1823ba7b10"/>
        <function-ref name="setMode" scoped="" ref="0x7f1823ba7ca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1823ba7e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f1823ba6720" loc="51:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1823ba6720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1823ba6aa0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1823ba6c30"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1823ba6dc0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1823ba5020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1823ba51b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1823ba5340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1823ba54d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1823ba5660"/>
        <function-ref name="setControl" scoped="" ref="0x7f1823ba57f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f1823048a80" loc="49:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f1823048a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1823048e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1823047020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f18230471b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1823047340"/>
        <function-ref name="fired" scoped="" ref="0x7f18230474d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f182304a190" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f182304a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f182304a510"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f182304a6a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f182304a830"/>
        <function-ref name="get" scoped="" ref="0x7f182304a9c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f182304ab50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f182304ace0"/>
        <function-ref name="getMode" scoped="" ref="0x7f182304ae70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823049030"/>
        <function-ref name="overflow" scoped="" ref="0x7f18230491c0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1823049350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f18230494e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f182304e020" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f182304e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1823c0b640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1823c0b9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f182304c870"/>
        <function-ref name="fired" scoped="" ref="0x7f182304d840"/>
        <function-ref name="startAt" scoped="" ref="0x7f182304c220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f182304dd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f182304cd30"/>
        <function-ref name="start" scoped="" ref="0x7f182304ee30"/>
        <function-ref name="stop" scoped="" ref="0x7f182304d380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f182304f660" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f182304f660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f182304f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f1823049770" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1823049770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1823049af0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1823049c80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1823049e10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1823048020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f18230481b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1823048340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f18230484d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1823048660"/>
        <function-ref name="setControl" scoped="" ref="0x7f18230487f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1823b4eb50" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1823b4eb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1823de7e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1823c0b200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1824c31920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1823b529b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823b4d360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823b52e70"/>
        <function-ref name="overflow" scoped="" ref="0x7f1823b4d820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f1823b4cb70" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f1823b4cb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1823c0b640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1823c0b9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1823b499b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823b48360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823b49e70"/>
        <function-ref name="overflow" scoped="" ref="0x7f1823b48820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f1823b37c50" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1823b37c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1823b36020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1823b361b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1823b36340"/>
        <function-ref name="get" scoped="" ref="0x7f1823b364d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1823b36660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823b367f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1823b36980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823b36b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f1823b36ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1823b36e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1823b35020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1823b45b80" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1823b45b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1823c0b640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1823c0b9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1823b449b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823b37360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823b44e70"/>
        <function-ref name="overflow" scoped="" ref="0x7f1823b37820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f1823b130f0" loc="63:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f1823b130f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1823c0b640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1823c0b9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1823b12020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823b129a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823b124e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1823b12e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1823b31cf0" loc="62:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1823b31cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1823de7e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1823c0b200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1824c31920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1823b16b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823b15550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823b15090"/>
        <function-ref name="overflow" scoped="" ref="0x7f1823b15a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1823065890" loc="61:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1823065890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1823de7e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1823c0b200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1824c31920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f18230610d0"/>
        <function-ref name="fired" scoped="" ref="0x7f18230630d0"/>
        <function-ref name="startAt" scoped="" ref="0x7f1823063a50"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1823063590"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1823061590"/>
        <function-ref name="start" scoped="" ref="0x7f18230646e0"/>
        <function-ref name="stop" scoped="" ref="0x7f1823064bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f182305e0a0" loc="73:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f182305e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1823c0b640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1823c0b9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f182305bb30"/>
        <function-ref name="fired" scoped="" ref="0x7f182305d9f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f182305b4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f182305b020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f182305a020"/>
        <function-ref name="start" scoped="" ref="0x7f182305d020"/>
        <function-ref name="stop" scoped="" ref="0x7f182305d530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1823061c00" loc="68:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1823061c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1823de7e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1823c0b200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1824c31920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1823060a80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f182305f4e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f182305f020"/>
        <function-ref name="overflow" scoped="" ref="0x7f182305f9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f1823a9f490" loc="74:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f1823a9f490"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1823a9f810"/>
        <function-ref name="runTask" scoped="" ref="0x7f1823a9f9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f1823aa31d0" loc="49:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1823aa31d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1823de7e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1823c0b200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1824c31920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1823aa0b30"/>
        <function-ref name="fired" scoped="" ref="0x7f1823aa19f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f1823aa04e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1823aa0020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1823a9f020"/>
        <function-ref name="start" scoped="" ref="0x7f1823aa1020"/>
        <function-ref name="stop" scoped="" ref="0x7f1823aa1530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1823aa9cf0" loc="48:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1823aa9cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1823de7e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1823c0b200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1823aa4220"/>
        <function-ref name="fired" scoped="" ref="0x7f1823aa67c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1823aa5590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1823aa5110"/>
        <function-ref name="getdt" scoped="" ref="0x7f1823aa4b20"/>
        <function-ref name="gett0" scoped="" ref="0x7f1823aa46a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1823aa6c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1823aa8940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1823aa5ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1823aa8e10"/>
        <function-ref name="stop" scoped="" ref="0x7f1823aa6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f1823a4fe80" loc="71:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f1823a4fe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1823a4d220"/>
        <function-ref name="runTask" scoped="" ref="0x7f1823a4d3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f1823a54c30" loc="49:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f1823a54c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1823de7e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1823c0b200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1823a4f110"/>
        <function-ref name="fired" scoped="" ref="0x7f1823a516a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1823a504a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1823a50020"/>
        <function-ref name="getdt" scoped="" ref="0x7f1823a4fa10"/>
        <function-ref name="gett0" scoped="" ref="0x7f1823a4f590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1823a51b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1823a52860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1823a50ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1823a52d30"/>
        <function-ref name="stop" scoped="" ref="0x7f1823a51220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1823a5a690" loc="48:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1823a5a690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1823de7e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1823c0b200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1823a56cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f1823a57260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1823a56090"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1823a57ba0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1823a54680"/>
        <function-ref name="gett0" scoped="" ref="0x7f1823a541e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1823a57700"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1823a59390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1823a566c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1823a59880"/>
        <function-ref name="stop" scoped="" ref="0x7f1823a59d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f1823a4bcf0" loc="48:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f1823a4bcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1823de7e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1823c0b200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1823a40980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1823a3f020" loc="49:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1823a3f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1823de7e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1823c0b200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1824c31920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1823a3fe30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1823a3e800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1823a3e340"/>
        <function-ref name="overflow" scoped="" ref="0x7f1823a3ecc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f1823a32c90" loc="20:/opt/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f1823a32c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1823de7e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1823c0b200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1823a2f8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f182327b540" loc="49:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f182327b540"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f182327b8c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f182327ba50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f182327bbe0"/>
        <function-ref name="cancel" scoped="" ref="0x7f182327bd70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1823279020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1823279270" loc="50:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1823279270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f18232795f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1823279780"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1823279910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1823279aa0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1823279c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1823279e80" loc="51:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1823279e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1823278220"/>
        <function-ref name="source" scoped="" ref="0x7f18232783b0"/>
        <function-ref name="address" scoped="" ref="0x7f1823278540"/>
        <function-ref name="destination" scoped="" ref="0x7f18232786d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f1823278860"/>
        <function-ref name="setDestination" scoped="" ref="0x7f18232789f0"/>
        <function-ref name="type" scoped="" ref="0x7f1823278b80"/>
        <function-ref name="setType" scoped="" ref="0x7f1823278d10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1823277020"/>
        <function-ref name="setGroup" scoped="" ref="0x7f18232771b0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1823277340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f18232775d0" loc="52:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f18232775d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1823277950"/>
        <function-ref name="noAck" scoped="" ref="0x7f1823277ae0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1823277c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1822fc6390" loc="44:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1822fc6390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1822fc6710"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1822fc68a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1822fc6a30"/>
        <function-ref name="cancel" scoped="" ref="0x7f1822fc6bc0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1822fc6d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f1822fc5060" loc="46:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1822fc5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1822fc53e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1822fc5570"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1822fc5700"/>
        <function-ref name="cancel" scoped="" ref="0x7f1822fc5890"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1822fc5a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f1822fc5c70" loc="47:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1822fc5c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1822fc4020"/>
        <function-ref name="source" scoped="" ref="0x7f1822fc41b0"/>
        <function-ref name="address" scoped="" ref="0x7f1822fc4340"/>
        <function-ref name="destination" scoped="" ref="0x7f1822fc44d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f1822fc4660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1822fc47f0"/>
        <function-ref name="type" scoped="" ref="0x7f1822fc4980"/>
        <function-ref name="setType" scoped="" ref="0x7f1822fc4b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1822fc4ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1822fc4e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1822fc3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f18239e0cf0" loc="44:/opt/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f18239e0cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f18239dd0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f18239dd230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f18239dd3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f18239dd550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f18239dd6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f1823993400" loc="48:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1823993400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1823dfc210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f18239937a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1823993930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1823993ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1823993c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1823993de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1823994580" loc="46:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1823994580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1823994920"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1823994ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1823994c40"/>
        <function-ref name="cancel" scoped="" ref="0x7f1823994dd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1823993020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f1823991720" loc="50:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1823991720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1823991aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1823991c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1823991dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1823990020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f18239901b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f1823990480" loc="169:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f1823990480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1823990800"/>
        <function-ref name="runTask" scoped="" ref="0x7f1823990990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f1823990c60" loc="126:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f1823990c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f182398e020"/>
        <function-ref name="runTask" scoped="" ref="0x7f182398e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f1823992060" loc="49:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1823992060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f18239923e0"/>
        <function-ref name="source" scoped="" ref="0x7f1823992570"/>
        <function-ref name="address" scoped="" ref="0x7f1823992700"/>
        <function-ref name="destination" scoped="" ref="0x7f1823992890"/>
        <function-ref name="setSource" scoped="" ref="0x7f1823992a20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1823992bb0"/>
        <function-ref name="type" scoped="" ref="0x7f1823992d40"/>
        <function-ref name="setType" scoped="" ref="0x7f1823991020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f18239911b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1823991340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f18239914d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f18239853b0" loc="46:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f18239853b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1823985730"/>
        <function-ref name="stopDone" scoped="" ref="0x7f18239858c0"/>
        <function-ref name="start" scoped="" ref="0x7f1823985a50"/>
        <function-ref name="stop" scoped="" ref="0x7f1823985be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f18239893f0" loc="47:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f18239893f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1823dfc210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1823989770"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1823989900"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1823989a90"/>
        <function-ref name="cancel" scoped="" ref="0x7f1823989c20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1823989db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f18239837e0" loc="49:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f18239837e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1823983b60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1823983cf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1823983e80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1823980030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f18239801c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f18239831d0" loc="48:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f18239831d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1823dfc210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1823983550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1823970330" loc="53:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1823970330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f18239706b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1823970840"/>
        <function-ref name="led1On" scoped="" ref="0x7f18239709d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1823970b60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1823970cf0"/>
        <function-ref name="get" scoped="" ref="0x7f1823970e80"/>
        <function-ref name="led1Off" scoped="" ref="0x7f182397c030"/>
        <function-ref name="led2Off" scoped="" ref="0x7f182397c670"/>
        <function-ref name="set" scoped="" ref="0x7f182397c1c0"/>
        <function-ref name="led0On" scoped="" ref="0x7f182397c350"/>
        <function-ref name="led2On" scoped="" ref="0x7f182397c4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f182397eb20" loc="51:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f182397eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f182397d020"/>
        <function-ref name="noAck" scoped="" ref="0x7f182397d1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f182397d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1823980470" loc="50:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1823980470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f18239807f0"/>
        <function-ref name="source" scoped="" ref="0x7f1823980980"/>
        <function-ref name="address" scoped="" ref="0x7f1823980b10"/>
        <function-ref name="destination" scoped="" ref="0x7f1823980ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f1823980e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f182397e020"/>
        <function-ref name="type" scoped="" ref="0x7f182397e1b0"/>
        <function-ref name="setType" scoped="" ref="0x7f182397e340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f182397e4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f182397e660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f182397e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f18239164a0" loc="54:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f18239164a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1823916820"/>
        <function-ref name="getPayload" scoped="" ref="0x7f18239169b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1823916b40"/>
        <function-ref name="cancel" scoped="" ref="0x7f1823916cd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1823916e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1823915120" loc="55:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1823915120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f18239154a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f182396f300" loc="47:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f182396f300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1823dfc210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f182396f6a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f182396f830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f182396f9c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f182396fb50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f182396fce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1823919d60" loc="50:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1823919d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1823918180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1823918310"/>
        <function-ref name="getPayload" scoped="" ref="0x7f18239184a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1823918630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f18239187c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f182391a0d0" loc="48:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f182391a0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1823dfc210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f182391a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f1823918a10" loc="51:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1823918a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1823918d90"/>
        <function-ref name="noAck" scoped="" ref="0x7f1823916020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f18239161b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f182391a6c0" loc="49:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f182391a6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f182391aa40"/>
        <function-ref name="source" scoped="" ref="0x7f182391abd0"/>
        <function-ref name="address" scoped="" ref="0x7f182391ad60"/>
        <function-ref name="destination" scoped="" ref="0x7f1823919020"/>
        <function-ref name="setSource" scoped="" ref="0x7f18239191b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1823919340"/>
        <function-ref name="type" scoped="" ref="0x7f18239194d0"/>
        <function-ref name="setType" scoped="" ref="0x7f1823919660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f18239197f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1823919980"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1823919b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1823913ba0" loc="50:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1823913ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1823910020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f18239101b0"/>
        <function-ref name="start" scoped="" ref="0x7f1823910340"/>
        <function-ref name="stop" scoped="" ref="0x7f18239104d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f182390f790" loc="52:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f182390f790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f1823dfbd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f182390fb10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f182390fca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f182390fe30"/>
        <function-ref name="cancel" scoped="" ref="0x7f182390e020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f182390e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1823913550" loc="49:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1823913550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f18239138d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1823910c60" loc="51:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1823910c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f1823dfbd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f182390f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f182390d2b0" loc="56:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f182390d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f182390d630"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f182390d7c0"/>
        <function-ref name="led1On" scoped="" ref="0x7f182390d950"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f182390dae0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f182390dc70"/>
        <function-ref name="get" scoped="" ref="0x7f182390de00"/>
        <function-ref name="led1Off" scoped="" ref="0x7f182390c020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f182390c660"/>
        <function-ref name="set" scoped="" ref="0x7f182390c1b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f182390c340"/>
        <function-ref name="led2On" scoped="" ref="0x7f182390c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7f1823908970" loc="55:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f1823908970"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f1823dfbd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f1823908cf0"/>
        <function-ref name="offset" scoped="" ref="0x7f1823908e80"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f182390d030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1823901c40" loc="66:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1823901c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1823900020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f18239001b0"/>
        <function-ref name="start" scoped="" ref="0x7f1823900340"/>
        <function-ref name="stop" scoped="" ref="0x7f18239004d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7f1823899e40" loc="332:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7f1823899e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f18238981e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1823898370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f18238eb530" loc="74:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f18238eb530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f18238eb8b0"/>
        <function-ref name="stop" scoped="" ref="0x7f18238eba40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7f18238d1d50" loc="191:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7f18238d1d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f18238d0100"/>
        <function-ref name="runTask" scoped="" ref="0x7f18238d0290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f18239015f0" loc="65:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f18239015f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1823901970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7f18238e9130" loc="75:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7f18238e9130"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7f18238e94b0"/>
        <function-ref name="flush" scoped="" ref="0x7f18238e9640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7f182389c400" loc="322:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7f182389c400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f182389c780"/>
        <function-ref name="runTask" scoped="" ref="0x7f182389c910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7f18238f0410" loc="72:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f18238f0410"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f18238f0790"/>
        <function-ref name="resetSend" scoped="" ref="0x7f18238f0920"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f18238f0ab0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f18238f0c40"/>
        <function-ref name="putData" scoped="" ref="0x7f18238f0dd0"/>
        <function-ref name="putDone" scoped="" ref="0x7f18238f9020"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f18238f91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f18238f9430" loc="73:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f18238f9430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f18238f97b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f18238f9940"/>
        <function-ref name="led1On" scoped="" ref="0x7f18238f9ad0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f18238f9c60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f18238f9df0"/>
        <function-ref name="get" scoped="" ref="0x7f18238f5020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f18238f51b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f18238f57f0"/>
        <function-ref name="set" scoped="" ref="0x7f18238f5340"/>
        <function-ref name="led0On" scoped="" ref="0x7f18238f54d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f18238f5660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7f18238950c0" loc="341:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f18238950c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1823895440"/>
        <function-ref name="runTask" scoped="" ref="0x7f18238955d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7f18238faa40" loc="67:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f18238faa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f18238fadc0"/>
        <function-ref name="nextByte" scoped="" ref="0x7f18238ff020"/>
        <function-ref name="startSend" scoped="" ref="0x7f18238ff1b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f18238ff340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7f18238fe080" loc="68:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f18238fe080"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f18238fe400"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f18238fe590"/>
        <function-ref name="endPacket" scoped="" ref="0x7f18238fe720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7f18237cbc50" loc="275:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7f18237cbc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f18237ca020"/>
        <function-ref name="runTask" scoped="" ref="0x7f18237ca1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f18237cf830" loc="51:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f18237cf830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f1823dfbd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f18237cfbd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f18237cfd60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f18237ce020"/>
        <function-ref name="cancel" scoped="" ref="0x7f18237ce1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f18237ce340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7f18237ca480" loc="158:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7f18237ca480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f18237ca800"/>
        <function-ref name="runTask" scoped="" ref="0x7f18237ca990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f18237cf110" loc="50:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f18237cf110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f1823dfbd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f18237cf4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7f18237ce760" loc="54:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7f18237ce760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f1823dfbd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f18237ceb00"/>
        <function-ref name="offset" scoped="" ref="0x7f18237cec90"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f18237cee20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f18237cc590" loc="57:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f18237cc590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f18237cc910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f18237ccaa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f18237ccc30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f18237ccdc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f18237cb020"/>
        <function-ref name="get" scoped="" ref="0x7f18237cb1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f18237cb340"/>
        <function-ref name="led2On" scoped="" ref="0x7f18237cb980"/>
        <function-ref name="set" scoped="" ref="0x7f18237cb660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f18237cb4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f18237cb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7f18237cd9d0" loc="56:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f18237cd9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f18237cdd50"/>
        <function-ref name="nextByte" scoped="" ref="0x7f18237cc020"/>
        <function-ref name="startSend" scoped="" ref="0x7f18237cc1b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f18237cc340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7f18237cd0e0" loc="55:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f18237cd0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f18237cd460"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f18237cd5f0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f18237cd780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7f18237bad20" loc="50:/opt/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f18237bad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f18237c30e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f18237c3270"/>
        <function-ref name="receive" scoped="" ref="0x7f18237c3400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f18237c3590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f18237c3720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f18237c38b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f18237c3a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7f18237c8b70" loc="48:/opt/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f18237c8b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f18237c5020"/>
        <function-ref name="resetSend" scoped="" ref="0x7f18237c51b0"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f18237c5340"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f18237c54d0"/>
        <function-ref name="putData" scoped="" ref="0x7f18237c5660"/>
        <function-ref name="putDone" scoped="" ref="0x7f18237c57f0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f18237c5980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f18237c3cc0" loc="51:/opt/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f18237c3cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f18237c20a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f18237c2230"/>
        <function-ref name="led1On" scoped="" ref="0x7f18237c23c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f18237c2550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f18237c26e0"/>
        <function-ref name="get" scoped="" ref="0x7f18237c2870"/>
        <function-ref name="led1Off" scoped="" ref="0x7f18237c2a00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f18237b71b0"/>
        <function-ref name="set" scoped="" ref="0x7f18237c2b90"/>
        <function-ref name="led0On" scoped="" ref="0x7f18237c2d20"/>
        <function-ref name="led2On" scoped="" ref="0x7f18237b7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f1823798d50" loc="6:/opt/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f1823798d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f182379b100"/>
        <function-ref name="receive" scoped="" ref="0x7f182379b290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f182379d890" loc="5:/opt/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f182379d890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f182379dc10"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f182379dda0"/>
        <function-ref name="receive" scoped="" ref="0x7f182379c020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f182379c1b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f182379c340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f182379c4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f182379c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f182379d080" loc="4:/opt/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f182379d080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f182379d400"/>
        <function-ref name="stop" scoped="" ref="0x7f182379d590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f18232ab8f0" loc="45:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f18232ab8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f18232abc70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f18232abe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f18232a9060" loc="47:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f18232a9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f18232a93e0"/>
        <function-ref name="receive" scoped="" ref="0x7f18232a9570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f18232a9800" loc="49:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f18232a9800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f18232a9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f18232aa0c0" loc="46:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f18232aa0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f18232aa440"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f18232aa5d0"/>
        <function-ref name="receive" scoped="" ref="0x7f18232aa760"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f18232aa8f0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f18232aaa80"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f18232aac10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f18232aada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f18232acc00" loc="44:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f18232acc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f18232ab020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f18232ab1b0"/>
        <function-ref name="request" scoped="" ref="0x7f18232ab340"/>
        <function-ref name="granted" scoped="" ref="0x7f18232ab4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f18232ab660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f1823736450" loc="42:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1823736450"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f18237367d0"/>
        <function-ref name="configure" scoped="" ref="0x7f1823736960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f1823732850" loc="44:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f1823732850"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1823732bd0"/>
        <function-ref name="receive" scoped="" ref="0x7f1823732d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f1823730a40" loc="47:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1823730a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f1823730dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f18237351d0" loc="43:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f18237351d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1823735550"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f18237356e0"/>
        <function-ref name="receive" scoped="" ref="0x7f1823735870"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f1823735a00"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f1823735b90"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f1823735d20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1823732020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f1823731690" loc="46:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f1823731690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1823731a10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1823731ba0"/>
        <function-ref name="request" scoped="" ref="0x7f1823731d30"/>
        <function-ref name="granted" scoped="" ref="0x7f1823730020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f18237301b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f182373c8d0" loc="41:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f182373c8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f182373cc50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f182373cde0"/>
        <function-ref name="request" scoped="" ref="0x7f1823737020"/>
        <function-ref name="granted" scoped="" ref="0x7f18237371b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1823737340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f182372d020" loc="48:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f182372d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f182372d3a0"/>
        <function-ref name="txDone" scoped="" ref="0x7f182372d530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f18236abdc0" loc="44:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f18236abdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f18236aa180"/>
        <function-ref name="configure" scoped="" ref="0x7f18236aa310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f18236a9890" loc="46:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f18236a9890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f18236a9c30"/>
        <function-ref name="receive" scoped="" ref="0x7f18236a9dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f18236a7020" loc="49:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f18236a7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f18236a73c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f18236a7690" loc="50:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f18236a7690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f18236a7a10"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f18236a7ba0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f18236a7d30"/>
        <function-ref name="enableUart" scoped="" ref="0x7f18236a6020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f18236a61b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f18236a6340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f18236a64d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f18236a6660"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f18236a67f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f18236a6980"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f18236a6b10"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f18236a6ca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f18236a6e30"/>
        <function-ref name="getUbr" scoped="" ref="0x7f18236a5120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f18236a52b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f18236a5440"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f18236a55d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f18236a5760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f18236a58f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f18236a5a80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f18236a5c10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f18236a5da0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f18236a4020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f18236a41b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f18236a4340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f18236a46d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f18236a4860"/>
        <function-ref name="setUbr" scoped="" ref="0x7f18236a49f0"/>
        <function-ref name="tx" scoped="" ref="0x7f18236a4b80"/>
        <function-ref name="getUctl" scoped="" ref="0x7f18236a4d10"/>
        <function-ref name="disableUart" scoped="" ref="0x7f18236a3020"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f18236a31b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f18236a3340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f18236a34d0"/>
        <function-ref name="rx" scoped="" ref="0x7f18236a3660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f18236a37f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f18236a3980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f18236a3b10"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f18236a3ca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f18236a3e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f18236aa6d0" loc="45:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f18236aa6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f18236aaa70"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f18236aac00"/>
        <function-ref name="receive" scoped="" ref="0x7f18236aad90"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f18236a9020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f18236a91b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f18236a9340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f18236a94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f18236a2c90" loc="52:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f18236a2c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1823c0b640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1823c0b9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f18236a1ac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f182369f4e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f182369f020"/>
        <function-ref name="overflow" scoped="" ref="0x7f182369f9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f18236a8230" loc="48:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f18236a8230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f18236a85d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f18236a8760"/>
        <function-ref name="request" scoped="" ref="0x7f18236a88f0"/>
        <function-ref name="granted" scoped="" ref="0x7f18236a8a80"/>
        <function-ref name="isOwner" scoped="" ref="0x7f18236a8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f18236ab020" loc="43:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f18236ab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f18236ab3c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f18236ab550"/>
        <function-ref name="request" scoped="" ref="0x7f18236ab6e0"/>
        <function-ref name="granted" scoped="" ref="0x7f18236ab870"/>
        <function-ref name="isOwner" scoped="" ref="0x7f18236aba00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f18236a2290" loc="51:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f18236a2290"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f18236a2630"/>
        <function-ref name="txDone" scoped="" ref="0x7f18236a27c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f182369fdd0" loc="53:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f182369fdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f182369e180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f182369e310"/>
        <function-ref name="led1On" scoped="" ref="0x7f182369e4a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f182369e630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f182369e7c0"/>
        <function-ref name="get" scoped="" ref="0x7f182369e950"/>
        <function-ref name="led1Off" scoped="" ref="0x7f182369eae0"/>
        <function-ref name="led2On" scoped="" ref="0x7f182369d1b0"/>
        <function-ref name="set" scoped="" ref="0x7f182369ee00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f182369ec70"/>
        <function-ref name="led0On" scoped="" ref="0x7f182369d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f182368f3b0" loc="78:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f182368f3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f182368f730"/>
        <function-ref name="txDone" scoped="" ref="0x7f182368f8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f1823695080" loc="76:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1823695080"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1823695400"/>
        <function-ref name="stop" scoped="" ref="0x7f1823695590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f18236958b0" loc="77:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f18236958b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f1823695c30"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f1823695dc0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f1823694020"/>
        <function-ref name="enableUart" scoped="" ref="0x7f18236941b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f1823694340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f18236944d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1823694660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f18236947f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f1823694980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f1823694b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f1823694ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f1823694e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f1823692020"/>
        <function-ref name="getUbr" scoped="" ref="0x7f18236922b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1823692440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f18236925d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f1823692760"/>
        <function-ref name="isUart" scoped="" ref="0x7f18236928f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1823692a80"/>
        <function-ref name="isSpi" scoped="" ref="0x7f1823692c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f1823692da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1823691020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f18236911b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f1823691340"/>
        <function-ref name="getMode" scoped="" ref="0x7f18236914d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1823691860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f18236919f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f1823691b80"/>
        <function-ref name="tx" scoped="" ref="0x7f1823691d10"/>
        <function-ref name="getUctl" scoped="" ref="0x7f1823690020"/>
        <function-ref name="disableUart" scoped="" ref="0x7f18236901b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f1823690340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f18236904d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f1823690660"/>
        <function-ref name="rx" scoped="" ref="0x7f18236907f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1823690980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f1823690b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1823690ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f1823690e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f182368f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f1823678800" loc="80:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f1823678800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1823678b80"/>
        <function-ref name="isInput" scoped="" ref="0x7f1823678d10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1823676020"/>
        <function-ref name="toggle" scoped="" ref="0x7f18236761b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1823676340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18236764d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1823676660"/>
        <function-ref name="get" scoped="" ref="0x7f18236767f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1823676980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1823676b10"/>
        <function-ref name="set" scoped="" ref="0x7f1823676ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1823676e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1823675020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18236752b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1823675440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1823687dc0" loc="76:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1823687dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1823686180"/>
        <function-ref name="txDone" scoped="" ref="0x7f1823686310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f1823675800" loc="81:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f1823675800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1823675b80"/>
        <function-ref name="isInput" scoped="" ref="0x7f1823675d10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1823674020"/>
        <function-ref name="toggle" scoped="" ref="0x7f18236741b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1823674340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18236744d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1823674660"/>
        <function-ref name="get" scoped="" ref="0x7f18236747f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1823674980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1823674b10"/>
        <function-ref name="set" scoped="" ref="0x7f1823674ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1823674e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1823673020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18236732b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1823673440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f1823673800" loc="82:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f1823673800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1823673b80"/>
        <function-ref name="isInput" scoped="" ref="0x7f1823673d10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1823672020"/>
        <function-ref name="toggle" scoped="" ref="0x7f18236721b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1823672340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18236724d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1823672660"/>
        <function-ref name="get" scoped="" ref="0x7f18236727f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1823672980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1823672b10"/>
        <function-ref name="set" scoped="" ref="0x7f1823672ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1823672e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1823671020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18236712b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1823671440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f182368b020" loc="75:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f182368b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f182368b3a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f182368b530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f182368b6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f182368b850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f182368b9e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f182368bb70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f182368bd00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f182368a020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f182368a1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f182368a340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f182368a4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f182368a660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f182368a7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f182368aa80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f182368ac10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f182368ada0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f1823689020"/>
        <function-ref name="isUart" scoped="" ref="0x7f18236891b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1823689340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f18236894d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f1823689660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f18236897f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f1823689980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f1823689b10"/>
        <function-ref name="getMode" scoped="" ref="0x7f1823689ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1823688220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f18236883b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f1823688540"/>
        <function-ref name="tx" scoped="" ref="0x7f18236886d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f1823688860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f18236889f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f1823688b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f1823688d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f1823687020"/>
        <function-ref name="rx" scoped="" ref="0x7f18236871b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1823687340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f18236874d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1823687660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f18236877f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f1823687980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f182368e710" loc="74:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f182368e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f182368ea90"/>
        <function-ref name="stop" scoped="" ref="0x7f182368ec20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f1823684800" loc="79:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f1823684800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1823684b80"/>
        <function-ref name="isInput" scoped="" ref="0x7f1823684d10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1823679020"/>
        <function-ref name="toggle" scoped="" ref="0x7f18236791b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1823679340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18236794d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1823679660"/>
        <function-ref name="get" scoped="" ref="0x7f18236797f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1823679980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1823679b10"/>
        <function-ref name="set" scoped="" ref="0x7f1823679ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1823679e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1823678020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18236782b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1823678440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f182367a860" loc="78:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f182367a860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f182367abe0"/>
        <function-ref name="isInput" scoped="" ref="0x7f182367ad70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1823685020"/>
        <function-ref name="toggle" scoped="" ref="0x7f18236851b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1823685340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18236854d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1823685660"/>
        <function-ref name="get" scoped="" ref="0x7f18236857f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1823685980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1823685b10"/>
        <function-ref name="set" scoped="" ref="0x7f1823685ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1823685e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1823684020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18236842b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1823684440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f18235f8cc0" loc="53:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f18235f8cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235f70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235f7230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235f73c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235f7550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235f76e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235f7870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235f7a00"/>
        <function-ref name="get" scoped="" ref="0x7f18235f7b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235f7d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235f6020"/>
        <function-ref name="set" scoped="" ref="0x7f18235f61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235f6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235f64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235f6760"/>
        <function-ref name="clr" scoped="" ref="0x7f18235f68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f18235e4cc0" loc="66:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f18235e4cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235e30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235e3230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235e33c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235e3550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235e36e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235e3870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235e3a00"/>
        <function-ref name="get" scoped="" ref="0x7f18235e3b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235e3d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235e2020"/>
        <function-ref name="set" scoped="" ref="0x7f18235e21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235e2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235e24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235e2760"/>
        <function-ref name="clr" scoped="" ref="0x7f18235e28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f18235993d0" loc="145:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f18235993d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1823599750"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235998e0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1823599a70"/>
        <function-ref name="toggle" scoped="" ref="0x7f1823599c00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1823599d90"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1823598020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235981b0"/>
        <function-ref name="get" scoped="" ref="0x7f1823598340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235984d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1823598660"/>
        <function-ref name="set" scoped="" ref="0x7f18235987f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1823598980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1823598b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1823598da0"/>
        <function-ref name="clr" scoped="" ref="0x7f1823597020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f18235743e0" loc="165:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f18235743e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1823574760"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235748f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1823574a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1823574c10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1823574da0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1823573020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235731b0"/>
        <function-ref name="get" scoped="" ref="0x7f1823573340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235734d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1823573660"/>
        <function-ref name="set" scoped="" ref="0x7f18235737f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1823573980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1823573b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1823573da0"/>
        <function-ref name="clr" scoped="" ref="0x7f1823572020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f18235973f0" loc="146:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f18235973f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1823597770"/>
        <function-ref name="isInput" scoped="" ref="0x7f1823597900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1823597a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f1823597c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1823597db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1823596020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235961b0"/>
        <function-ref name="get" scoped="" ref="0x7f1823596340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235964d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1823596660"/>
        <function-ref name="set" scoped="" ref="0x7f18235967f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1823596980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1823596b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1823596da0"/>
        <function-ref name="clr" scoped="" ref="0x7f1823595020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f18235e0cc0" loc="71:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f18235e0cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235df0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235df230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235df3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235df550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235df6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235df870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235dfa00"/>
        <function-ref name="get" scoped="" ref="0x7f18235dfb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235dfd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235de020"/>
        <function-ref name="set" scoped="" ref="0x7f18235de1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235de340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235de4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235de760"/>
        <function-ref name="clr" scoped="" ref="0x7f18235de8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f18235ca020" loc="84:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f18235ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235ca3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235ca530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235ca6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235ca850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235ca9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235cab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235cad00"/>
        <function-ref name="get" scoped="" ref="0x7f18235c9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235c91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235c9340"/>
        <function-ref name="set" scoped="" ref="0x7f18235c94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235c9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235c97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235c9a80"/>
        <function-ref name="clr" scoped="" ref="0x7f18235c9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f18235b6020" loc="97:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f18235b6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235b63a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235b6530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235b66c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235b6850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235b69e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235b6b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235b6d00"/>
        <function-ref name="get" scoped="" ref="0x7f18235b5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235b51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235b5340"/>
        <function-ref name="set" scoped="" ref="0x7f18235b54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235b5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235b57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235b5a80"/>
        <function-ref name="clr" scoped="" ref="0x7f18235b5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f18235a5020" loc="108:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f18235a5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235a53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235a5530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235a56c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235a5850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235a59e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235a5b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235a5d00"/>
        <function-ref name="get" scoped="" ref="0x7f18235a4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235a41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235a4340"/>
        <function-ref name="set" scoped="" ref="0x7f18235a44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235a4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235a47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235a4a80"/>
        <function-ref name="clr" scoped="" ref="0x7f18235a4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f18235913f0" loc="149:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f18235913f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1823591770"/>
        <function-ref name="isInput" scoped="" ref="0x7f1823591900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1823591a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f1823591c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1823591db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1823590020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235901b0"/>
        <function-ref name="get" scoped="" ref="0x7f1823590340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235904d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1823590660"/>
        <function-ref name="set" scoped="" ref="0x7f18235907f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1823590980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1823590b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1823590da0"/>
        <function-ref name="clr" scoped="" ref="0x7f182358f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f18235813e0" loc="159:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f18235813e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1823581760"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235818f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1823581a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1823581c10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1823581da0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1823580020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235801b0"/>
        <function-ref name="get" scoped="" ref="0x7f1823580340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235804d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1823580660"/>
        <function-ref name="set" scoped="" ref="0x7f18235807f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1823580980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1823580b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1823580da0"/>
        <function-ref name="clr" scoped="" ref="0x7f182357f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f182356c3f0" loc="171:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f182356c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f182356c770"/>
        <function-ref name="isInput" scoped="" ref="0x7f182356c900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f182356ca90"/>
        <function-ref name="toggle" scoped="" ref="0x7f182356cc20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f182356cdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f182356b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f182356b1b0"/>
        <function-ref name="get" scoped="" ref="0x7f182356b340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f182356b4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f182356b660"/>
        <function-ref name="set" scoped="" ref="0x7f182356b7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f182356b980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f182356bb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f182356bda0"/>
        <function-ref name="clr" scoped="" ref="0x7f182356a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f18235f2cc0" loc="56:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f18235f2cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235f10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235f1230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235f13c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235f1550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235f16e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235f1870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235f1a00"/>
        <function-ref name="get" scoped="" ref="0x7f18235f1b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235f1d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235f0020"/>
        <function-ref name="set" scoped="" ref="0x7f18235f01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235f0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235f04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235f0760"/>
        <function-ref name="clr" scoped="" ref="0x7f18235f08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f182358f3f0" loc="150:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f182358f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f182358f770"/>
        <function-ref name="isInput" scoped="" ref="0x7f182358f900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f182358fa90"/>
        <function-ref name="toggle" scoped="" ref="0x7f182358fc20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f182358fdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f182358e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f182358e1b0"/>
        <function-ref name="get" scoped="" ref="0x7f182358e340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f182358e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f182358e660"/>
        <function-ref name="set" scoped="" ref="0x7f182358e7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f182358e980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f182358eb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f182358eda0"/>
        <function-ref name="clr" scoped="" ref="0x7f182358d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f18235eecc0" loc="61:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f18235eecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235ed0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235ed230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235ed3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235ed550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235ed6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235ed870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235eda00"/>
        <function-ref name="get" scoped="" ref="0x7f18235edb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235edd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235ec020"/>
        <function-ref name="set" scoped="" ref="0x7f18235ec1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235ec340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235ec4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235ec760"/>
        <function-ref name="clr" scoped="" ref="0x7f18235ec8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f18235d9cc0" loc="74:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f18235d9cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235d80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235d8230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235d83c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235d8550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235d86e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235d8870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235d8a00"/>
        <function-ref name="get" scoped="" ref="0x7f18235d8b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235d8d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235d7020"/>
        <function-ref name="set" scoped="" ref="0x7f18235d71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235d7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235d74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235d7760"/>
        <function-ref name="clr" scoped="" ref="0x7f18235d78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f18235c4020" loc="87:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f18235c4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235c43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235c4530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235c46c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235c4850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235c49e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235c4b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235c4d00"/>
        <function-ref name="get" scoped="" ref="0x7f18235c3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235c31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235c3340"/>
        <function-ref name="set" scoped="" ref="0x7f18235c34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235c3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235c37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235c3a80"/>
        <function-ref name="clr" scoped="" ref="0x7f18235c3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f18235b0020" loc="100:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f18235b0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235b03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235b0530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235b06c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235b0850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235b09e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235b0b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235b0d00"/>
        <function-ref name="get" scoped="" ref="0x7f18235af020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235af1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235af340"/>
        <function-ref name="set" scoped="" ref="0x7f18235af4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235af660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235af7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235afa80"/>
        <function-ref name="clr" scoped="" ref="0x7f18235afc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f182359f020" loc="111:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f182359f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f182359f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f182359f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f182359f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f182359f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f182359f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f182359fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f182359fd00"/>
        <function-ref name="get" scoped="" ref="0x7f182359e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f182359e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f182359e340"/>
        <function-ref name="set" scoped="" ref="0x7f182359e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f182359e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f182359e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f182359ea80"/>
        <function-ref name="clr" scoped="" ref="0x7f182359ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f18235fccc0" loc="51:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f18235fccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235fb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235fb230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235fb3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235fb550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235fb6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235fb870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235fba00"/>
        <function-ref name="get" scoped="" ref="0x7f18235fbb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235fbd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235fa020"/>
        <function-ref name="set" scoped="" ref="0x7f18235fa1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235fa340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235fa4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235fa760"/>
        <function-ref name="clr" scoped="" ref="0x7f18235fa8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f18235e8cc0" loc="64:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f18235e8cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235e7180"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235e7310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235e74a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235e7630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235e77c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235e7950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235e7ae0"/>
        <function-ref name="get" scoped="" ref="0x7f18235e7c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235e7e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235e6020"/>
        <function-ref name="set" scoped="" ref="0x7f18235e61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235e6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235e64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235e6760"/>
        <function-ref name="clr" scoped="" ref="0x7f18235e68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f18235d3cc0" loc="77:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f18235d3cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235d20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235d2230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235d23c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235d2550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235d26e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235d2870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235d2a00"/>
        <function-ref name="get" scoped="" ref="0x7f18235d2b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235d2d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235d1020"/>
        <function-ref name="set" scoped="" ref="0x7f18235d11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235d1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235d14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235d1760"/>
        <function-ref name="clr" scoped="" ref="0x7f18235d18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f182359b3f0" loc="144:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f182359b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f182359b770"/>
        <function-ref name="isInput" scoped="" ref="0x7f182359b900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f182359ba90"/>
        <function-ref name="toggle" scoped="" ref="0x7f182359bc20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f182359bdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f182359a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f182359a1b0"/>
        <function-ref name="get" scoped="" ref="0x7f182359a340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f182359a4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f182359a660"/>
        <function-ref name="set" scoped="" ref="0x7f182359a7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f182359a980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f182359ab10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f182359ada0"/>
        <function-ref name="clr" scoped="" ref="0x7f1823599020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f182357a3e0" loc="162:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f182357a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f182357a760"/>
        <function-ref name="isInput" scoped="" ref="0x7f182357a8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f182357aa80"/>
        <function-ref name="toggle" scoped="" ref="0x7f182357ac10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f182357ada0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1823579020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235791b0"/>
        <function-ref name="get" scoped="" ref="0x7f1823579340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235794d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1823579660"/>
        <function-ref name="set" scoped="" ref="0x7f18235797f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1823579980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1823579b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1823579da0"/>
        <function-ref name="clr" scoped="" ref="0x7f1823578020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f182356e3e0" loc="169:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f182356e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f182356e760"/>
        <function-ref name="isInput" scoped="" ref="0x7f182356e8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f182356ea80"/>
        <function-ref name="toggle" scoped="" ref="0x7f182356ec10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f182356eda0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f182356d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f182356d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f182356d340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f182356d4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f182356d660"/>
        <function-ref name="set" scoped="" ref="0x7f182356d7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f182356d980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f182356db10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f182356dda0"/>
        <function-ref name="clr" scoped="" ref="0x7f182356c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f18235873f0" loc="155:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f18235873f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1823587770"/>
        <function-ref name="isInput" scoped="" ref="0x7f1823587900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1823587a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f1823587c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1823587db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1823586020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235861b0"/>
        <function-ref name="get" scoped="" ref="0x7f1823586340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235864d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1823586660"/>
        <function-ref name="set" scoped="" ref="0x7f18235867f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1823586980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1823586b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1823586da0"/>
        <function-ref name="clr" scoped="" ref="0x7f1823585020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f18235cfcc0" loc="82:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f18235cfcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235ce410"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235ce5a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235ce730"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235ce8c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235cea50"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235cebe0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235ced70"/>
        <function-ref name="get" scoped="" ref="0x7f18235cd020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235cd1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235cd340"/>
        <function-ref name="set" scoped="" ref="0x7f18235cd4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235cd660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235cd7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235cda80"/>
        <function-ref name="clr" scoped="" ref="0x7f18235cdc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f18235ba020" loc="95:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f18235ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235ba3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235ba530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235ba6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235ba850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235ba9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235bab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235bad00"/>
        <function-ref name="get" scoped="" ref="0x7f18235b9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235b91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235b9340"/>
        <function-ref name="set" scoped="" ref="0x7f18235b94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235b9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235b97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235b9a80"/>
        <function-ref name="clr" scoped="" ref="0x7f18235b9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f18235a9020" loc="106:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f18235a9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235a93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235a9530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235a96c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235a9850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235a99e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235a9b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235a9d00"/>
        <function-ref name="get" scoped="" ref="0x7f18235a8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235a81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235a8340"/>
        <function-ref name="set" scoped="" ref="0x7f18235a84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235a8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235a87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235a8a80"/>
        <function-ref name="clr" scoped="" ref="0x7f18235a8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f18235783e0" loc="163:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f18235783e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1823578760"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235788f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1823578a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1823578c10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1823578da0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1823577020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235771b0"/>
        <function-ref name="get" scoped="" ref="0x7f1823577340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235774d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1823577660"/>
        <function-ref name="set" scoped="" ref="0x7f18235777f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1823577980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1823577b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1823577da0"/>
        <function-ref name="clr" scoped="" ref="0x7f1823576020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f182358d3e0" loc="152:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f182358d3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f182358d760"/>
        <function-ref name="isInput" scoped="" ref="0x7f182358d8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f182358da80"/>
        <function-ref name="toggle" scoped="" ref="0x7f182358dc10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f182358dda0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f182358c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f182358c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f182358c340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f182358c4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f182358c660"/>
        <function-ref name="set" scoped="" ref="0x7f182358c7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f182358c980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f182358cb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f182358cda0"/>
        <function-ref name="clr" scoped="" ref="0x7f182358b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f18235f6cc0" loc="54:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f18235f6cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235f50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235f5230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235f53c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235f5550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235f56e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235f5870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235f5a00"/>
        <function-ref name="get" scoped="" ref="0x7f18235f5b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235f5d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235f4020"/>
        <function-ref name="set" scoped="" ref="0x7f18235f41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235f4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235f44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235f4760"/>
        <function-ref name="clr" scoped="" ref="0x7f18235f48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f18235e2cc0" loc="67:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f18235e2cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235e10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235e1230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235e13c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235e1550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235e16e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235e1870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235e1a00"/>
        <function-ref name="get" scoped="" ref="0x7f18235e1b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235e1d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235e0020"/>
        <function-ref name="set" scoped="" ref="0x7f18235e01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235e0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235e04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235e0760"/>
        <function-ref name="clr" scoped="" ref="0x7f18235e08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f18235ad020" loc="104:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f18235ad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235ad3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235ad530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235ad6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235ad850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235ad9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235adb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235add00"/>
        <function-ref name="get" scoped="" ref="0x7f18235ac020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235ac1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235ac340"/>
        <function-ref name="set" scoped="" ref="0x7f18235ac4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235ac660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235ac7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235aca80"/>
        <function-ref name="clr" scoped="" ref="0x7f18235acc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f18235decc0" loc="72:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f18235decc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235dc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235dc230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235dc3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235dc550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235dc6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235dc870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235dca00"/>
        <function-ref name="get" scoped="" ref="0x7f18235dcb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235dcd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235db020"/>
        <function-ref name="set" scoped="" ref="0x7f18235db1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235db340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235db4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235db760"/>
        <function-ref name="clr" scoped="" ref="0x7f18235db8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f18235c8020" loc="85:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f18235c8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235c83a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235c8530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235c86c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235c8850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235c89e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235c8b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235c8d00"/>
        <function-ref name="get" scoped="" ref="0x7f18235c7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235c71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235c7340"/>
        <function-ref name="set" scoped="" ref="0x7f18235c74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235c7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235c77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235c7a80"/>
        <function-ref name="clr" scoped="" ref="0x7f18235c7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f18235b4020" loc="98:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f18235b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235b43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235b4530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235b46c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235b4850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235b49e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235b4b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235b4d00"/>
        <function-ref name="get" scoped="" ref="0x7f18235b3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235b31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235b3340"/>
        <function-ref name="set" scoped="" ref="0x7f18235b34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235b3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235b37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235b3a80"/>
        <function-ref name="clr" scoped="" ref="0x7f18235b3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f18235a3020" loc="109:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f18235a3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235a33a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235a3530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235a36c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235a3850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235a39e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235a3b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235a3d00"/>
        <function-ref name="get" scoped="" ref="0x7f18235a2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235a21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235a2340"/>
        <function-ref name="set" scoped="" ref="0x7f18235a24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235a2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235a27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235a2a80"/>
        <function-ref name="clr" scoped="" ref="0x7f18235a2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f18235893f0" loc="154:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f18235893f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1823589770"/>
        <function-ref name="isInput" scoped="" ref="0x7f1823589900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1823589a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f1823589c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1823589db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1823588020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235881b0"/>
        <function-ref name="get" scoped="" ref="0x7f1823588340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235884d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1823588660"/>
        <function-ref name="set" scoped="" ref="0x7f18235887f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1823588980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1823588b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1823588da0"/>
        <function-ref name="clr" scoped="" ref="0x7f1823587020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f1823602e00" loc="49:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f1823602e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235ff1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235ff350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235ff4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235ff670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235ff800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235ff990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235ffb20"/>
        <function-ref name="get" scoped="" ref="0x7f18235ffcb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235ffe40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235fe020"/>
        <function-ref name="set" scoped="" ref="0x7f18235fe1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235fe340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235fe4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235fe760"/>
        <function-ref name="clr" scoped="" ref="0x7f18235fe8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f18235eccc0" loc="62:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f18235eccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235eb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235eb230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235eb3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235eb550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235eb6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235eb870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235eba00"/>
        <function-ref name="get" scoped="" ref="0x7f18235ebb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235ebd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235ea020"/>
        <function-ref name="set" scoped="" ref="0x7f18235ea1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235ea340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235ea4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235ea760"/>
        <function-ref name="clr" scoped="" ref="0x7f18235ea8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f18235d7cc0" loc="75:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f18235d7cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235d60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235d6230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235d63c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235d6550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235d66e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235d6870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235d6a00"/>
        <function-ref name="get" scoped="" ref="0x7f18235d6b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235d6d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235d5020"/>
        <function-ref name="set" scoped="" ref="0x7f18235d51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235d5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235d54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235d5760"/>
        <function-ref name="clr" scoped="" ref="0x7f18235d58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f18235c2020" loc="88:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f18235c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235c23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235c2530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235c26c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235c2850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235c29e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235c2b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235c2d00"/>
        <function-ref name="get" scoped="" ref="0x7f18235c1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235c11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235c1340"/>
        <function-ref name="set" scoped="" ref="0x7f18235c14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235c1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235c17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235c1a80"/>
        <function-ref name="clr" scoped="" ref="0x7f18235c1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f18235853f0" loc="156:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f18235853f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1823585770"/>
        <function-ref name="isInput" scoped="" ref="0x7f1823585900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1823585a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f1823585c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1823585db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1823584020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235841b0"/>
        <function-ref name="get" scoped="" ref="0x7f1823584340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235844d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1823584660"/>
        <function-ref name="set" scoped="" ref="0x7f18235847f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1823584980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1823584b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1823584da0"/>
        <function-ref name="clr" scoped="" ref="0x7f1823583020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f182357f3e0" loc="160:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f182357f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f182357f760"/>
        <function-ref name="isInput" scoped="" ref="0x7f182357f8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f182357fa80"/>
        <function-ref name="toggle" scoped="" ref="0x7f182357fc10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f182357fda0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f182357d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f182357d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f182357d340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f182357d4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f182357d660"/>
        <function-ref name="set" scoped="" ref="0x7f182357d7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f182357d980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f182357db10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f182357dda0"/>
        <function-ref name="clr" scoped="" ref="0x7f182357c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f18235723e0" loc="166:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f18235723e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1823572760"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235728f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1823572a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1823572c10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1823572da0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1823571020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235711b0"/>
        <function-ref name="get" scoped="" ref="0x7f1823571340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235714d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1823571660"/>
        <function-ref name="set" scoped="" ref="0x7f18235717f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1823571980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1823571b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1823571da0"/>
        <function-ref name="clr" scoped="" ref="0x7f1823570020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f18235be020" loc="93:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f18235be020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235be3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235be530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235be6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235be850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235be9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235beb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235bed00"/>
        <function-ref name="get" scoped="" ref="0x7f18235bd020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235bd1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235bd340"/>
        <function-ref name="set" scoped="" ref="0x7f18235bd4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235bd660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235bd7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235bda80"/>
        <function-ref name="clr" scoped="" ref="0x7f18235bdc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f18235833f0" loc="157:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f18235833f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1823583770"/>
        <function-ref name="isInput" scoped="" ref="0x7f1823583900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1823583a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f1823583c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1823583db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1823582020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235821b0"/>
        <function-ref name="get" scoped="" ref="0x7f1823582340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235824d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1823582660"/>
        <function-ref name="set" scoped="" ref="0x7f18235827f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1823582980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1823582b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1823582da0"/>
        <function-ref name="clr" scoped="" ref="0x7f1823581020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f18235facc0" loc="52:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f18235facc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235f90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235f9230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235f93c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235f9550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235f96e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235f9870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235f9a00"/>
        <function-ref name="get" scoped="" ref="0x7f18235f9b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235f9d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235f8020"/>
        <function-ref name="set" scoped="" ref="0x7f18235f81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235f8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235f84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235f8760"/>
        <function-ref name="clr" scoped="" ref="0x7f18235f88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f18235e6cc0" loc="65:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f18235e6cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235e50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235e5230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235e53c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235e5550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235e56e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235e5870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235e5a00"/>
        <function-ref name="get" scoped="" ref="0x7f18235e5b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235e5d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235e4020"/>
        <function-ref name="set" scoped="" ref="0x7f18235e41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235e4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235e44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235e4760"/>
        <function-ref name="clr" scoped="" ref="0x7f18235e48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f18235d1cc0" loc="78:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f18235d1cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235d00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235d0230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235d03c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235d0550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235d06e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235d0870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235d0a00"/>
        <function-ref name="get" scoped="" ref="0x7f18235d0b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235d0d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235cf020"/>
        <function-ref name="set" scoped="" ref="0x7f18235cf1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235cf340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235cf4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235cf760"/>
        <function-ref name="clr" scoped="" ref="0x7f18235cf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f182358b3f0" loc="153:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f182358b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f182358b770"/>
        <function-ref name="isInput" scoped="" ref="0x7f182358b900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f182358ba90"/>
        <function-ref name="toggle" scoped="" ref="0x7f182358bc20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f182358bdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f182358a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f182358a1b0"/>
        <function-ref name="get" scoped="" ref="0x7f182358a340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f182358a4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f182358a660"/>
        <function-ref name="set" scoped="" ref="0x7f182358a7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f182358a980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f182358ab10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f182358ada0"/>
        <function-ref name="clr" scoped="" ref="0x7f1823589020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f18235763e0" loc="164:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f18235763e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1823576760"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235768f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1823576a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1823576c10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1823576da0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1823575020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235751b0"/>
        <function-ref name="get" scoped="" ref="0x7f1823575340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235754d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1823575660"/>
        <function-ref name="set" scoped="" ref="0x7f18235757f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1823575980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1823575b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1823575da0"/>
        <function-ref name="clr" scoped="" ref="0x7f1823574020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f18235cc020" loc="83:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f18235cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235cc3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235cc530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235cc6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235cc850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235cc9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235ccb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235ccd00"/>
        <function-ref name="get" scoped="" ref="0x7f18235cb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235cb1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235cb340"/>
        <function-ref name="set" scoped="" ref="0x7f18235cb4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235cb660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235cb7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235cba80"/>
        <function-ref name="clr" scoped="" ref="0x7f18235cbc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f18235b8020" loc="96:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f18235b8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235b83a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235b8530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235b86c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235b8850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235b89e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235b8b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235b8d00"/>
        <function-ref name="get" scoped="" ref="0x7f18235b7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235b71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235b7340"/>
        <function-ref name="set" scoped="" ref="0x7f18235b74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235b7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235b77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235b7a80"/>
        <function-ref name="clr" scoped="" ref="0x7f18235b7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f18235a7020" loc="107:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f18235a7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235a73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235a7530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235a76c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235a7850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235a79e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235a7b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235a7d00"/>
        <function-ref name="get" scoped="" ref="0x7f18235a6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235a61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235a6340"/>
        <function-ref name="set" scoped="" ref="0x7f18235a64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235a6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235a67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235a6a80"/>
        <function-ref name="clr" scoped="" ref="0x7f18235a6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f18235f4cc0" loc="55:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f18235f4cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235f30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235f3230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235f33c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235f3550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235f36e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235f3870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235f3a00"/>
        <function-ref name="get" scoped="" ref="0x7f18235f3b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235f3d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235f2020"/>
        <function-ref name="set" scoped="" ref="0x7f18235f21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235f2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235f24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235f2760"/>
        <function-ref name="clr" scoped="" ref="0x7f18235f28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f18235ab020" loc="105:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f18235ab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235ab3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235ab530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235ab6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235ab850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235ab9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235abb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235abd00"/>
        <function-ref name="get" scoped="" ref="0x7f18235aa020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235aa1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235aa340"/>
        <function-ref name="set" scoped="" ref="0x7f18235aa4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235aa660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235aa7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235aaa80"/>
        <function-ref name="clr" scoped="" ref="0x7f18235aac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f18235f0cc0" loc="60:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f18235f0cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235ef0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235ef230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235ef3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235ef550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235ef6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235ef870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235efa00"/>
        <function-ref name="get" scoped="" ref="0x7f18235efb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235efd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235ee020"/>
        <function-ref name="set" scoped="" ref="0x7f18235ee1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235ee340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235ee4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235ee760"/>
        <function-ref name="clr" scoped="" ref="0x7f18235ee8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f18235dbcc0" loc="73:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f18235dbcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235da0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235da230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235da3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235da550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235da6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235da870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235daa00"/>
        <function-ref name="get" scoped="" ref="0x7f18235dab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235dad20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235d9020"/>
        <function-ref name="set" scoped="" ref="0x7f18235d91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235d9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235d94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235d9760"/>
        <function-ref name="clr" scoped="" ref="0x7f18235d98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f18235c6020" loc="86:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f18235c6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235c63a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235c6530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235c66c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235c6850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235c69e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235c6b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235c6d00"/>
        <function-ref name="get" scoped="" ref="0x7f18235c5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235c51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235c5340"/>
        <function-ref name="set" scoped="" ref="0x7f18235c54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235c5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235c57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235c5a80"/>
        <function-ref name="clr" scoped="" ref="0x7f18235c5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f18235b2020" loc="99:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f18235b2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235b23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235b2530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235b26c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235b2850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235b29e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235b2b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235b2d00"/>
        <function-ref name="get" scoped="" ref="0x7f18235b1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235b11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235b1340"/>
        <function-ref name="set" scoped="" ref="0x7f18235b14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235b1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235b17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235b1a80"/>
        <function-ref name="clr" scoped="" ref="0x7f18235b1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f18235a1020" loc="110:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f18235a1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235a13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235a1530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235a16c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235a1850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235a19e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235a1b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235a1d00"/>
        <function-ref name="get" scoped="" ref="0x7f18235a0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235a01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235a0340"/>
        <function-ref name="set" scoped="" ref="0x7f18235a04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235a0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235a07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235a0a80"/>
        <function-ref name="clr" scoped="" ref="0x7f18235a0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f18235fecc0" loc="50:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f18235fecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235fd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235fd230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235fd3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235fd550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235fd6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235fd870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235fda00"/>
        <function-ref name="get" scoped="" ref="0x7f18235fdb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235fdd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235fc020"/>
        <function-ref name="set" scoped="" ref="0x7f18235fc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235fc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235fc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235fc760"/>
        <function-ref name="clr" scoped="" ref="0x7f18235fc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f18235eacc0" loc="63:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f18235eacc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235e90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235e9230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235e93c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235e9550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235e96e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235e9870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235e9a00"/>
        <function-ref name="get" scoped="" ref="0x7f18235e9b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235e9d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235e8020"/>
        <function-ref name="set" scoped="" ref="0x7f18235e81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235e8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235e84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235e8760"/>
        <function-ref name="clr" scoped="" ref="0x7f18235e88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f18235d5cc0" loc="76:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f18235d5cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235d40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235d4230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235d43c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235d4550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235d46e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235d4870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235d4a00"/>
        <function-ref name="get" scoped="" ref="0x7f18235d4b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235d4d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235d3020"/>
        <function-ref name="set" scoped="" ref="0x7f18235d31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235d3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235d34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235d3760"/>
        <function-ref name="clr" scoped="" ref="0x7f18235d38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f18235c0020" loc="89:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f18235c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235c03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235c0530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235c06c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235c0850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235c09e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235c0b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235c0d00"/>
        <function-ref name="get" scoped="" ref="0x7f18235bf020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235bf1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235bf340"/>
        <function-ref name="set" scoped="" ref="0x7f18235bf4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235bf660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235bf7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235bfa80"/>
        <function-ref name="clr" scoped="" ref="0x7f18235bfc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f18235933d0" loc="148:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f18235933d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1823593750"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235938e0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1823593a70"/>
        <function-ref name="toggle" scoped="" ref="0x7f1823593c00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1823593d90"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1823592020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235921b0"/>
        <function-ref name="get" scoped="" ref="0x7f1823592340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235924d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1823592660"/>
        <function-ref name="set" scoped="" ref="0x7f18235927f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1823592980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1823592b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1823592da0"/>
        <function-ref name="clr" scoped="" ref="0x7f1823591020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f182357c3e0" loc="161:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f182357c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f182357c760"/>
        <function-ref name="isInput" scoped="" ref="0x7f182357c8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f182357ca80"/>
        <function-ref name="toggle" scoped="" ref="0x7f182357cc10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f182357cda0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f182357b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f182357b1b0"/>
        <function-ref name="get" scoped="" ref="0x7f182357b340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f182357b4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f182357b660"/>
        <function-ref name="set" scoped="" ref="0x7f182357b7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f182357b980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f182357bb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f182357bda0"/>
        <function-ref name="clr" scoped="" ref="0x7f182357a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f18235953f0" loc="147:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f18235953f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1823595770"/>
        <function-ref name="isInput" scoped="" ref="0x7f1823595900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1823595a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f1823595c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1823595db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1823594020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235941b0"/>
        <function-ref name="get" scoped="" ref="0x7f1823594340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235944d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1823594660"/>
        <function-ref name="set" scoped="" ref="0x7f18235947f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1823594980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1823594b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1823594da0"/>
        <function-ref name="clr" scoped="" ref="0x7f1823593020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f18235bc020" loc="94:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f18235bc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235bc3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235bc530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235bc6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18235bc850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235bc9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235bcb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235bcd00"/>
        <function-ref name="get" scoped="" ref="0x7f18235bb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235bb1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235bb340"/>
        <function-ref name="set" scoped="" ref="0x7f18235bb4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235bb660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235bb7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18235bba80"/>
        <function-ref name="clr" scoped="" ref="0x7f18235bbc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f18235703e0" loc="168:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f18235703e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1823570760"/>
        <function-ref name="isInput" scoped="" ref="0x7f18235708f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1823570a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1823570c10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1823570da0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f182356f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f182356f1b0"/>
        <function-ref name="get" scoped="" ref="0x7f182356f340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f182356f4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f182356f660"/>
        <function-ref name="set" scoped="" ref="0x7f182356f7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f182356f980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f182356fb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f182356fda0"/>
        <function-ref name="clr" scoped="" ref="0x7f182356e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f182356a3f0" loc="172:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f182356a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f182356a770"/>
        <function-ref name="isInput" scoped="" ref="0x7f182356a900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f182356aa90"/>
        <function-ref name="toggle" scoped="" ref="0x7f182356ac20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f182356adb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1823569020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235691b0"/>
        <function-ref name="get" scoped="" ref="0x7f1823569340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235694d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1823569660"/>
        <function-ref name="set" scoped="" ref="0x7f18235697f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1823569980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1823569b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1823569da0"/>
        <function-ref name="clr" scoped="" ref="0x7f1823568020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f182359d060" loc="143:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f182359d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f182359d7e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f182359d970"/>
        <function-ref name="setResistor" scoped="" ref="0x7f182359db00"/>
        <function-ref name="toggle" scoped="" ref="0x7f182359dc90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f182359de20"/>
        <function-ref name="getResistor" scoped="" ref="0x7f182359c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f182359c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f182359c340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f182359c4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f182359c660"/>
        <function-ref name="set" scoped="" ref="0x7f182359c7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f182359c980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f182359cb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f182359cda0"/>
        <function-ref name="clr" scoped="" ref="0x7f182359b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f182353f3f0" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f182353f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f182353f770"/>
        <function-ref name="isInput" scoped="" ref="0x7f182353f900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f182353fa90"/>
        <function-ref name="toggle" scoped="" ref="0x7f182353fc20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f182353fdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f182353e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f182353e1b0"/>
        <function-ref name="get" scoped="" ref="0x7f182353e340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f182353e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f182353e660"/>
        <function-ref name="set" scoped="" ref="0x7f182353e7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f182353e980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f182353eb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f182353eda0"/>
        <function-ref name="clr" scoped="" ref="0x7f182353d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f182353be00" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f182353be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f182353a1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f182353a350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f182353a4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f182353a670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f182353a800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f182353a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f182353ab20"/>
        <function-ref name="get" scoped="" ref="0x7f182353acb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f182353ae40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1823539020"/>
        <function-ref name="set" scoped="" ref="0x7f18235391b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1823539340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235394d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1823539760"/>
        <function-ref name="clr" scoped="" ref="0x7f18235398f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1823536740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1823536740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1823536ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1823536c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1823536de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1823535020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235351b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1823535340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235354d0"/>
        <function-ref name="get" scoped="" ref="0x7f1823535660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235357f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1823535980"/>
        <function-ref name="set" scoped="" ref="0x7f1823535b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1823535ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1823535e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1823534120"/>
        <function-ref name="clr" scoped="" ref="0x7f18235342b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1823531100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1823531100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1823531480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1823531610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235317a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1823531930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1823531ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1823531c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1823531de0"/>
        <function-ref name="get" scoped="" ref="0x7f182352f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f182352f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f182352f340"/>
        <function-ref name="set" scoped="" ref="0x7f182352f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f182352f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f182352f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f182352fa80"/>
        <function-ref name="clr" scoped="" ref="0x7f182352fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f182352cd10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f182352cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f182352b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f182352b270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f182352b400"/>
        <function-ref name="toggle" scoped="" ref="0x7f182352b590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f182352b720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f182352b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f182352ba40"/>
        <function-ref name="get" scoped="" ref="0x7f182352bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f182352bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f182352a020"/>
        <function-ref name="set" scoped="" ref="0x7f182352a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f182352a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f182352a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f182352a760"/>
        <function-ref name="clr" scoped="" ref="0x7f182352a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1823527740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1823527740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1823527ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1823527c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1823527de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1823526020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235261b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1823526340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235264d0"/>
        <function-ref name="get" scoped="" ref="0x7f1823526660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235267f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1823526980"/>
        <function-ref name="set" scoped="" ref="0x7f1823526b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1823526ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1823526e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1823525120"/>
        <function-ref name="clr" scoped="" ref="0x7f18235252b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1823522100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1823522100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1823522480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1823522610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235227a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1823522930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1823522ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1823522c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1823522de0"/>
        <function-ref name="get" scoped="" ref="0x7f1823521020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235211b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1823521340"/>
        <function-ref name="set" scoped="" ref="0x7f18235214d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1823521660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235217f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1823521a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1823521c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f182351ed10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f182351ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f182351d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f182351d270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f182351d400"/>
        <function-ref name="toggle" scoped="" ref="0x7f182351d590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f182351d720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f182351d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f182351da40"/>
        <function-ref name="get" scoped="" ref="0x7f182351dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f182351dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f182351c020"/>
        <function-ref name="set" scoped="" ref="0x7f182351c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f182351c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f182351c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f182351c760"/>
        <function-ref name="clr" scoped="" ref="0x7f182351c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1823519740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1823519740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1823519ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1823519c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1823519de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1823518020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235181b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1823518340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235184d0"/>
        <function-ref name="get" scoped="" ref="0x7f1823518660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235187f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1823518980"/>
        <function-ref name="set" scoped="" ref="0x7f1823518b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1823518ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1823518e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1823517120"/>
        <function-ref name="clr" scoped="" ref="0x7f18235172b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1823514100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1823514100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1823514480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1823514610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18235147a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1823514930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1823514ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1823514c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1823514de0"/>
        <function-ref name="get" scoped="" ref="0x7f1823513020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235131b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1823513340"/>
        <function-ref name="set" scoped="" ref="0x7f18235134d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1823513660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18235137f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1823513a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1823513c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1823510d10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1823510d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f182350f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f182350f270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f182350f400"/>
        <function-ref name="toggle" scoped="" ref="0x7f182350f590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f182350f720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f182350f8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f182350fa40"/>
        <function-ref name="get" scoped="" ref="0x7f182350fbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f182350fd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f182350e020"/>
        <function-ref name="set" scoped="" ref="0x7f182350e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f182350e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f182350e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f182350e760"/>
        <function-ref name="clr" scoped="" ref="0x7f182350e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f182350a740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f182350a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f182350aac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f182350ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f182350ade0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1823509020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18235091b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1823509340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18235094d0"/>
        <function-ref name="get" scoped="" ref="0x7f1823509660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18235097f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1823509980"/>
        <function-ref name="set" scoped="" ref="0x7f1823509b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1823509ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1823509e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1823508120"/>
        <function-ref name="clr" scoped="" ref="0x7f18235082b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1823505260" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1823505260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235055e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1823505770"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1823505900"/>
        <function-ref name="toggle" scoped="" ref="0x7f1823505a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1823505c20"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1823505db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1823504020"/>
        <function-ref name="get" scoped="" ref="0x7f18235041b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1823504340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18235044d0"/>
        <function-ref name="set" scoped="" ref="0x7f1823504660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18235047f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1823504980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1823504c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1823504da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1823501d10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1823501d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18235000e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1823500270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1823500400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1823500590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1823500720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18235008b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1823500a40"/>
        <function-ref name="get" scoped="" ref="0x7f1823500bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1823500d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18234ff020"/>
        <function-ref name="set" scoped="" ref="0x7f18234ff1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18234ff340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18234ff4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18234ff760"/>
        <function-ref name="clr" scoped="" ref="0x7f18234ff8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f18234fc740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f18234fc740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18234fcac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18234fcc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18234fcde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18234fb020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18234fb1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18234fb340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18234fb4d0"/>
        <function-ref name="get" scoped="" ref="0x7f18234fb660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18234fb7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18234fb980"/>
        <function-ref name="set" scoped="" ref="0x7f18234fbb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18234fbca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18234fbe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18234fa120"/>
        <function-ref name="clr" scoped="" ref="0x7f18234fa2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f18234f7100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f18234f7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18234f7480"/>
        <function-ref name="isInput" scoped="" ref="0x7f18234f7610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18234f77a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18234f7930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18234f7ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18234f7c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18234f7de0"/>
        <function-ref name="get" scoped="" ref="0x7f18234f6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18234f61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18234f6340"/>
        <function-ref name="set" scoped="" ref="0x7f18234f64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18234f6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18234f67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18234f6a80"/>
        <function-ref name="clr" scoped="" ref="0x7f18234f6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f18234f3d10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f18234f3d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18234f20e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18234f2270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18234f2400"/>
        <function-ref name="toggle" scoped="" ref="0x7f18234f2590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18234f2720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18234f28b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18234f2a40"/>
        <function-ref name="get" scoped="" ref="0x7f18234f2bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18234f2d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18234f1020"/>
        <function-ref name="set" scoped="" ref="0x7f18234f11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18234f1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18234f14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18234f1760"/>
        <function-ref name="clr" scoped="" ref="0x7f18234f18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f18234ee740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f18234ee740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18234eeac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18234eec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18234eede0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18234ed020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18234ed1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18234ed340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18234ed4d0"/>
        <function-ref name="get" scoped="" ref="0x7f18234ed660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18234ed7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18234ed980"/>
        <function-ref name="set" scoped="" ref="0x7f18234edb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18234edca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18234ede30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18234ec120"/>
        <function-ref name="clr" scoped="" ref="0x7f18234ec2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f18234e9100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f18234e9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18234e9480"/>
        <function-ref name="isInput" scoped="" ref="0x7f18234e9610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18234e97a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18234e9930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18234e9ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18234e9c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18234e9de0"/>
        <function-ref name="get" scoped="" ref="0x7f18234e7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18234e71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18234e7340"/>
        <function-ref name="set" scoped="" ref="0x7f18234e74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18234e7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18234e77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18234e7a80"/>
        <function-ref name="clr" scoped="" ref="0x7f18234e7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f18234e4d10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f18234e4d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18234e30e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18234e3270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18234e3400"/>
        <function-ref name="toggle" scoped="" ref="0x7f18234e3590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18234e3720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18234e38b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18234e3a40"/>
        <function-ref name="get" scoped="" ref="0x7f18234e3bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18234e3d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18234e2020"/>
        <function-ref name="set" scoped="" ref="0x7f18234e21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18234e2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18234e24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18234e2760"/>
        <function-ref name="clr" scoped="" ref="0x7f18234e28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f18234df740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f18234df740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18234dfac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18234dfc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18234dfde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18234de020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18234de1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18234de340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18234de4d0"/>
        <function-ref name="get" scoped="" ref="0x7f18234de660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18234de7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18234de980"/>
        <function-ref name="set" scoped="" ref="0x7f18234deb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18234deca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18234dee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18234dd120"/>
        <function-ref name="clr" scoped="" ref="0x7f18234dd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f18234da100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f18234da100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18234da480"/>
        <function-ref name="isInput" scoped="" ref="0x7f18234da610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18234da7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18234da930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18234daac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18234dac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18234dade0"/>
        <function-ref name="get" scoped="" ref="0x7f18234d9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18234d91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18234d9340"/>
        <function-ref name="set" scoped="" ref="0x7f18234d94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18234d9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18234d97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18234d9a80"/>
        <function-ref name="clr" scoped="" ref="0x7f18234d9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f18234d6d10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f18234d6d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18234d50e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18234d5270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18234d5400"/>
        <function-ref name="toggle" scoped="" ref="0x7f18234d5590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18234d5720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18234d58b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18234d5a40"/>
        <function-ref name="get" scoped="" ref="0x7f18234d5bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18234d5d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18234d4020"/>
        <function-ref name="set" scoped="" ref="0x7f18234d41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18234d4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18234d44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18234d4760"/>
        <function-ref name="clr" scoped="" ref="0x7f18234d48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f18234d1740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f18234d1740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18234d1ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18234d1c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18234d1de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18234d0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18234d01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18234d0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18234d04d0"/>
        <function-ref name="get" scoped="" ref="0x7f18234d0660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18234d07f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18234d0980"/>
        <function-ref name="set" scoped="" ref="0x7f18234d0b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18234d0ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18234d0e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18234cf120"/>
        <function-ref name="clr" scoped="" ref="0x7f18234cf2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f18234cc3f0" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f18234cc3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18234cc770"/>
        <function-ref name="isInput" scoped="" ref="0x7f18234cc900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18234cca90"/>
        <function-ref name="toggle" scoped="" ref="0x7f18234ccc20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18234ccdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18234cb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18234cb1b0"/>
        <function-ref name="get" scoped="" ref="0x7f18234cb340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18234cb4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18234cb660"/>
        <function-ref name="set" scoped="" ref="0x7f18234cb7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18234cb980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18234cbb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18234cbda0"/>
        <function-ref name="clr" scoped="" ref="0x7f18234ca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f18234c8e00" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f18234c8e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18234c71c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18234c7350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18234c74e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18234c7670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18234c7800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18234c7990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18234c7b20"/>
        <function-ref name="get" scoped="" ref="0x7f18234c7cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18234c7e40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18234c6020"/>
        <function-ref name="set" scoped="" ref="0x7f18234c61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18234c6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18234c64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18234c6760"/>
        <function-ref name="clr" scoped="" ref="0x7f18234c68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f18234c3740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f18234c3740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18234c3ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18234c3c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18234c3de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18234c1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18234c11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18234c1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18234c14d0"/>
        <function-ref name="get" scoped="" ref="0x7f18234c1660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18234c17f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18234c1980"/>
        <function-ref name="set" scoped="" ref="0x7f18234c1b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18234c1ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18234c1e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18234c0120"/>
        <function-ref name="clr" scoped="" ref="0x7f18234c02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f18234bd100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f18234bd100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18234bd480"/>
        <function-ref name="isInput" scoped="" ref="0x7f18234bd610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18234bd7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18234bd930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18234bdac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18234bdc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18234bdde0"/>
        <function-ref name="get" scoped="" ref="0x7f18234bc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18234bc1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18234bc340"/>
        <function-ref name="set" scoped="" ref="0x7f18234bc4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18234bc660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18234bc7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18234bca80"/>
        <function-ref name="clr" scoped="" ref="0x7f18234bcc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f18234b9d10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f18234b9d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18234b80e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18234b8270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18234b8400"/>
        <function-ref name="toggle" scoped="" ref="0x7f18234b8590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18234b8720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18234b88b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18234b8a40"/>
        <function-ref name="get" scoped="" ref="0x7f18234b8bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18234b8d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18234b7020"/>
        <function-ref name="set" scoped="" ref="0x7f18234b71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18234b7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18234b74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18234b7760"/>
        <function-ref name="clr" scoped="" ref="0x7f18234b78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f18234b4740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f18234b4740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18234b4ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18234b4c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18234b4de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18234b3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18234b31b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18234b3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18234b34d0"/>
        <function-ref name="get" scoped="" ref="0x7f18234b3660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18234b37f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18234b3980"/>
        <function-ref name="set" scoped="" ref="0x7f18234b3b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18234b3ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18234b3e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18234b2120"/>
        <function-ref name="clr" scoped="" ref="0x7f18234b22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f18234af100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f18234af100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18234af480"/>
        <function-ref name="isInput" scoped="" ref="0x7f18234af610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18234af7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18234af930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18234afac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18234afc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18234afde0"/>
        <function-ref name="get" scoped="" ref="0x7f18234ae020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18234ae1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18234ae340"/>
        <function-ref name="set" scoped="" ref="0x7f18234ae4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18234ae660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18234ae7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18234aea80"/>
        <function-ref name="clr" scoped="" ref="0x7f18234aec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f18234abd10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f18234abd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18234aa0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18234aa270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18234aa400"/>
        <function-ref name="toggle" scoped="" ref="0x7f18234aa590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18234aa720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18234aa8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18234aaa40"/>
        <function-ref name="get" scoped="" ref="0x7f18234aabd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18234aad60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18234a9020"/>
        <function-ref name="set" scoped="" ref="0x7f18234a91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18234a9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18234a94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18234a9760"/>
        <function-ref name="clr" scoped="" ref="0x7f18234a98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f18234a6740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f18234a6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18234a6ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18234a6c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18234a6de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18234a5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18234a51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18234a5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18234a54d0"/>
        <function-ref name="get" scoped="" ref="0x7f18234a5660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18234a57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18234a5980"/>
        <function-ref name="set" scoped="" ref="0x7f18234a5b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18234a5ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18234a5e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18234a4120"/>
        <function-ref name="clr" scoped="" ref="0x7f18234a42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f18234a1100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f18234a1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18234a1480"/>
        <function-ref name="isInput" scoped="" ref="0x7f18234a1610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18234a17a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18234a1930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18234a1ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18234a1c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18234a1de0"/>
        <function-ref name="get" scoped="" ref="0x7f18234a0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18234a01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18234a0340"/>
        <function-ref name="set" scoped="" ref="0x7f18234a04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18234a0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18234a07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18234a0a80"/>
        <function-ref name="clr" scoped="" ref="0x7f18234a0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f182349cd10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f182349cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f182349b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f182349b270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f182349b400"/>
        <function-ref name="toggle" scoped="" ref="0x7f182349b590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f182349b720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f182349b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f182349ba40"/>
        <function-ref name="get" scoped="" ref="0x7f182349bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f182349bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f182349a020"/>
        <function-ref name="set" scoped="" ref="0x7f182349a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f182349a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f182349a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f182349a760"/>
        <function-ref name="clr" scoped="" ref="0x7f182349a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1823497740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1823497740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1823497ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1823497c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1823497de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1823496020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18234961b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1823496340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18234964d0"/>
        <function-ref name="get" scoped="" ref="0x7f1823496660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18234967f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1823496980"/>
        <function-ref name="set" scoped="" ref="0x7f1823496b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1823496ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1823496e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1823495120"/>
        <function-ref name="clr" scoped="" ref="0x7f18234952b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1823492100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1823492100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1823492480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1823492610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18234927a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1823492930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1823492ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1823492c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1823492de0"/>
        <function-ref name="get" scoped="" ref="0x7f1823491020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18234911b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1823491340"/>
        <function-ref name="set" scoped="" ref="0x7f18234914d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1823491660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18234917f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1823491a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1823491c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f182348ed10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f182348ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f182348d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f182348d270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f182348d400"/>
        <function-ref name="toggle" scoped="" ref="0x7f182348d590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f182348d720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f182348d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f182348da40"/>
        <function-ref name="get" scoped="" ref="0x7f182348dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f182348dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f182348c020"/>
        <function-ref name="set" scoped="" ref="0x7f182348c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f182348c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f182348c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f182348c760"/>
        <function-ref name="clr" scoped="" ref="0x7f182348c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1823489740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1823489740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1823489ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1823489c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1823489de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1823488020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18234881b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1823488340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18234884d0"/>
        <function-ref name="get" scoped="" ref="0x7f1823488660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18234887f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1823488980"/>
        <function-ref name="set" scoped="" ref="0x7f1823488b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1823488ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1823488e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1823487120"/>
        <function-ref name="clr" scoped="" ref="0x7f18234872b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1823484100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1823484100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1823484480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1823484610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18234847a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1823484930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1823484ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1823484c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1823484de0"/>
        <function-ref name="get" scoped="" ref="0x7f1823483020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18234831b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1823483340"/>
        <function-ref name="set" scoped="" ref="0x7f18234834d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1823483660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18234837f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1823483a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1823483c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1823480d10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1823480d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f182347f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f182347f270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f182347f400"/>
        <function-ref name="toggle" scoped="" ref="0x7f182347f590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f182347f720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f182347f8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f182347fa40"/>
        <function-ref name="get" scoped="" ref="0x7f182347fbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f182347fd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f182347e020"/>
        <function-ref name="set" scoped="" ref="0x7f182347e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f182347e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f182347e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f182347e760"/>
        <function-ref name="clr" scoped="" ref="0x7f182347e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f182347b740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f182347b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f182347bac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f182347bc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f182347bde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1823479020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18234791b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1823479340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18234794d0"/>
        <function-ref name="get" scoped="" ref="0x7f1823479660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18234797f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1823479980"/>
        <function-ref name="set" scoped="" ref="0x7f1823479b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1823479ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1823479e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1823478120"/>
        <function-ref name="clr" scoped="" ref="0x7f18234782b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1823475100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1823475100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1823475480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1823475610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18234757a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1823475930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1823475ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1823475c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1823475de0"/>
        <function-ref name="get" scoped="" ref="0x7f1823474020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18234741b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1823474340"/>
        <function-ref name="set" scoped="" ref="0x7f18234744d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1823474660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18234747f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1823474a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1823474c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1823471d10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1823471d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18234700e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1823470270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1823470400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1823470590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1823470720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18234708b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1823470a40"/>
        <function-ref name="get" scoped="" ref="0x7f1823470bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1823470d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f182346f020"/>
        <function-ref name="set" scoped="" ref="0x7f182346f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f182346f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f182346f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f182346f760"/>
        <function-ref name="clr" scoped="" ref="0x7f182346f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f182346c740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f182346c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f182346cac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f182346cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f182346cde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f182346b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f182346b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f182346b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f182346b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f182346b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f182346b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f182346b980"/>
        <function-ref name="set" scoped="" ref="0x7f182346bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f182346bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f182346be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f182346a120"/>
        <function-ref name="clr" scoped="" ref="0x7f182346a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1823467100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1823467100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1823467480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1823467610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18234677a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1823467930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1823467ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1823467c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1823467de0"/>
        <function-ref name="get" scoped="" ref="0x7f1823466020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18234661b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1823466340"/>
        <function-ref name="set" scoped="" ref="0x7f18234664d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1823466660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18234667f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1823466a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1823466c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1823463d10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1823463d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18234620e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1823462270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1823462400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1823462590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1823462720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18234628b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1823462a40"/>
        <function-ref name="get" scoped="" ref="0x7f1823462bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1823462d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1823461020"/>
        <function-ref name="set" scoped="" ref="0x7f18234611b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1823461340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18234614d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1823461760"/>
        <function-ref name="clr" scoped="" ref="0x7f18234618f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f182345e740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f182345e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f182345eac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f182345ec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f182345ede0"/>
        <function-ref name="toggle" scoped="" ref="0x7f182345d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f182345d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f182345d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f182345d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f182345d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f182345d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f182345d980"/>
        <function-ref name="set" scoped="" ref="0x7f182345db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f182345dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f182345de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f182345c120"/>
        <function-ref name="clr" scoped="" ref="0x7f182345c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f18233ea200" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f18233ea200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1823c0b640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1823c0b9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f18233e9090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f18233e9a10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f18233e9550"/>
        <function-ref name="overflow" scoped="" ref="0x7f18233e8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f18233ec3c0" loc="46:/opt/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f18233ec3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f18233ec740"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f18233ec8d0"/>
        <function-ref name="led1On" scoped="" ref="0x7f18233eca60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f18233ecbf0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f18233ecd80"/>
        <function-ref name="get" scoped="" ref="0x7f18233e5020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f18233e51b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f18233e57f0"/>
        <function-ref name="set" scoped="" ref="0x7f18233e5340"/>
        <function-ref name="led0On" scoped="" ref="0x7f18233e54d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f18233e5660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f18233d93a0" loc="50:/opt/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f18233d93a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18233d9720"/>
        <function-ref name="isInput" scoped="" ref="0x7f18233d98b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18233d9a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18233d9bd0"/>
        <function-ref name="get" scoped="" ref="0x7f18233d9d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18233df020"/>
        <function-ref name="set" scoped="" ref="0x7f18233df1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f18233df340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f18233e47c0" loc="46:/opt/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f18233e47c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f18233e4b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f18233df660" loc="51:/opt/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f18233df660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18233df9e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18233dfb70"/>
        <function-ref name="toggle" scoped="" ref="0x7f18233dfd00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18233de020"/>
        <function-ref name="get" scoped="" ref="0x7f18233de1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18233de340"/>
        <function-ref name="set" scoped="" ref="0x7f18233de4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f18233de660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f18233e4dc0" loc="47:/opt/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f18233e4dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f18233e1180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f18233e1310"/>
        <function-ref name="led1On" scoped="" ref="0x7f18233e14a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f18233e1630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f18233e17c0"/>
        <function-ref name="get" scoped="" ref="0x7f18233e1950"/>
        <function-ref name="led1Off" scoped="" ref="0x7f18233e1ae0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f18233e01b0"/>
        <function-ref name="set" scoped="" ref="0x7f18233e1c70"/>
        <function-ref name="led0On" scoped="" ref="0x7f18233e1e00"/>
        <function-ref name="led2On" scoped="" ref="0x7f18233e0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f18233de980" loc="52:/opt/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f18233de980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18233ded00"/>
        <function-ref name="isInput" scoped="" ref="0x7f18233d8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f18233d81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18233d8340"/>
        <function-ref name="get" scoped="" ref="0x7f18233d84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18233d8660"/>
        <function-ref name="set" scoped="" ref="0x7f18233d87f0"/>
        <function-ref name="clr" scoped="" ref="0x7f18233d8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f18233ba060" loc="41:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f18233ba060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18233ba3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18233ba570"/>
        <function-ref name="toggle" scoped="" ref="0x7f18233ba700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18233ba890"/>
        <function-ref name="get" scoped="" ref="0x7f18233baa20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18233babb0"/>
        <function-ref name="set" scoped="" ref="0x7f18233bad40"/>
        <function-ref name="clr" scoped="" ref="0x7f18233b9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f18233b9380" loc="42:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f18233b9380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18233b9700"/>
        <function-ref name="isInput" scoped="" ref="0x7f18233b9890"/>
        <function-ref name="toggle" scoped="" ref="0x7f18233b9a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18233b9bb0"/>
        <function-ref name="get" scoped="" ref="0x7f18233b9d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18233b8020"/>
        <function-ref name="set" scoped="" ref="0x7f18233b81b0"/>
        <function-ref name="clr" scoped="" ref="0x7f18233b8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f18233b7920" loc="44:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f18233b7920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f18233b7ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f18233b86a0" loc="43:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f18233b86a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18233b8a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f18233b8bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18233b8d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18233b7020"/>
        <function-ref name="get" scoped="" ref="0x7f18233b71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18233b7340"/>
        <function-ref name="set" scoped="" ref="0x7f18233b74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f18233b7660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f18233a3610" loc="44:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f18233a3610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18233a3990"/>
        <function-ref name="isInput" scoped="" ref="0x7f18233a3b20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18233a3cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f18233a3e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18233a2020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f18233a21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18233a2340"/>
        <function-ref name="get" scoped="" ref="0x7f18233a24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f18233a2660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f18233a27f0"/>
        <function-ref name="set" scoped="" ref="0x7f18233a2980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f18233a2b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18233a2ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f18233a1020"/>
        <function-ref name="clr" scoped="" ref="0x7f18233a11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f18233b4440" loc="43:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f18233b4440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f18233b47c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f18233b4950"/>
        <function-ref name="toggle" scoped="" ref="0x7f18233b4ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18233b4c70"/>
        <function-ref name="get" scoped="" ref="0x7f18233b4e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18233a3020"/>
        <function-ref name="set" scoped="" ref="0x7f18233a31b0"/>
        <function-ref name="clr" scoped="" ref="0x7f18233a3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f182339d2f0" loc="44:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f182339d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f182339d670"/>
        <function-ref name="isInput" scoped="" ref="0x7f182339d800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f182339d990"/>
        <function-ref name="toggle" scoped="" ref="0x7f182339db20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f182339dcb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f182339de40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f182339c020"/>
        <function-ref name="get" scoped="" ref="0x7f182339c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f182339c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f182339c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f182339c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f182339c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f182339c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f182339cc10"/>
        <function-ref name="clr" scoped="" ref="0x7f182339cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f182339f020" loc="43:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f182339f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f182339f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f182339f530"/>
        <function-ref name="toggle" scoped="" ref="0x7f182339f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f182339f850"/>
        <function-ref name="get" scoped="" ref="0x7f182339f9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f182339fb70"/>
        <function-ref name="set" scoped="" ref="0x7f182339fd00"/>
        <function-ref name="clr" scoped="" ref="0x7f182339d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1823399de0" loc="44:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1823399de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1823398180"/>
        <function-ref name="isInput" scoped="" ref="0x7f1823398310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f18233984a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1823398630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18233987c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1823398950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1823398ae0"/>
        <function-ref name="get" scoped="" ref="0x7f1823398c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1823398e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1823397020"/>
        <function-ref name="set" scoped="" ref="0x7f18233971b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1823397340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f18233974d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1823397760"/>
        <function-ref name="clr" scoped="" ref="0x7f18233978f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f182339ab90" loc="43:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f182339ab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1823399020"/>
        <function-ref name="isInput" scoped="" ref="0x7f18233991b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1823399340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f18233994d0"/>
        <function-ref name="get" scoped="" ref="0x7f1823399660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f18233997f0"/>
        <function-ref name="set" scoped="" ref="0x7f1823399980"/>
        <function-ref name="clr" scoped="" ref="0x7f1823399b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1822f0b970" loc="43:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1822f0b970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1822f0bcf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1822f0be80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1822f05a50" loc="48:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1822f05a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1822f05dd0"/>
        <function-ref name="configure" scoped="" ref="0x7f1822f04020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f1822f052b0" loc="46:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1822f052b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1822f05630"/>
        <function-ref name="txDone" scoped="" ref="0x7f1822f057c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1822f0ccc0" loc="42:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1822f0ccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1822f0b0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1822f0b230"/>
        <function-ref name="request" scoped="" ref="0x7f1822f0b3c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1822f0b550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1822f0b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f1822f0a8d0" loc="45:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1822f0a8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f1822f0ac50"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f1822f0ade0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f1822f09020"/>
        <function-ref name="enableUart" scoped="" ref="0x7f1822f091b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f1822f09340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1822f094d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1822f09660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f1822f097f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f1822f09980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f1822f09b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f1822f09ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f1822f09e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f1822f08020"/>
        <function-ref name="getUbr" scoped="" ref="0x7f1822f082b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1822f08440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f1822f085d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f1822f08760"/>
        <function-ref name="isUart" scoped="" ref="0x7f1822f088f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1822f08a80"/>
        <function-ref name="isSpi" scoped="" ref="0x7f1822f08c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f1822f08da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1822f07020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f1822f071b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f1822f07340"/>
        <function-ref name="getMode" scoped="" ref="0x7f1822f074d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1822f07860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f1822f079f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f1822f07b80"/>
        <function-ref name="tx" scoped="" ref="0x7f1822f07d10"/>
        <function-ref name="getUctl" scoped="" ref="0x7f1822f06020"/>
        <function-ref name="disableUart" scoped="" ref="0x7f1822f061b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f1822f06340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f1822f064d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f1822f06660"/>
        <function-ref name="rx" scoped="" ref="0x7f1822f067f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1822f06980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f1822f06b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1822f06ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f1822f06e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f1822f05020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1822f0a130" loc="44:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1822f0a130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1822f0a4b0"/>
        <function-ref name="userId" scoped="" ref="0x7f1822f0a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1823373bc0" loc="42:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1823373bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1823372020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f18233721b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1823371280" loc="45:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1823371280"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1823371600"/>
        <function-ref name="configure" scoped="" ref="0x7f1823371790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1823376980" loc="40:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1823376980"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1823376d00"/>
        <function-ref name="txDone" scoped="" ref="0x7f1823375020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1823375850" loc="41:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1823375850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1823375bd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1823375d60"/>
        <function-ref name="request" scoped="" ref="0x7f1823373020"/>
        <function-ref name="granted" scoped="" ref="0x7f18233731b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1823373340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f18233724b0" loc="43:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f18233724b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1823372830"/>
        <function-ref name="userId" scoped="" ref="0x7f18233729c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f182335a4b0" loc="43:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f182335a4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f182335a830"/>
        <function-ref name="userId" scoped="" ref="0x7f182335a9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f182336e5c0" loc="39:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f182336e5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f182336e960"/>
        <function-ref name="txDone" scoped="" ref="0x7f182336eaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f182335be70" loc="42:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f182335be70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f182335a220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f182335b020" loc="40:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f182335b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f182335b3c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f182335b690" loc="41:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f182335b690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f182335ba10"/>
        <function-ref name="txDone" scoped="" ref="0x7f182335bba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f18232e1bf0" loc="92:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f18232e1bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f18232e0020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f18232e01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f18232df930" loc="96:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f18232df930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f18232dfcd0"/>
        <function-ref name="configure" scoped="" ref="0x7f18232dfe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f18232e0400" loc="93:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f18232e0400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f18232e0780"/>
        <function-ref name="requested" scoped="" ref="0x7f18232e0910"/>
        <function-ref name="granted" scoped="" ref="0x7f18232e0aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f18232e0c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f18232e0dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f18232e2e60" loc="91:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f18232e2e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f18232e1230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f18232e13c0"/>
        <function-ref name="request" scoped="" ref="0x7f18232e1550"/>
        <function-ref name="granted" scoped="" ref="0x7f18232e16e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f18232e1870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f18232df060" loc="94:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f18232df060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f18232df3e0"/>
        <function-ref name="userId" scoped="" ref="0x7f18232df570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1822b54ca0" loc="44:/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1822b54ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1822b530a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f1822b53330" loc="45:/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f1822b53330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1822b536b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1822b53840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1822b539d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1822b53b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1822b4f3a0" loc="55:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1822b4f3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1822b4f740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1822b4f8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1822b4d210" loc="60:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1822b4d210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1822b4d5b0"/>
        <function-ref name="configure" scoped="" ref="0x7f1822b4d740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f1822b4d9d0" loc="61:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f1822b4d9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1822b4dd50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1822b4c020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1822b4c1b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1822b4c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1822b4fb20" loc="56:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1822b4fb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1822b4e020"/>
        <function-ref name="requested" scoped="" ref="0x7f1822b4e1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f1822b4e340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1822b4e4d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1822b4e660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1822b4c590" loc="62:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1822b4c590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1822b4c910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1822b4caa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f1822b4cc30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1822b4cdc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1822b4b020"/>
        <function-ref name="get" scoped="" ref="0x7f1822b4b1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1822b4b340"/>
        <function-ref name="led0On" scoped="" ref="0x7f1822b4b980"/>
        <function-ref name="set" scoped="" ref="0x7f1822b4b660"/>
        <function-ref name="led2On" scoped="" ref="0x7f1822b4b4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1822b4b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1822b51540" loc="54:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1822b51540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1822b518e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1822b51a70"/>
        <function-ref name="request" scoped="" ref="0x7f1822b51c00"/>
        <function-ref name="granted" scoped="" ref="0x7f1822b51d90"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1822b4f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1822b4e8b0" loc="57:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1822b4e8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1822b4ec30"/>
        <function-ref name="userId" scoped="" ref="0x7f1822b4edc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f1822b4bc50" loc="75:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f1822b4bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1822b4a020"/>
        <function-ref name="runTask" scoped="" ref="0x7f1822b4a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f18232c4400" loc="72:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f18232c4400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f18232c4780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f18232c49d0" loc="73:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f18232c49d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f18232c4d50"/>
        <function-ref name="requested" scoped="" ref="0x7f18232c3020"/>
        <function-ref name="granted" scoped="" ref="0x7f18232c31b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f18232c3340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f18232c34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f18232d9b20" loc="70:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f18232d9b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f18232c4020"/>
        <function-ref name="stop" scoped="" ref="0x7f18232c41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f18232c3720" loc="74:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f18232c3720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f18232c3aa0"/>
        <function-ref name="userId" scoped="" ref="0x7f18232c3c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f1822b1ab00" loc="62:/opt/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1822b1ab00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f1822b1ae80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f1822b190f0" loc="63:/opt/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1822b190f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1822b19470"/>
        <function-ref name="requested" scoped="" ref="0x7f1822b19600"/>
        <function-ref name="granted" scoped="" ref="0x7f1822b19790"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1822b19920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1822b19ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f1822b1a3a0" loc="60:/opt/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1822b1a3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1822b1a720"/>
        <function-ref name="stop" scoped="" ref="0x7f1822b1a8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f1822b19d00" loc="64:/opt/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1822b19d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1822b180a0"/>
        <function-ref name="userId" scoped="" ref="0x7f1822b18230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7f18232a3080" loc="3:/opt/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f18232a3080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f18232a3400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f18232a36f0" loc="4:/opt/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f18232a36f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f18232a3a70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f18232a3c00"/>
        <function-ref name="request" scoped="" ref="0x7f18232a3d90"/>
        <function-ref name="granted" scoped="" ref="0x7f18232a2020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f18232a21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f18232a67a0" loc="2:/opt/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f18232a67a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f18232a6b20"/>
        <function-ref name="stop" scoped="" ref="0x7f18232a6cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7f182328f1e0" loc="47:/opt/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7f182328f1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f182328f560"/>
        <function-ref name="offset" scoped="" ref="0x7f182328f6f0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f182328f880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f1823274bf0" loc="43:/opt/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f1823274bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f182324fae0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f182324e880"/>
        <function-ref name="element" scoped="" ref="0x7f182324c020"/>
        <function-ref name="full" scoped="" ref="0x7f1823273ce0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f182324f660"/>
        <function-ref name="dequeue" scoped="" ref="0x7f182324e1d0"/>
        <function-ref name="empty" scoped="" ref="0x7f1823273860"/>
        <function-ref name="size" scoped="" ref="0x7f182324f1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f1823245a20" loc="93:/opt/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f1823245a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f1823246920"/>
        <function-ref name="enqueue" scoped="" ref="0x7f18232436d0"/>
        <function-ref name="element" scoped="" ref="0x7f1823243d40"/>
        <function-ref name="full" scoped="" ref="0x7f1823247af0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f18232464a0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1823243020"/>
        <function-ref name="empty" scoped="" ref="0x7f1823247670"/>
        <function-ref name="size" scoped="" ref="0x7f1823246020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f1823242440" loc="94:/opt/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1823242440"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f18232427c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1823242950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1823242ae0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1823242c70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1823242e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f18232410c0" loc="95:/opt/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f18232410c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1823241440"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f18232415d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1823241760"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f18232418f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1823241a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x7f182323b500" loc="114:/opt/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="retrySend" scoped="" ref="0x7f182323b500"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f182323b880"/>
        <function-ref name="runTask" scoped="" ref="0x7f182323ba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f182324ba60" loc="89:/opt/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f182324ba60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f182324bde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1823241d00" loc="96:/opt/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1823241d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f18232400a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1823240230"/>
        <function-ref name="led1On" scoped="" ref="0x7f18232403c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1823240550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f18232406e0"/>
        <function-ref name="get" scoped="" ref="0x7f1823240870"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1823240a00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f182323f1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1823240b90"/>
        <function-ref name="led0On" scoped="" ref="0x7f1823240d20"/>
        <function-ref name="led2On" scoped="" ref="0x7f182323f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x7f18232451a0" loc="90:/opt/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f18232451a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f1823245520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f1823224be0" loc="43:/opt/tinyos-main/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f1823224be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f1823221020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f182321e020" loc="94:/opt/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f182321e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f182321e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f182321e680" loc="95:/opt/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f182321e680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f182321ea00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f1823218380" loc="39:/opt/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f1823218380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f1823218700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f1823218aa0" loc="40:/opt/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f1823218aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1823218e20"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1823215020"/>
        <function-ref name="start" scoped="" ref="0x7f18232151b0"/>
        <function-ref name="stop" scoped="" ref="0x7f1823215340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="primeModule" ref="0x7f182321f880" loc="2:primeC.nc">
      <component-ref qname="primeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="primeModule" scoped="" ref="0x7f182321f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="primeModule"/>
      </instance>
      <interface-functions>
        <function-ref name="isPrime" scoped="" ref="0x7f182321fc00"/>
        <function-ref name="genLargeNum" scoped="" ref="0x7f182321fd90"/>
        <function-ref name="power" scoped="" ref="0x7f182320e020"/>
        <function-ref name="gcd" scoped="" ref="0x7f182320e1b0"/>
        <function-ref name="genLargePrime" scoped="" ref="0x7f182320e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="primeModule" ref="0x7f182320ee20" loc="3:primeP.nc">
      <component-ref qname="primeP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="primeModule" scoped="" ref="0x7f182320ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="primeModule"/>
      </instance>
      <interface-functions>
        <function-ref name="isPrime" scoped="" ref="0x7f182320b1c0"/>
        <function-ref name="genLargeNum" scoped="" ref="0x7f182320b350"/>
        <function-ref name="power" scoped="" ref="0x7f182320b4e0"/>
        <function-ref name="gcd" scoped="" ref="0x7f182320b670"/>
        <function-ref name="genLargePrime" scoped="" ref="0x7f182320b800"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/opt/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f1823de6a60" loc="62:/opt/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f1823de4690" loc="60:/opt/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f1823db5b40" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f1823db7de0" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f1823db5420" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f1823db7700" loc="42:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f1823db65a0" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f1823dbb900" loc="40:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f1823db7020" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f1823db6cc0" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/opt/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f18241ccb70" loc="62:/opt/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f1824219c00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f1823d62020" loc="55:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f1823d63cc0" loc="55:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f1823d66390" loc="42:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1823dad5a0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f1823dab020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f1823d62890" loc="57:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f1823d617b0" loc="59:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f18242d6090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f1823d63560" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f1823d61020" loc="58:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f1823d66b30" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f18242d6090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f1823d65350" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f1823d65da0" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1823dad5a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f1823dab020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f1823d65b20" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1823dad5a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f1823dab020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f1823d550e0" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f1823d52630" loc="79:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f18242d6090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f1823d523b0" loc="79:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f18242d6090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f1823d512a0" loc="86:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f1823d51020" loc="86:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f1823d53be0" loc="68:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f1823d533e0" loc="63:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f18242d6090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f1823d55a90" loc="56:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f1823d55810" loc="56:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f1823d5c3e0" loc="40:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f1823d5cd60" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f1823d5cae0" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f1823d5a790" loc="42:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f1823d5a510" loc="42:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f1823d592a0" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f1823d59020" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f1823d59990" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f1823d6c810" loc="52:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f1823d692a0" loc="55:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f1823d69020" loc="55:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f1823d6a020" loc="53:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1823d72ab0" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f1823d6a760" loc="54:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f1823d6e9b0" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f1823d6c120" loc="51:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f1823d6e270" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f18242d6090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f1823d6d0e0" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f1823d6d9f0" loc="50:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f1823d6d770" loc="50:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f1823d69cb0" loc="56:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f1823d69a30" loc="56:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f1823d2b1f0" loc="39:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f1823e772b0" loc="76:/opt/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f1824090420" loc="52:/opt/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f18242d2020" loc="57:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f18242d1020" loc="72:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f18242d2790" loc="65:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f18242d6090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f18242c6020" loc="67:/opt/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f18242c6870" loc="75:/opt/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1823bfabf0" loc="53:/opt/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1823bfabf0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f1823bf2560" loc="61:/opt/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1824c31920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="primeModule" loc="1:primeModule.nc">
      <function command="" provided="0" name="isPrime" ref="0x7f1823bf55d0" loc="4:primeModule.nc">
        <interfacedef-ref qname="primeModule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f18242d6090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1824c31920"/></typename>
            </type-int>
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f1824c32930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f1823bf5020" loc="4:primeModule.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1824c31920"/></typename>
            </type-int>
          </variable>
          <variable name="k" ref="0x7f1823bf5340" loc="4:primeModule.nc">
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f1824c32930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="genLargeNum" ref="0x7f1823bf5d10" loc="5:primeModule.nc">
        <interfacedef-ref qname="primeModule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1824c31920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="power" ref="0x7f1823bf8b20" loc="2:primeModule.nc">
        <interfacedef-ref qname="primeModule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long" size="I:4" alignment="I:2">
            <typename><typedef-ref name="int32_t" ref="0x7f1824c32930"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f1824c32930"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1824c31920"/></typename>
            </type-int>
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f1824c32930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x7f1823bf8230" loc="2:primeModule.nc">
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f1824c32930"/></typename>
            </type-int>
          </variable>
          <variable name="n" ref="0x7f1823bf8560" loc="2:primeModule.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1824c31920"/></typename>
            </type-int>
          </variable>
          <variable name="p" ref="0x7f1823bf8880" loc="2:primeModule.nc">
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f1824c32930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="gcd" ref="0x7f1823bf77e0" loc="3:primeModule.nc">
        <interfacedef-ref qname="primeModule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long" size="I:4" alignment="I:2">
            <typename><typedef-ref name="int32_t" ref="0x7f1824c32930"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f1824c32930"/></typename>
            </type-int>
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f1824c32930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x7f1823bf7230" loc="3:primeModule.nc">
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f1824c32930"/></typename>
            </type-int>
          </variable>
          <variable name="b" ref="0x7f1823bf7550" loc="3:primeModule.nc">
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f1824c32930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="genLargePrime" ref="0x7f1823bf44b0" loc="6:primeModule.nc">
        <interfacedef-ref qname="primeModule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1824c31920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1823c07390" loc="53:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1823c07390"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f1823bff1f0" loc="136:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1824c31920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f1823c04a60" loc="83:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f1823c02820" loc="114:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1824c31920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1824c31920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f1823c02250" loc="114:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1824c31920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f1823c02590" loc="114:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1824c31920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f1823c03a60" loc="98:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f18242d6090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f1823bfe270" loc="151:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1824c31920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f1823bff980" loc="144:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1824c31920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f1823c03270" loc="92:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f18242d6090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f1823c05020" loc="64:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1824c31920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f1823c07c80" loc="64:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1824c31920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f1823c00820" loc="129:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1824c31920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1824c31920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f1823c00250" loc="129:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1824c31920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f1823c00590" loc="129:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1824c31920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f1823c05ae0" loc="73:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1824c31920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f1823c05860" loc="73:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1824c31920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1823c04350" loc="78:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1823bc4ba0" loc="56:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1823bc4ba0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f1823bc4de0" loc="56:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1823bc4de0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f1823bbd9c0" loc="109:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1823bc4de0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f1823bbf9b0" loc="78:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f1823bbd020" loc="103:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1823bc4de0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1823bc4de0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f1823bbea10" loc="103:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1823bc4de0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f1823bbed50" loc="103:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1823bc4de0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f1823bbe1f0" loc="88:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f18242d6090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f1823bbc1f0" loc="116:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1823bc4de0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f1823bc1960" loc="66:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1823bc4de0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f1823bc16e0" loc="66:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1823bc4de0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1823bbf1f0" loc="73:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1823b50100" loc="57:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1823b50100"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f1823b50340" loc="57:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1823b50340"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f1823b50c60" loc="64:/opt/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1823b50340"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f1823b4fd70" loc="76:/opt/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f1823b4f510" loc="71:/opt/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f18242d6090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f1823b4e500" loc="82:/opt/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f1823a27e60" loc="80:/opt/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1823dfc9d0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f1823a27510" loc="80:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1823dfc9d0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f1823a27890" loc="80:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1823a27bc0" loc="80:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f1823a21620" loc="135:/opt/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1823a21020" loc="135:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1823a21350" loc="135:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f1823a206d0" loc="123:/opt/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f1823a242a0" loc="96:/opt/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1823a24020" loc="96:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f1823a237f0" loc="110:/opt/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1823a23210" loc="110:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f1823a23560" loc="110:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f1823a1c020" loc="65:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1823a29c60" loc="65:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f1823a1b110" loc="78:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1823a1ce10" loc="78:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f1823a17490" loc="126:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1823a18e50" loc="126:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1823a171c0" loc="126:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f1823a18560" loc="106:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f1823a1a5e0" loc="94:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1823a1a020" loc="94:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1823a1a350" loc="94:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f1823a08d30" loc="177:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f1823dfc5f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1823a08ab0" loc="177:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f1823a11a10" loc="88:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1823dfc9d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1823a11790" loc="88:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f1823a28e50" loc="68:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1823dfc9d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f1823a13950" loc="78:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1823dfc9d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1823a136d0" loc="78:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f1823a0e3a0" loc="121:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1823dfc9d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1823a12d70" loc="121:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f1823a0e110" loc="121:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1823dfc9d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f1823a10e50" loc="103:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1823dfc9d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1823a10870" loc="103:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f1823a10bc0" loc="103:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1823dfc9d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f1823a0b810" loc="147:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1823dfc210"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1823a0b590" loc="147:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f1823a09b90" loc="162:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1823dfc210"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1823a095e0" loc="162:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f1823a09900" loc="162:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1823dfc210"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f1823a0d600" loc="136:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f18242d6090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1823a0d380" loc="136:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f1823a062f0" loc="187:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1823dfc5f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1823a0acf0" loc="187:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f1823a06060" loc="187:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1823dfc5f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f1823a05190" loc="195:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f1823dfc5f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f1823a02ad0" loc="59:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1823a02850" loc="59:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f1823a00cd0" loc="71:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1823a00a50" loc="71:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f18239fe020" loc="85:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f18242d6090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1823a01ce0" loc="85:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f18239f85e0" loc="75:/opt/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f18239f8020" loc="75:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f18239f8350" loc="75:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f18239f3bb0" loc="125:/opt/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f18239f35b0" loc="125:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f18239f38e0" loc="125:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f18239f5d20" loc="112:/opt/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f18239f6900" loc="89:/opt/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f18239f6680" loc="89:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f18239f4e00" loc="100:/opt/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f18239f4820" loc="100:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f18239f4b70" loc="100:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f1823987ab0" loc="113:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f1823987830" loc="113:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f1823985020" loc="138:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f1823986d30" loc="138:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f182398ad60" loc="104:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1823986350" loc="130:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f1823981410" loc="78:/opt/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
              <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1823984a90" loc="78:/opt/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f1823984de0" loc="78:/opt/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1823981130" loc="78:/opt/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f1823976270" loc="61:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f1823976a20" loc="67:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f1823975270" loc="72:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f18239741f0" loc="83:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f1823972940" loc="100:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1823971190" loc="117:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f1823975a00" loc="77:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1823971d00" loc="134:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f1823971a80" loc="134:/opt/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f1823977a60" loc="56:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f18239749d0" loc="89:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f1823972190" loc="94:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7f1823908020" loc="31:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1823909960" loc="31:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7f1823909ce0" loc="31:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7f182390b020" loc="15:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7f1823909020" loc="23:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f182390b8b0" loc="23:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1823ded3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1823deca00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7f182390bc20" loc="23:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f18238ec760" loc="95:/opt/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f18238eb020" loc="105:/opt/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/opt/tinyos-main/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/opt/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7f18238eae10" loc="54:/opt/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/opt/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f18238ea6a0" loc="49:/opt/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/opt/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7f18238f4770" loc="56:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7f18238f3be0" loc="72:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7f18238f1840" loc="94:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f18238f15c0" loc="94:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7f18238f24a0" loc="79:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7f18238f3350" loc="65:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f18238f30d0" loc="65:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7f18238f00e0" loc="100:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7f18238f2d50" loc="85:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7f18238fb0e0" loc="71:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7f18238fba10" loc="81:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7f18238fd720" loc="62:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7f18238fd4a0" loc="62:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7f18238fa5c0" loc="91:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f18238fa340" loc="91:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7f18238f8270" loc="62:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7f18238f7020" loc="69:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f18238f8c10" loc="69:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7f18238f7af0" loc="80:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f18238f7870" loc="80:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f18237c1c40" loc="48:/opt/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f18237c1670" loc="48:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f18237c19b0" loc="48:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f18237bca70" loc="79:/opt/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f18237bc7f0" loc="79:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f18237bb890" loc="90:/opt/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f18237bb2c0" loc="90:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f18237bb600" loc="90:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f18237be610" loc="65:/opt/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f18237ba2c0" loc="99:/opt/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f18237b9820" loc="99:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f18237b9b60" loc="99:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f18237ba020" loc="99:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f18237bc020" loc="72:/opt/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f18237c0610" loc="57:/opt/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f18237bfbd0" loc="57:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f18237c0020" loc="57:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f18237c0370" loc="57:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f18237995b0" loc="46:/opt/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f1823799330" loc="46:/opt/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f1823798430" loc="56:/opt/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f1823799e20" loc="56:/opt/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f18237981a0" loc="56:/opt/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f1823745af0" loc="53:/opt/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f182373f4e0" loc="61:/opt/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:/opt/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f182373a610" loc="39:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f1823764e70"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f18237632b0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f1823742350" loc="120:/opt/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f1823743350" loc="97:/opt/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f1823746980" loc="88:/opt/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f1823743b40" loc="102:/opt/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f1823742db0" loc="128:/opt/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f18242d6090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f1823734b70" loc="65:/opt/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f1823734350" loc="59:/opt/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:/opt/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f182372b680" loc="54:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f182372b400" loc="54:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f182372ec00" loc="49:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:/opt/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f1823706af0" loc="213:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f18242d6090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f1823712790" loc="143:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f182371e530" loc="50:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1823793d80"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f1823792650"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f182371e2b0" loc="50:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1823793d80"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f1823792650"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f1823714870" loc="123:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f182371ca40" loc="70:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f182378ed60"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f182378d650"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f182371c7c0" loc="70:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f182378ed60"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f182378d650"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f182370be70" loc="180:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f1823707480" loc="197:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f182371c020" loc="65:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1823791c80"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f1823790440"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f182371a270" loc="75:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f182378ed60"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f182378d650"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f1823717020" loc="97:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f18242d6090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f1823718d30" loc="97:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f18242d6090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f1823718610" loc="95:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f182370b740" loc="179:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f182371d780" loc="60:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1823791c80"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f1823790440"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f182371d500" loc="60:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1823791c80"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f1823790440"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f1823719420" loc="85:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f182370a5d0" loc="181:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f1823719e00" loc="90:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f1823719b80" loc="90:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f1823715910" loc="113:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f18242d6090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f18237140e0" loc="118:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f18242d6090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f182370c840" loc="177:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f182370f790" loc="163:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f18242d6090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f18237137e0" loc="133:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f182370b020" loc="178:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f1823710020" loc="148:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f182370acf0" loc="182:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f1823717800" loc="103:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f182379bd10"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f1823794460"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f18237094c0" loc="187:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f18242d6090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f1823706350" loc="207:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f182371ac10" loc="80:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f182371a990" loc="80:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1824c31520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f18237054d0" loc="224:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1823705250" loc="224:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f182371ed10" loc="55:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1823793d80"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f1823792650"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f1823713020" loc="128:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f1823710770" loc="153:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f182370c020" loc="174:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f1823764e70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f18237632b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f182370ecf0" loc="174:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f1823764e70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f18237632b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f182370e2a0" loc="168:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f1823776020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f1823776440"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f182370e020" loc="168:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f1823776020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f1823776440"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f1823705d90" loc="231:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f1823709cb0" loc="192:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f18242d6090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f1823715070" loc="108:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f18242d6090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f1823707be0" loc="202:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f182370f020" loc="158:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f1823712020" loc="138:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f1823693390" loc="95:/opt/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1823693be0" loc="105:/opt/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f18236807c0" loc="78:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f182367f020" loc="80:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f18242d6090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f182367bb10" loc="110:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f182367b890" loc="110:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f1823681020" loc="58:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f182367d020" loc="87:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f18242d6090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f182367a490" loc="117:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f182367f760" loc="85:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1823680020" loc="73:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f18242d6090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f182367c770" loc="99:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f18236817c0" loc="66:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f18236830e0" loc="48:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f182367d7a0" loc="92:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f182367b020" loc="101:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f18242d6090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f182367c020" loc="94:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f18242d6090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f1823683810" loc="53:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f18233dba60" loc="44:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f18233da1f0" loc="45:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f18242d6090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f18233ddbb0" loc="42:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f18233d9070" loc="47:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f18242d6090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f18233db350" loc="43:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f18242d6090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f18233da910" loc="46:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f18233e0dd0" loc="40:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f18233dd4c0" loc="41:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f1823381c70" loc="90:/opt/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f18242d6090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f182337e4f0" loc="98:/opt/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f1823369460" loc="39:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f182334f900" loc="56:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f182334ea20" loc="73:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f182334f070" loc="46:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f182334e1f0" loc="65:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f18242d6090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f182334d390" loc="81:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f1823343b60" loc="79:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f182334bb40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f18233438e0" loc="79:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f182334bb40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f1823347b90" loc="53:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f18242d6090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f18233446f0" loc="62:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f18242d6090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f182334bb40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f1823344470" loc="62:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f182334bb40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f1823343030" loc="70:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f182334bb40"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/opt/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/opt/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f18232d54b0" loc="62:/opt/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/opt/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/opt/tinyos-main/tos/interfaces/Queue.nc">
      <documentation loc="33:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f18232729a0" loc="43:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f18232729a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7f182326c120" loc="80:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="74:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f18232729a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7f182326ab70" loc="97:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="90:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f18242cd980"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f18232729a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f182326a8f0" loc="97:/opt/tinyos-main/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f18232729a0"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x7f1824c37c30"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:2"><attribute-ref name="one" ref="0x7f1824c37c30"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7f1823269b30" loc="108:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="99:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f18232729a0"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f18232698b0" loc="108:/opt/tinyos-main/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x7f182326f9e0" loc="57:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="52:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f18242d6090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f182326e990" loc="72:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="67:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f182326cd00" loc="88:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="82:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f18232729a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f182326f270" loc="50:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="45:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f18242d6090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f182326e190" loc="65:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="59:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1824c31160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/opt/tinyos-main/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/opt/tinyos-main/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x7f1823248dd0" loc="49:/opt/tinyos-main/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/opt/tinyos-main/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x7f1823248b50" loc="49:/opt/tinyos-main/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
