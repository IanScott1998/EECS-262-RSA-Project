<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="21:NodeC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f06d6836080"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f06d6a705c0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f06d6a705c0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f06d68b2590"/></to>
    </wire>
    <wire loc="23:NodeC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f06d682d130"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f06d56ca020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f06d56ca020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f06d67c0800"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f06d684bca0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="26:NodeC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7f06d6831970"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f06d67d78a0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f06d67d78a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f06d678b880"/></to>
    </wire>
    <wire loc="29:NodeC.nc">
      <from><interface-ref name="Sender" scoped="" ref="0x7f06d682a980"/></from>
      <to><interface-ref name="SimpleSend" scoped="" ref="0x7f06d5589db0"/></to>
    </wire>
    <wire loc="9:lib/modules/SimpleSendC.nc">
      <from><interface-ref name="SimpleSend" scoped="" ref="0x7f06d5589db0"/></from>
      <to><interface-ref name="SimpleSend" scoped="" ref="0x7f06d48c1560"/></to>
    </wire>
    <wire loc="32:NodeC.nc">
      <from><interface-ref name="CommandHandler" scoped="" ref="0x7f06d6824c00"/></from>
      <to><interface-ref name="CommandHandler" scoped="" ref="0x7f06d5587450"/></to>
    </wire>
    <wire loc="19:lib/modules/CommandHandlerC.nc">
      <from><interface-ref name="CommandHandler" scoped="" ref="0x7f06d5587450"/></from>
      <to><interface-ref name="CommandHandler" scoped="" ref="0x7f06d5580150"/></to>
    </wire>
    <wire loc="35:NodeC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f06d6819960"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f06d5552e10"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f06d5552e10"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f06d58cd2c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:NodeC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f06d6815200"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f06d5549420"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f06d5549420"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f06d5999610"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f06d6a6fa90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f06d5164360"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f06d6a6fa90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f06d469d3b0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f06d6a6fa90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f06d54c5550"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f06d6a6fa90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f06d5191c10"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-main/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f06d6a6fa90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f06d47ee960"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-main/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f06d6a6fa90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f06d48131b0"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f06d6a6fa90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f06d57a1dd0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f06d6a6fa90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f06d582ab70"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f06d6a6fa90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f06d5849750"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f06d6a6fa90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f06d586a080"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f06d6a6fa90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f06d599f130"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f06d6a6fa90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f06d5a9e620"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f06d6a6fa90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f06d5b8dc60"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f06d6a6fa90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f06d65f77e0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f06d6a6fa90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f06d4ad5810"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f06d6a6fa90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f06d609b020"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f06d6a6fa90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f06d66ad4a0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f06d68b2c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f06d6f113a0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f06d6f113a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f06d6abc140"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f06d68a56c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f06d6a72a70"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f06d6a72a70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f06d6a6dc80"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f06d68a5dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f06d6a6fa90"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f06d6a6a430"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f06d6a6b3a0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f06d6a6b3a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f06d6a492a0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f06d6a6ab10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f06d6a63020"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f06d6a69380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f06d5e94c40"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f06d6a492a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f06d6a32020"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f06d6a42850"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f06d6a326d0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f06d6d6f080"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f06d6a319a0"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f06d69ee730"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f06d692a6d0"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f06d69db020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f06d6923b30"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f06d69e5700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f06d6930160"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f06d69c8a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f06d6909cb0"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f06d69ecc10"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f06d6931480"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f06d69ce020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f06d6909020"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f06d69c5a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f06d68f2cb0"/></to>
    </wire>
    <wire loc="154:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f06d69d65a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f06d6903220"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f06d69efd60"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f06d69809d0"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f06d69caa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f06d69182f0"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f06d69d03e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f06d6919610"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f06d69da5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f06d691a220"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f06d69e3700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f06d69287a0"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f06d69c7a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f06d69012f0"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f06d69d9be0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f06d69136d0"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f06d69eba20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f06d6929ac0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f06d69f61b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f06d698e540"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f06d69ceda0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f06d6902610"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f06d69f5220"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f06d6932020"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f06d69d4a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f06d68fc6d0"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f06d69de7b0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f06d6938a90"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f06d69c9a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f06d69117a0"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f06d69e7e60"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f06d6939de0"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f06d69cf1f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f06d6912ac0"/></to>
    </wire>
    <wire loc="163:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f06d69c6a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f06d68f97a0"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f06d69d70c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f06d690bb30"/></to>
    </wire>
    <wire loc="120:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f06d69dd6c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f06d69863e0"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f06d69cdb80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f06d68faac0"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f06d69cba20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f06d6921cb0"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f06d69cca20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f06d68f2020"/></to>
    </wire>
    <wire loc="127:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f06d69d1570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f06d6921020"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f06d69d2020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f06d68f4b30"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f06d698c450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f06d698dd80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f06d698caa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f06d68eda90"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f06d698b120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f06d68e9260"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f06d6937930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f06d698e540"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f06d6935020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f06d698dd80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f06d692f020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f06d698e540"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f06d692e7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f06d698dd80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f06d6927610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f06d698e540"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f06d6926c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f06d698dd80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f06d69842f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f06d6985bf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f06d6984940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f06d68e99f0"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f06d6983020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f06d68e8240"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f06d6920b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f06d69863e0"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f06d691e2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f06d6985bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f06d6917160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f06d69863e0"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f06d69167a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f06d6985bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f06d6910610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f06d69863e0"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f06d690fc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f06d6985bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f06d6908b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f06d69863e0"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f06d69062f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f06d6985bf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f06d6900160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f06d69863e0"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f06d68ff7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f06d6985bf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f06d68f8610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f06d69863e0"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f06d68f7c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f06d6985bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f06d68f1b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f06d69863e0"/></to>
    </wire>
    <wire loc="172:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f06d68ef2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f06d6985bf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f06d6f801d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f06d6aba040"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f06d6ab75d0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f06d6ea82d0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f06d56ca5f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f06d67b6a40"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f06d67b6a40"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f06d6786760"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f06d56c8270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f06d67b5780"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f06d67b5780"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f06d6787020"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f06d678b880"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f06d6761020"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f06d67c14f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f06d678a980"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f06d678a980"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f06d5763020"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f06d67b6430"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f06d6788900"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f06d6788900"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f06d5762df0"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f06d6786760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f06d575fa80"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f06d67a9cd0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f06d5a1a550"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f06d5a1a550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f06d5a0ba80"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f06d6798b20"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f06d6778020"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f06d6778020"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f06d674d080"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f06d67c0800"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f06d6789cb0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f06d6789cb0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f06d5762210"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f06d67ac9f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f06d6784810"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f06d6784810"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f06d674e020"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f06d6787020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f06d5761470"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f06d67a3dc0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f06d5a16660"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f06d5a16660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f06d5a08af0"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f06d6761020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f06d5794b80"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f06d677a050"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f06d575d8b0"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f06d676f1d0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f06d575ece0"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f06d677c970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f06d674f020"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f06d674f020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f06d5a1f670"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f06d674d080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f06d5794080"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f06d674e020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f06d5a1c6e0"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f06d6766430"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f06d674db70"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f06d674db70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f06d5780020"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f06d6779a80"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f06d674e9d0"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f06d674e9d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f06d5a1ba70"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7f06d57550f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f06d6760530"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f06d575c860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f06d6759a70"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f06d6759a70"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f06d57fdca0"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f06d575b690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f06d6752840"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f06d6752840"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f06d57fca50"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f06d57574d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f06d5c45b30"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f06d575bce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f06d5a1f670"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f06d5a1f670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f06d5a11d20"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f06d575ab70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f06d5a1b0c0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f06d5a1b0c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f06d5a0d640"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f06d5759610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f06d66b6b80"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f06d66b6b80"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f06d66ac970"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f06d57561f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f06d6747330"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f06d6747330"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f06d67407e0"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f06d5755d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f06d5ec07d0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f06d5ec07d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f06d5eb90c0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f06d5794b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f06d5791d90"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f06d5a1ba70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f06d5a0b020"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f06d5780020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f06d577e410"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f06d57fdca0"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f06d57f2a20"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f06d5794080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f06d578d2d0"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f06d675a690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f06d57fd5f0"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f06d57fd5f0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f06d57f2370"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f06d5a1c6e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f06d5a0ec50"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f06d6760530"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f06d5800cb0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f06d5800cb0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f06d57f57b0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f06d6750940"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f06d57fe960"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f06d57fe960"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f06d57f44d0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f06d675ad50"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f06d57fb170"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f06d57fb170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f06d57f0020"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f06d57fca50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f06d57f1840"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f06d5791d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f06d6749390"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f06d6749390"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f06d6746e80"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f06d57fa6b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f06d584e220"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f06d584e220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f06d584ca20"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f06d584d020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f06d5783350"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f06d5783350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f06d5780d70"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f06d5780d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f06d5798cf0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f06d5798cf0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f06d5792860"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f06d5792860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f06d6749e80"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f06d6749e80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f06d6742990"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f06d57fa020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f06d5795980"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f06d5795980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f06d5791690"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f06d5791690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f06d5832aa0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f06d5832aa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f06d582ee30"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f06d582f950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f06d6748b40"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f06d6748b40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f06d5aa27c0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f06d5aa27c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f06d5a9c020"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f06d673f640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f06d66c6720"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f06d66c6720"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f06d66adb10"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f06d6738b50"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f06d66c1a60"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f06d66c1a60"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f06d66aa740"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f06d6734760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f06d5b9d6c0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f06d6734760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f06d5aa55c0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f06d5aa55c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f06d5a9eca0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f06d5b9d6c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f06d5b8b320"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f06d672d2a0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f06d5b9a020"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f06d5b9a020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f06d5b8bbc0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f06d6735060"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f06d5b9acb0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f06d5b9acb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f06d5b8a970"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f06d672a1a0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f06d5a1f670"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f06d6718790"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f06d5a1b0c0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f06d6729420"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f06d5870a20"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f06d5870a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f06d5869a20"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f06d6713e40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f06d5872aa0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f06d5872aa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f06d60a0280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f06d671f9a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f06d5ec07d0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f06d670e9e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f06d6f801d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f06d670fa10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f06d6f801d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f06d6710a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f06d6f801d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f06d66b4020"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f06d66a9b40"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f06d669dd90"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f06d65f4220"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f06d65f4220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f06d65eed20"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f06d6695e80"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f06d64ef060"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f06d64ef060"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f06d62bdb60"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f06d66980f0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f06d64ec9c0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f06d64ec9c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f06d62afd70"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f06d6693380"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f06d64e9020"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f06d64e9020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f06d62a4710"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f06d668ed70"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f06d628ed60"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f06d628ed60"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f06d616ea30"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f06d667bc40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f06d5cd1e20"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f06d5cd1e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f06d6121960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f06d667acf0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f06d5cce7b0"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f06d5cce7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f06d667d430"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f06d5cccae0"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f06d5cccae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f06d667b520"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f06d5ccfad0"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f06d5ccfad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f06d667db60"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f06d5ccb160"/></to>
    </wire>
    <wire loc="136:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f06d5ccb160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f06d6681690"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f06d5cc1870"/></to>
    </wire>
    <wire loc="154:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f06d5cc1870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f06d6688020"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f06d5cbf880"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f06d5cbf880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f06d66888d0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f06d5cbd0a0"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f06d5cbd0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f06d66831f0"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f06d5cc8e50"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f06d5cc8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f06d6683ac0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f06d5cc6670"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f06d5cc6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f06d668d020"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f06d5cb0500"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f06d5cb0500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f06d66845b0"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f06d5cb2ce0"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f06d5cb2ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f06d667f3d0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f06d5cc2e50"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f06d5cc2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f06d667fc70"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f06d5cc6e50"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f06d5cc6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f06d667e550"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f06d5cc3e50"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f06d5cc3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f06d6678880"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f06d5c9ea80"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f06d5c9ea80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f06d6121960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f06d6679a10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f06d5c729e0"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f06d5c729e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f06d6121960"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f06d66894b0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f06d5c45b30"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f06d66a6020"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f06d5c44d30"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-main/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f06d5c44d30"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f06d5c29310"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f06d666c2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f06d6f801d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f06d666e410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f06d6f801d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f06d65f77e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f06d65ee490"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f06d65ee490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f06d4fab060"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f06d65eed20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f06d4fab8b0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f06d4fab060"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f06d4fa3020"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f06d4fab8b0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f06d4f9da90"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f06d4fa3020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f06d4f87a30"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f06d4f96210"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f06d4fa3870"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f06d4fa3870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f06d4f86340"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f06d4f9ae10"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f06d657a020"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f06d657a020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f06d653e0f0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f06d4f834c0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f06d4f8d570"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f06d4f8d570"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f06d65cf4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f06d4f82a90"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f06d4f8cc10"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f06d4f8cc10"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f06d65cd280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f06d4f81da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f06d4f8a020"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f06d4f8a020"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f06d65ccba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f06d65cf4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f06d69dd6c0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f06d65cd280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f06d69db020"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f06d65ccba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f06d69d1570"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f06d65cf4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f06d69dd6c0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f06d65cd280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f06d69d9be0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f06d65ccba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f06d69cf1f0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f06d65cf4d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f06d69dd6c0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f06d65cd280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f06d69d70c0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f06d65ccba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f06d69ce020"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f06d65cf4d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f06d69dd6c0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f06d65cd280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f06d69d65a0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f06d65ccba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f06d69ceda0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f06d65cf4d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f06d69dd6c0"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f06d65cd280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f06d69d4a50"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f06d65ccba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f06d69cdb80"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f06d65cf4d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f06d69dd6c0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f06d65cd280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f06d69d2020"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f06d65ccba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f06d69cca20"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f06d653b540"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f06d6571020"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f06d6571020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f06d656c0a0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f06d655d2c0"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f06d69dd6c0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f06d64ee380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f06d62b8710"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f06d64ed6b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f06d62b31d0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f06d65f5e40"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f06d62d1020"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f06d64ebcd0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f06d62a9b60"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f06d62c02f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f06d64d3020"/></to>
    </wire>
    <wire loc="442:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f06d64d3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d6407100"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f06d62bcde0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7f06d64a6200"/></to>
    </wire>
    <wire loc="473:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f06d64a6200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d639ee00"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f06d62b7930"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f06d64d5020"/></to>
    </wire>
    <wire loc="441:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f06d64d5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d640c740"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f06d62b2480"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f06d64e4020"/></to>
    </wire>
    <wire loc="438:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f06d64e4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d641b6d0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f06d62ac020"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7f06d649e200"/></to>
    </wire>
    <wire loc="477:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f06d649e200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d638b740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f06d62a8de0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f06d64a8200"/></to>
    </wire>
    <wire loc="472:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f06d64a8200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d63a2460"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f06d62a3930"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7f06d64a0200"/></to>
    </wire>
    <wire loc="476:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f06d64a0200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d6390d10"/></to>
    </wire>
    <wire loc="455:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f06d64be020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d63d8d10"/></to>
    </wire>
    <wire loc="531:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f06d6475560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d63c9d10"/></to>
    </wire>
    <wire loc="551:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f06d6450570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d633e100"/></to>
    </wire>
    <wire loc="532:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f06d6473580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d63c4740"/></to>
    </wire>
    <wire loc="460:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f06d64ba020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d63ce100"/></to>
    </wire>
    <wire loc="486:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f06d6491200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d636e740"/></to>
    </wire>
    <wire loc="497:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f06d6481200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d6348d10"/></to>
    </wire>
    <wire loc="535:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f06d646d580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d63bbd10"/></to>
    </wire>
    <wire loc="545:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f06d645c570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d635a100"/></to>
    </wire>
    <wire loc="557:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f06d6448580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d633ad10"/></to>
    </wire>
    <wire loc="445:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f06d64cd020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d63f9100"/></to>
    </wire>
    <wire loc="536:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f06d646b580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d63b6740"/></to>
    </wire>
    <wire loc="450:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f06d64c9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d63ef740"/></to>
    </wire>
    <wire loc="463:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f06d64b4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d63bf100"/></to>
    </wire>
    <wire loc="489:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f06d648b200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d6360740"/></to>
    </wire>
    <wire loc="500:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f06d647b200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d633ad10"/></to>
    </wire>
    <wire loc="440:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f06d64d7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d6411d10"/></to>
    </wire>
    <wire loc="453:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f06d64c2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d63e1860"/></to>
    </wire>
    <wire loc="466:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f06d64ae020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d63b1100"/></to>
    </wire>
    <wire loc="530:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f06d6477580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d63c9d10"/></to>
    </wire>
    <wire loc="548:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f06d6456570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d634c100"/></to>
    </wire>
    <wire loc="555:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f06d644a570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d633ad10"/></to>
    </wire>
    <wire loc="541:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f06d6462580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d6373d10"/></to>
    </wire>
    <wire loc="471:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f06d64aa020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d63a8a60"/></to>
    </wire>
    <wire loc="484:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f06d6495200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d6377100"/></to>
    </wire>
    <wire loc="495:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f06d6485200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d6351740"/></to>
    </wire>
    <wire loc="549:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f06d6454570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d6348d10"/></to>
    </wire>
    <wire loc="538:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f06d6469570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d6381d10"/></to>
    </wire>
    <wire loc="443:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f06d64d1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d6403d10"/></to>
    </wire>
    <wire loc="456:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f06d64bc020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d63d3740"/></to>
    </wire>
    <wire loc="493:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f06d6489200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d635a100"/></to>
    </wire>
    <wire loc="461:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f06d64b8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d63c9d10"/></to>
    </wire>
    <wire loc="474:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f06d64a4200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d6399740"/></to>
    </wire>
    <wire loc="487:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f06d648f200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d6369100"/></to>
    </wire>
    <wire loc="498:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f06d647f200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d6343740"/></to>
    </wire>
    <wire loc="540:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f06d6464580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d6377100"/></to>
    </wire>
    <wire loc="451:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f06d64c7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d63ea100"/></to>
    </wire>
    <wire loc="464:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f06d64b2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d63bbd10"/></to>
    </wire>
    <wire loc="542:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f06d6460580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d63b1100"/></to>
    </wire>
    <wire loc="546:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f06d645a570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d6356d10"/></to>
    </wire>
    <wire loc="552:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f06d644e570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d633ad10"/></to>
    </wire>
    <wire loc="482:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f06d649a200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d6381d10"/></to>
    </wire>
    <wire loc="543:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f06d645e580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d63add10"/></to>
    </wire>
    <wire loc="454:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f06d64c0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d63dc270"/></to>
    </wire>
    <wire loc="467:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f06d64ac020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d63add10"/></to>
    </wire>
    <wire loc="539:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f06d6467580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d637c740"/></to>
    </wire>
    <wire loc="550:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f06d6452570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d6343740"/></to>
    </wire>
    <wire loc="485:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f06d6493200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d6373d10"/></to>
    </wire>
    <wire loc="496:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f06d6483200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d634c100"/></to>
    </wire>
    <wire loc="444:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f06d64cf020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d63fe740"/></to>
    </wire>
    <wire loc="494:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f06d6487200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d6356d10"/></to>
    </wire>
    <wire loc="449:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f06d64cb020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d63f5d10"/></to>
    </wire>
    <wire loc="462:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f06d64b6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d63c4740"/></to>
    </wire>
    <wire loc="475:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f06d64a2200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d6394100"/></to>
    </wire>
    <wire loc="488:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f06d648d200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d6365d10"/></to>
    </wire>
    <wire loc="499:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f06d647d200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d633e100"/></to>
    </wire>
    <wire loc="439:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f06d64d9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d6416100"/></to>
    </wire>
    <wire loc="452:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f06d64c4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d63e6d10"/></to>
    </wire>
    <wire loc="465:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f06d64b0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d63b6740"/></to>
    </wire>
    <wire loc="478:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f06d649c200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d6386100"/></to>
    </wire>
    <wire loc="534:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f06d646f560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d63bf100"/></to>
    </wire>
    <wire loc="547:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f06d6458570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d6351740"/></to>
    </wire>
    <wire loc="533:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f06d6471580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d63bf100"/></to>
    </wire>
    <wire loc="483:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f06d6498200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d637c740"/></to>
    </wire>
    <wire loc="554:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f06d644c570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d633e100"/></to>
    </wire>
    <wire loc="558:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f06d6446580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d6360740"/></to>
    </wire>
    <wire loc="529:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f06d64791f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f06d63ce100"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f06d628e150"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f06d6286a20"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f06d628da20"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f06d615ea70"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f06d62735d0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7f06d69da5a0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7f06d62728f0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7f06d69caa20"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f06d62717a0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f06d64a8200"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f06d616d610"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f06d62603f0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f06d62603f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f06d624c3f0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f06d615d610"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f06d62633d0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f06d62633d0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f06d62503b0"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f06d6256580"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7f06d6241580"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f06d625d3f0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f06d62493f0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f06d625b3f0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7f06d62473f0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f06d62673f0"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f06d624e3f0"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f06d62583f0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f06d62433f0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f06d625f3f0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f06d624b3f0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f06d6255580"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f06d6240580"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f06d625a3f0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7f06d62453f0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f06d62623f0"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f06d624d3f0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f06d6257580"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7f06d6242580"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f06d625e3f0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f06d624a3f0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f06d625c3f0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f06d62483f0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f06d62683f0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7f06d624f3f0"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f06d62593f0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7f06d62443f0"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f06d5cce160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f06d5cc0880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f06d5cb80a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f06d5cbf0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f06d5cac500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f06d5cae500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f06d5ccc490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f06d5cb4880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f06d5caf500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f06d5cba880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f06d5cbb0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f06d5cd0a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f06d611e680"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f06d611e680"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f06d6118930"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f06d5ccbe00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f06d5cca490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f06d5cb3c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f06d5ccabe0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f06d5cafce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f06d5cb40a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f06d5cc3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f06d5cb50a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f06d5cb8880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f06d5cb5880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f06d5cadce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f06d5caece0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f06d5cbb880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f06d5cb60a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f06d5cb0ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f06d5cbd880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f06d5cacce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f06d611d630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f06d5ccf480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f06d5cc8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f06d5cc2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f06d5cb90a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f06d5cb9880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f06d5cc00a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f06d5cc92f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f06d5cc8020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f06d5ccb7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f06d5cb2500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f06d5cad500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f06d5cba0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f06d5cb6880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f06d5ccee00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f06d5cbc0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f06d5cc9940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f06d5cbc880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f06d5cb30a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f06d5cab9b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f06d611d630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f06d611d630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f06d6114bb0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d6111020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d6111db0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f06d6121960"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f06d6115810"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6110ba0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f06d610c020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f06d60a4770"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f06d60a4770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f06d60a0280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f06d610f400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f06d6082c40"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f06d6082c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f06d4b71e70"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f06d610d080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f06d60818f0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f06d60818f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f06d4b6e2c0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f06d6103680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f06d5cf9020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f06d5cf9020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f06d4b6c440"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f06d610cdf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f06d5ec07d0"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f06d60fe120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f06d6f801d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-main/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f06d60a0280"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f06d609bb70"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f06d4b6c440"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f06d6011510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f06d4b6e2c0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f06d6014dd0"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f06d4b71e70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f06d601aa20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f06d4b6faf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f06d4b645d0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f06d4b645d0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f06d5e5a8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f06d6014dd0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f06d5f97440"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f06d4b6e8d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f06d6013480"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f06d6013480"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f06d5f97a50"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f06d600e600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f06d4b6cbe0"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f06d4b55a80"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f06d60145e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f06d6010370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f06d4b65860"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f06d4b65860"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f06d5e5b5c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f06d60096a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f06d4b5e020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f06d4b5e020"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f06d5e5fa80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f06d60145e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f06d5f98c40"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f06d6011510"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f06d5f96700"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f06d601aa20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f06d5f99e80"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f06d5f95e00"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f06d600e600"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f06d5f95060"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f06d6010370"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f06d5f90de0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f06d60096a0"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f06d5f94490"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f06d5f87860"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f06d5f87860"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f06d5f7b060"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f06d5f8f5a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f06d5ec07d0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7f06d5f8ec50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f06d6f801d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f06d5f7d980"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f06d5f76750"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f06d5f803b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f06d5f77dc0"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f06d5f48700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f06d6477580"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f06d5f46670"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7f06d6473580"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f06d5f44670"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f06d6471580"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f06d5f42670"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7f06d646b580"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f06d5f40670"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7f06d646d580"/></to>
    </wire>
    <wire loc="14:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7f06d5f4d5b0"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f06d5db3430"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f06d5e94c40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f06d5ebca80"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f06d5eb8870"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f06d5e97360"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f06d5e97360"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f06d5e92440"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f06d5eb7b10"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f06d5e966a0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f06d5e966a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f06d5e8d020"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f06d5eb6e30"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f06d5e959c0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f06d5e959c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f06d5e89b90"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f06d5e91610"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f06d6491200"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f06d5e8c2f0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f06d648f200"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f06d5e88de0"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f06d648d200"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f06d4b5e7c0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f06d5e5c9a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f06d4b5edd0"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f06d5dbf880"/></to>
    </wire>
    <wire loc="11:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f06d5dbf880"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f06d5db3430"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f06d4b635a0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f06d5f87860"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f06d4b64d70"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f06d5e58130"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f06d5e58130"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f06d5dc7060"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f06d5e57020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f06d4b55a80"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f06d5e5a8a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f06d5dc9bf0"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f06d5dc9bf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f06d4ad2d80"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f06d5e5fa80"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f06d5e555c0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f06d5e5b5c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f06d5dcae60"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f06d5dcae60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f06d4ad2020"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7f06d5e5c9a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f06d5e44020"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f06d5dc7060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f06d4acf270"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f06d5dc7930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f06d5e57020"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f06d5e424b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f06d5dc7060"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f06d5e44690"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f06d5f803b0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f06d5e44e70"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f06d5f7d980"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f06d5dc8400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f06d4ad0560"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f06d4acfb60"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f06d5dc7930"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f06d4ace440"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f06d4ad5e20"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f06d4acc7a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f06d6f801d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7f06d5dac250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f06d5f7b060"/></to>
    </wire>
    <wire loc="18:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f06d5da8d40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f06d6477580"/></to>
    </wire>
    <wire loc="19:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f06d5da6cb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f06d6471580"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f06d5c91c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f06d5c9cda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f06d5c95b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f06d5c8f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f06d5c88e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f06d5c8fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f06d5c7b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f06d5c7e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f06d5c9a120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f06d5c83670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f06d5c7f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f06d5c94c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f06d5c93c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f06d5c89670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f06d5c8ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f06d5c8e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f06d5c9d760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f06d611e680"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f06d5c99aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f06d5c97120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f06d5c82a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f06d5c97870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f06d5c7fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f06d5c9adc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f06d5c85e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f06d5c93480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f06d5c94480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f06d5c9c750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f06d5c86e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f06d5c87670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f06d5c85670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f06d5c7cad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f06d5c7ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f06d5c8a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f06d5c87e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f06d5c80ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f06d5c8d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f06d5c7bad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f06d611d630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f06d5c9c100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f06d5c95370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f06d5c91480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f06d5c89e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f06d5c8ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f06d5c88670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f06d5c90670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f06d5c9b450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f06d5c90e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f06d5c96020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f06d5c96cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f06d5c802f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f06d5c81ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f06d5c99450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f06d5c812f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f06d5c7c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f06d5c8ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f06d5c86670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f06d5c9baa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f06d5c9a770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f06d5c8de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f06d5c96670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f06d5c8c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f06d5c83e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f06d5c7a7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f06d611d630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f06d5c65c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f06d5c70da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f06d5c68b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f06d5c63670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f06d5c5ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f06d5c63e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f06d5c4f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f06d5c512f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f06d5c6d120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f06d5c57670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f06d5c522f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f06d5c67c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f06d5c66c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f06d5c5d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f06d5c5fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f06d5c61670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f06d5c71760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f06d611e680"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f06d5c6caa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f06d5c6b120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f06d5c56a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f06d5c6b870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f06d5c52ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f06d5c6ddc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f06d5c58e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f06d5c66480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f06d5c67480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f06d5c70750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f06d5c59e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f06d5c5a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f06d5c58670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f06d5c50ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f06d5c51ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f06d5c5e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f06d5c5ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f06d5c53ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f06d5c60670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f06d5c4fad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f06d611d630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f06d5c70100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f06d5c68370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f06d5c65480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f06d5c5de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f06d5c61e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f06d5c5c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f06d5c64670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f06d5c6f450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f06d5c64e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f06d5c6a020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f06d5c6acc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f06d5c532f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f06d5c55ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f06d5c6c450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f06d5c552f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f06d5c502f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f06d5c5ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f06d5c59670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f06d5c6faa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f06d5c6d770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f06d5c60e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f06d5c6a670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f06d5c5f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f06d5c57e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f06d5c4e7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f06d611d630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:/opt/tinyos-main/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f06d5c26880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f06d5c1b020"/></to>
    </wire>
    <wire loc="20:/opt/tinyos-main/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f06d5c1b020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f06d5c16140"/></to>
    </wire>
    <wire loc="16:/opt/tinyos-main/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f06d5c11bd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f06d5c1ac60"/></to>
    </wire>
    <wire loc="21:/opt/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f06d5c1ac60"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f06d5bfd200"/></to>
    </wire>
    <wire loc="17:/opt/tinyos-main/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7f06d5c15530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f06d5bb4a20"/></to>
    </wire>
    <wire loc="18:/opt/tinyos-main/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f06d5c01540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7f06d5c02590"/></to>
    </wire>
    <wire loc="11:/opt/tinyos-main/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7f06d5c02590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f06d5bb19e0"/></to>
    </wire>
    <wire loc="18:/opt/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f06d5bf8950"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f06d5bffca0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f06d5bffca0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f06d5bd5a90"/></to>
    </wire>
    <wire loc="19:/opt/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f06d5bfdaa0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7f06d5c01540"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f06d5bc5020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f06d5bbf530"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f06d5bbf530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f06d5bbbe50"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f06d5bb8020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7f06d69f61b0"/></to>
    </wire>
    <wire loc="9:/opt/tinyos-main/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f06d5bb0c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f06d64c2020"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f06d5b969f0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f06d5b89900"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f06d5b98190"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f06d5b880f0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f06d5b88ae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f06d65f4220"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f06d5b7c500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f06d65f5e40"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f06d5b75820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f06d64ef060"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f06d5b73b40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f06d64ebcd0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f06d5b7d880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f06d628e150"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f06d5b71020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f06d5ad6c30"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f06d5ad6c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f06d6121960"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f06d5b71d10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f06d5ad58f0"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f06d5ad58f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f06d611e680"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f06d5b6e6d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f06d5ad42f0"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f06d5ad42f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f06d5b6ede0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f06d5ad3cc0"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f06d5ad3cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f06d5b6d530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f06d5ad1370"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f06d5ad1370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f06d5b6dc60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f06d5ad0d00"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f06d5ad0d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f06d5b6fe00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f06d5acac60"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f06d5acac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f06d5b70780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f06d5ab27a0"/></to>
    </wire>
    <wire loc="196:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f06d5ab27a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f06d611d630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f06d5b6f550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f06d5ab62f0"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f06d5ab62f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f06d5b6c3e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f06d5acb480"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f06d5acb480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f06d5b6b5e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f06d5ac8e50"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f06d5ac8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f06d5b6a020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f06d5ac7670"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f06d5ac7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f06d5b6ce80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f06d5ace7b0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f06d5ace7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f06d5b699c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f06d5ab4ad0"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f06d5ab4ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f06d5b6a890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f06d5ab52f0"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f06d5ab52f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f06d5b69130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f06d5ab5ad0"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f06d5ab5ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f06d5b63d40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f06d5aa5df0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f06d5aa5df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f06d5a9d550"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f06d5b84d00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f06d5a1f670"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f06d5b83bb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f06d5a1b0c0"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f06d5b82950"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f06d5a1a550"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f06d5b77be0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f06d5a12480"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f06d5a12480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f06d5a048b0"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f06d5b676c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f06d5ec07d0"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f06d5ac9c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f06d5ad3020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f06d5accc70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f06d5ac0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f06d5ac7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f06d5ab32f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f06d5abb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f06d5acbc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f06d5ac1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f06d5ac3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f06d5ac5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f06d5acf370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f06d5abaa70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f06d5acfac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f06d5ab6ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f06d5ad0060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f06d5abce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f06d5aca480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f06d5ad4940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f06d5abde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f06d5abe670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f06d5abc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f06d5ac2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f06d5abee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f06d5ab7ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f06d5ac4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f06d5ab3ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f06d611d630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f06d5acc490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f06d5ac9480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f06d5ac1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f06d5ac5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f06d5ac0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f06d5ac8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f06d5ad3670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f06d5ace160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f06d5acee00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f06d5ab72f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f06d5ab9ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f06d5ad06b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f06d5ab92f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f06d5ab42f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f06d5ac2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f06d5abd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f06d5ad19c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f06d5ac4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f06d5ac3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f06d5abbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f06d5aa1020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f06d5a9c7c0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f06d5a87150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f06d5ec07d0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f06d5a9b020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f06d64ef060"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f06d5a9a380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f06d64ee380"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f06d5a996b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f06d64ed6b0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f06d5a98a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f06d628da20"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f06d5a976e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f06d58bed00"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f06d58bed00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f06d6121960"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f06d5a96530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f06d589aad0"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f06d589aad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f06d611d630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f06d5a95ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f06d58b86b0"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f06d58b86b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f06d5a953a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f06d58b7370"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f06d58b7370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f06d5a94330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f06d5a1f670"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f06d5a931e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f06d5a1b0c0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f06d5a91d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f06d5a1a550"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f06d5a93b90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f06d66b6b80"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f06d5a8b3e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f06d58afe50"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f06d58afe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f06d5a8bcb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f06d58ae670"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f06d58ae670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f06d5a8db10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f06d58b5160"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f06d58b5160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f06d5a896d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f06d589a2f0"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f06d589a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f06d5a8a590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f06d589d2f0"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f06d589d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f06d5a8ae00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f06d589dad0"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f06d589dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f06d5a88020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f06d589ead0"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f06d589ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f06d5a888b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f06d58bb300"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f06d58bb300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f06d5a7b9d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f06d6f801d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f06d59a6690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f06d657a020"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f06d5a013b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f06d59ae2b0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f06d5a006e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f06d5999610"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f06d5999610"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f06d58e02b0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f06d599e020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f06d58ee150"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f06d599f130"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f06d596a020"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f06d596a020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f06d49a09d0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f06d58e9640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f06d593e2f0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f06d5939850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f06d596a870"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f06d596a870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f06d49995f0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f06d58df690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f06d5989b70"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f06d5989b70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f06d5981610"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f06d49a09d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f06d4984360"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f06d4993d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f06d499f260"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f06d499f260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f06d4984bf0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f06d49969b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f06d5989b70"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f06d4980dd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f06d4989020"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f06d4989020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f06d65cf4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f06d497e440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f06d4988760"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f06d4988760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f06d65cd280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f06d497d760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f06d4987a80"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f06d4987a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f06d65ccba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f06d597eb90"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f06d6571020"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f06d59359c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f06d6f801d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f06d58e3a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f06d6f801d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f06d58d68c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f06d58cd2c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f06d58cd2c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f06d599e020"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f06d58b1c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f06d58ba020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f06d58b4c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f06d58a7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f06d58aee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f06d58b9370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f06d58a3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f06d589e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f06d58b3c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f06d58b2c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f06d58a8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f06d58abe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f06d58ad670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f06d58bd970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f06d611e680"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f06d58b8d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f06d58a1a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f06d58b7ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f06d58b8060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f06d58a4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f06d58b2480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f06d58b3480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f06d58bb950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f06d58a5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f06d58a6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f06d58a4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f06d589cad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f06d58aa670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f06d58a6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f06d589fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f06d58ac670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f06d58b4490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f06d58b1480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f06d58a8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f06d58ade50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f06d58a7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f06d58af670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f06d58ba670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f06d58b5e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f06d589f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f06d58a0ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f06d58a02f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f06d589c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f06d58aae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f06d58a5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f06d58bacc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f06d58b99c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f06d58ace50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f06d58b57b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f06d58ab670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f06d58a3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f06d58997a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f06d611d630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f06d586e920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f06d586a940"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f06d58749a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f06d586a080"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f06d5849e60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f06d584d020"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f06d5848ae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f06d584a690"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f06d584a690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f06d60a0280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f06d58478f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f06d5870a20"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f06d5846170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f06d5a1b0c0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f06d582f200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f06d582a570"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f06d58293f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f06d582f950"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f06d5829a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f06d5a1b0c0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f06d57f0d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f06d57fa6b0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f06d57efb10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f06d57fa020"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f06d57ee2f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f06d5a1f670"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f06d57ed170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f06d5a1b0c0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f06d57edb70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f06d57a0410"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f06d57c1db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f06d6f801d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f06d5793800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f06d578f580"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f06d578f580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f06d60a0280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f06d577b1c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f06d674e020"/></to>
    </wire>
    <wire loc="16:lib/modules/SimpleSendC.nc">
      <from><interface-ref name="sendTimer" scoped="" ref="0x7f06d48b8220"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f06d48a9370"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f06d48a9370"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f06d58cd2c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="17:lib/modules/SimpleSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f06d48ae440"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f06d5870a20"/></to>
    </wire>
    <wire loc="19:lib/modules/SimpleSendC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f06d48b3450"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f06d48a2930"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f06d48a2930"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f06d4868c70"/></to>
    </wire>
    <wire loc="20:lib/modules/SimpleSendC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f06d48b20e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f06d48a1590"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f06d48a1590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f06d48678b0"/></to>
    </wire>
    <wire loc="21:lib/modules/SimpleSendC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f06d48b1760"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f06d48a3cf0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f06d48a3cf0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f06d4868060"/></to>
    </wire>
    <wire loc="27:lib/modules/SimpleSendC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f06d48bc7f0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f06d489c240"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f06d489c240"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f06d48138a0"/></to>
    </wire>
    <wire loc="28:lib/modules/SimpleSendC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f06d48c1cd0"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f06d4897200"/></to>
    </wire>
    <wire loc="74:lib/modules/SimpleSendP.nc">
      <from><interface-ref name="sendBufferTask" scoped="" ref="0x7f06d48aec20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f06d6f801d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f06d4868060"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f06d485b9e0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f06d4868c70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f06d67b6a40"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f06d48678b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f06d67b5780"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f06d48a0c10"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f06d4864020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f06d4864020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f06d67ac9f0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f06d485a780"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f06d56402c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f06d4859400"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f06d67b5780"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f06d56402c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f06d55f5b00"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f06d55f4a40"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f06d67c14f0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f06d55f3720"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f06d67b5780"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f06d55f2d60"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f06d67b6a40"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f06d55f1a90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f06d6f801d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f06d55f02f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f06d6f801d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:lib/modules/CommandHandlerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f06d557f490"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f06d5565060"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f06d5565060"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f06d67c0800"/>
      <arguments>
        <value cst="I:99">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f06d684bca0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:lib/modules/CommandHandlerC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f06d557fc50"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f06d5560d30"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f06d5560d30"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f06d47ed0b0"/></to>
    </wire>
    <wire loc="28:lib/modules/CommandHandlerC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f06d557c6c0"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f06d555a020"/></to>
    </wire>
    <wire loc="31:lib/modules/CommandHandlerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f06d5576160"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f06d67b6a40"/></to>
    </wire>
    <wire loc="22:lib/modules/CommandHandlerP.nc">
      <from><interface-ref name="processCommand" scoped="" ref="0x7f06d5575920"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f06d6f801d0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f06d5565630"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f06d67b6a40"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f06d5563270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f06d67b5780"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f06d518bbf0"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f06d5198e10"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f06d51886d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f06d519d020"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f06d519d020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f06d47c8830"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f06d5187440"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f06d519dc30"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f06d519dc30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f06d5527470"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f06d5168020"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f06d518b370"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f06d5527470"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f06d54cbd60"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f06d519c8b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f06d5526120"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f06d5526120"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f06d54cc6c0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f06d519a020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f06d5525800"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f06d5525800"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f06d54caa10"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f06d47c75f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f06d5536410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f06d47c6270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f06d5526120"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f06d5536410"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f06d5534dd0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f06d5533be0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f06d5529b10"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f06d5529b10"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f06d5521300"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f06d55328b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f06d5526120"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f06d5530020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f06d5527470"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f06d5530cb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f06d6f801d0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f06d552f500"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f06d6f801d0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f06d552caa0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f06d54c5ba0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f06d54c5ba0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f06d54b77c0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f06d5528e40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f06d54cc0d0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f06d54c5550"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f06d54b7170"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f06d54bf2b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f06d5524300"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f06d54c84a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f06d54c1790"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f06d54c7120"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f06d54c2c60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f06d54ba970"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7f06d51b56c0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f06d54c1790"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f06d5388de0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f06d54c2c60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f06d53886c0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7f06d5386c20"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f06d54ba970"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f06d54a6020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f06d54bf2b0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f06d5384920"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f06d54bf2b0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f06d537acc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f06d54bf2b0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f06d5385590"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f06d54adc40"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7f06d5385e80"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7f06d54b0720"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7f06d54af020"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7f06d5380e10"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f06d54a5860"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f06d5355080"/></to>
    </wire>
    <wire loc="17:/opt/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f06d5355080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f06d51c7080"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f06d5371d20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f06d5355890"/></to>
    </wire>
    <wire loc="13:/opt/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f06d5355890"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f06d51cd800"/></to>
    </wire>
    <wire loc="332:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7f06d54516e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f06d6f801d0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7f06d54884f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f06d6f801d0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7f06d5454c70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f06d6f801d0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f06d544da00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f06d6f801d0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7f06d5382020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f06d6f801d0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7f06d5382800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f06d6f801d0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:/opt/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f06d534fd50"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f06d51cc8f0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f06d51cc8f0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f06d5340370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f06d51cd800"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f06d5343d70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:/opt/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f06d51cb0c0"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f06d51c78e0"/></to>
    </wire>
    <wire loc="19:/opt/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f06d51c6020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f06d51cf3c0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f06d51cf3c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f06d5348d10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f06d51cd060"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f06d47032c0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f06d47032c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f06d520d2c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f06d533e450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f06d51cb0c0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f06d46fd440"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f06d5343020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f06d533f1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f06d4704640"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f06d4704640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f06d520f020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f06d533d1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f06d46fec10"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f06d46fec10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f06d52101d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f06d5343020"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f06d52d7dc0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f06d5340370"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f06d52d5890"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f06d5343d70"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f06d52d66d0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f06d5348d10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f06d52d7020"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f06d52d3020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f06d533e450"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f06d52d4230"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f06d533f1d0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f06d52cd290"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f06d533d1d0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f06d52d3690"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f06d52c18b0"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f06d52c18b0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f06d52b6020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f06d52cdc90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f06d522b110"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f06d522b110"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f06d6571020"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f06d52cbdd0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f06d5ec07d0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f06d52ba3b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f06d52b2dc0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f06d52c1080"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f06d52b9710"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f06d52b16d0"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7f06d6467580"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f06d52af670"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7f06d6464580"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f06d52ad670"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7f06d6462580"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f06d52ab670"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7f06d645e580"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f06d52a9670"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7f06d6460580"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f06d47022b0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f06d52c18b0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f06d4703a60"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f06d520dad0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f06d520dad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f06d5203e80"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f06d520c8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f06d46fd440"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f06d520d2c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f06d52049e0"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f06d52049e0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f06d4699a60"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f06d52101d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f06d520a060"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f06d520f020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f06d5206b60"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f06d5206b60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f06d469ac80"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f06d5203e80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f06d4698e80"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f06d5209060"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f06d52ba3b0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f06d5202770"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f06d520c8a0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f06d5209e50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f06d5203e80"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f06d51e85f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f06d5203270"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f06d5203270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f06d4698270"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f06d51fd880"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f06d52c1080"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f06d4697790"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f06d5202770"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f06d4696020"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f06d469d9c0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f06d4693160"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f06d6f801d0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f06d4664900"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f06d51fd880"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f06d46630e0"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f06d51e8020"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f06d46636b0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f06d51e85f0"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f06d4662400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f06d51e6270"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-main/tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x7f06d51816e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f06d6f801d0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f06d51649c0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f06d5168020"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-main/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f06d515d810"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f06d6a705c0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-main/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f06d515a020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f06d552caa0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/opt/tinyos-main/tos/system/MainC.nc">
      <documentation loc="45:/opt/tinyos-main/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/opt/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/opt/tinyos-main/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/opt/tinyos-main/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/opt/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/opt/tinyos-main/tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/opt/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="Node" loc="20:Node.nc">
      <module/>
    </component>
    <component qname="NodeC.GeneralReceive" loc="43(NodeC.GeneralReceive):/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="59:/opt/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:/opt/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/opt/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/opt/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/opt/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a876a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f06d6a87a10"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/opt/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a876a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f06d6a87a10"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a876a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f06d6a87a10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a876a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f06d6a87a10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a876a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f06d6a87a10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a876a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f06d6a87a10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):/opt/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/opt/tinyos-main/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/opt/tinyos-main/tos/system/StateImplC.nc">
      <documentation loc="32:/opt/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/opt/tinyos-main/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):/opt/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:/opt/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:/opt/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):/opt/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:/opt/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:/opt/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):/opt/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos-main/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos-main/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:/opt/tinyos-main/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:/opt/tinyos-main/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:/opt/tinyos-main/tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:/opt/tinyos-main/tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:/opt/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:/opt/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:/opt/tinyos-main/tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:/opt/tinyos-main/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):/opt/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a87e50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f06d6a86200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):/opt/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a87e50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f06d6a86200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:/opt/tinyos-main/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:/opt/tinyos-main/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/opt/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/opt/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a876a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f06d6a87a10"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/opt/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a876a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f06d6a87a10"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a88ac0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f06d6a87260"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a876a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f06d6a87a10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a88ac0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f06d6a87260"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a876a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f06d6a87a10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a88ac0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f06d6a87260"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a88ac0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f06d6a87260"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a88ac0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f06d6a87260"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/opt/tinyos-main/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/opt/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/opt/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/opt/tinyos-main/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/opt/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/opt/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/opt/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/opt/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/opt/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/opt/tinyos-main/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/opt/tinyos-main/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/opt/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/opt/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NodeC.SimpleSendC" loc="3(NodeC.SimpleSendC):lib/modules/SimpleSendC.nc">
      <instance number="0">
        <component-ref qname="SimpleSendC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.SimpleSendC.SimpleSendP" loc="12(NodeC.SimpleSendC.SimpleSendP):lib/modules/SimpleSendP.nc">
      <documentation loc="1:lib/modules/SimpleSendP.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10;&#10; </short>
        <long>&#10; ANDES Lab - University of California, Merced&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleSendP"/>
      </instance>
      <module/>
    </component>
    <component qname="NodeC.SimpleSendC.sendTimer" loc="44(NodeC.SimpleSendC.sendTimer):/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.SimpleSendC.AMSenderC" loc="47(NodeC.SimpleSendC.AMSenderC):/opt/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.SimpleSendC.AMSenderC.SenderC" loc="47(NodeC.SimpleSendC.AMSenderC.SenderC):/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f06d684bca0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.SimpleSendC.AMSenderC.SenderC.AMQueueEntryP" loc="43(NodeC.SimpleSendC.AMSenderC.SenderC.AMQueueEntryP):/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f06d684bca0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/opt/tinyos-main/tos/system/AMQueueP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NodeC.SimpleSendC.PoolC" loc="41(NodeC.SimpleSendC.PoolC):/opt/tinyos-main/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0x7f06d6897020"/>
            <typename><typedef-ref name="sendInfo" ref="0x7f06d6897ab0"/></typename>
          </type-tag>
          <value cst="I:20">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.SimpleSendC.PoolC.PoolP" loc="53(NodeC.SimpleSendC.PoolC.PoolP):/opt/tinyos-main/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f06d55d96e0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NodeC.SimpleSendC.QueueC" loc="42(NodeC.SimpleSendC.QueueC):/opt/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0x7f06d6897020"/>
              <typename><typedef-ref name="sendInfo" ref="0x7f06d6897ab0"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:20">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CommandHandlerC" loc="13:lib/modules/CommandHandlerC.nc">
      <documentation loc="1:lib/modules/CommandHandlerC.nc">
        <short>&#10; </short>
        <long>&#10; @author UCM ANDES Lab&#10; $Author: abeltran2 $&#10; $LastChangedDate: 2014-08-31 16:06:26 -0700 (Sun, 31 Aug 2014) $&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CommandHandlerP" loc="13:lib/modules/CommandHandlerP.nc">
      <documentation loc="1:lib/modules/CommandHandlerP.nc">
        <short>&#10; </short>
        <long>&#10; @author UCM ANDES Lab&#10; $Author: abeltran2 $&#10; $LastChangedDate: 2014-08-31 16:06:26 -0700 (Sun, 31 Aug 2014) $&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CommandHandlerC.CommandReceive" loc="43(CommandHandlerC.CommandReceive):/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:99">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CommandHandlerC.PoolC" loc="41(CommandHandlerC.PoolC):/opt/tinyos-main/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
            <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
          </type-tag>
          <value cst="I:20">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CommandHandlerC.PoolC.PoolP" loc="53(CommandHandlerC.PoolC.PoolP):/opt/tinyos-main/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f06d55d96e0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CommandHandlerC.QueueC" loc="42(CommandHandlerC.QueueC):/opt/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
              <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:20">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NodeC.TimerMilliC" loc="44(NodeC.TimerMilliC):/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/tinyos-main/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f06d684bca0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/opt/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/opt/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/opt/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:/opt/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <documentation loc="31:/opt/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:/opt/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):/opt/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):/opt/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:/opt/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/opt/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):/opt/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
          <value cst="I:250">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:/opt/tinyos-main/tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:/opt/tinyos-main/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/opt/tinyos-main/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/opt/tinyos-main/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/opt/tinyos-main/tos/lib/printf/PutcharP.nc">
      <documentation loc="64:/opt/tinyos-main/tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/opt/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/lib/serial/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f06d69c0890" loc="40:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f06d69c0c30" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f06d69bf020" loc="42:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f06d69bf3a0" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f06d69bf720" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f06d69bfa90" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f06d69bfe20" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f06d69bd200" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f06d69bd5d0" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f06d6982e70" loc="40:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f06d697f270" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/opt/tinyos-main/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f06d689ab10" loc="43:/opt/tinyos-main/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f06d684bca0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f06d65ad9d0" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f06d65ad9d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/opt/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f06d656b120" loc="42:/opt/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f06d656b120"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f06d655aa60" loc="55:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f06d655aa60"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f06d6557290" loc="56:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f06d6557290"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f06d6557680" loc="57:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f06d6557680"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f06d6557e60" loc="58:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f06d6557e60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f06d6556260" loc="59:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f06d6556a60" loc="60:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f06d6556a60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f06d657ba30" loc="52:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f06d657ba30"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f06d6534290" loc="53:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f06d6534290"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f06d6534680" loc="54:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f06d6534680"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f06d6534e60" loc="55:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f06d6534e60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f06d6533260" loc="56:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f06d64419f0" loc="40:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f06d6441da0" loc="41:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f06d64401a0" loc="42:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f06d6440550" loc="43:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f06d64408c0" loc="44:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="38:/opt/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:/opt/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/opt/tinyos-main/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:/opt/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:/opt/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/opt/tinyos-main/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f06d5e3d020" loc="89:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f06d5e300d0" loc="42:/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/tinyos-main/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f06d5e15800" loc="52:/opt/tinyos-main/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:/opt/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f06d5bd3020" loc="52:/opt/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f06d5bd3020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f06d5bd37b0" loc="52:/opt/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f06d5bd37b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f06d59b0860" loc="46:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f06d59b0860"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f06d5965cc0" loc="46:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f06d5965cc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f06d592f230" loc="46:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f06d592f230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f06d592f560" loc="46:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleSendC" loc="3:lib/modules/SimpleSendC.nc" abstract="">
      <parameters>
        <constant name="channel" ref="0x7f06d56c2110" loc="3:lib/modules/SimpleSendC.nc">
          <component-ref qname="SimpleSendC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleSendP" loc="12:lib/modules/SimpleSendP.nc" abstract="">
      <documentation loc="1:lib/modules/SimpleSendP.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10;&#10; </short>
        <long>&#10; ANDES Lab - University of California, Merced&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/opt/tinyos-main/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f06d56640d0" loc="47:/opt/tinyos-main/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f06d684bca0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/opt/tinyos-main/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f06d565d020" loc="47:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f06d684bca0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f06d5659ac0" loc="43:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f06d684bca0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f06d563e630" loc="45:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:/opt/tinyos-main/tos/system/PoolC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7f06d55d96e0" loc="41:/opt/tinyos-main/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f06d55d96e0"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x7f06d55d9a50" loc="41:/opt/tinyos-main/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/opt/tinyos-main/tos/system/PoolP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-main/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7f06d55d19a0" loc="53:/opt/tinyos-main/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f06d55d19a0"/></type-var>
        </typedef>
        <constant name="size" ref="0x7f06d55d1ce0" loc="53:/opt/tinyos-main/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/opt/tinyos-main/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7f06d55ab020" loc="42:/opt/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7f06d55ab020"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7f06d55ab3a0" loc="42:/opt/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f06d5545480" loc="47:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f06d684bca0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <documentation loc="31:/opt/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/opt/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/opt/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f06d6a6fa90" loc="58:/opt/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f06d6a6fa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d6a6fe10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f06d6a705c0" loc="57:/opt/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f06d6a705c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f06d6a70940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f06d6a72a70" loc="42:/opt/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f06d6a72a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d6a72df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f06d6a6ab10" loc="6:/opt/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f06d6a6ab10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d6a69020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f06d6a6dc80" loc="4:/opt/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f06d6a6dc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d6a6a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f06d6a6a430" loc="5:/opt/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f06d6a6a430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d6a6a7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f06d6a69380" loc="7:/opt/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f06d6a69380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d6a69700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f06d6a63020" loc="2:/opt/tinyos-main/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f06d6a63020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d6a633a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f06d6a6b3a0" loc="39:/opt/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f06d6a6b3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d6a6b720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f06d6a42850" loc="40:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f06d6a42850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f06d6a487f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f06d6a42d60"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f06d6a48020"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f06d6a481b0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f06d6a42bd0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f06d6a48340"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f06d6a484d0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f06d6a48660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f06d6a492a0" loc="39:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f06d6a492a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d6a49620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f06d6a326d0" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f06d6a326d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f06d6a31660"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f06d6a32be0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f06d6a32d70"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f06d6a31020"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f06d6a32a50"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f06d6a311b0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f06d6a31340"/>
        <function-ref name="initClocks" scoped="" ref="0x7f06d6a314d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f06d6a319a0" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f06d6a319a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f06d6a31d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f06d6a32020" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f06d6a32020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d6a323a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f06d69ee730" loc="42:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f06d69ee730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f06d69eeab0"/>
        <function-ref name="getControl" scoped="" ref="0x7f06d69eec40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d69eedd0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f06d69ed020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f06d69ed1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d69ed340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f06d69ed4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f06d69ed660"/>
        <function-ref name="setControl" scoped="" ref="0x7f06d69ed7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f06d69db020" loc="51:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f06d69db020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f06d69db3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f06d69db530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d69db6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f06d69db850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f06d69db9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d69dbb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f06d69dbd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f06d69da020"/>
        <function-ref name="setControl" scoped="" ref="0x7f06d69da1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f06d69e5700" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f06d69e5700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d69e5a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f06d69e5c10"/>
        <function-ref name="captured" scoped="" ref="0x7f06d69e5da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d69e3020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d69e31b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f06d69e3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f06d69c8a20" loc="68:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f06d69c8a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d69c8da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f06d69c7020"/>
        <function-ref name="captured" scoped="" ref="0x7f06d69c71b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d69c7340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d69c74d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f06d69c7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f06d69ecc10" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f06d69ecc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d69eb020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f06d69eb1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f06d69eb340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f06d69eb4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f06d69eb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f06d69ce020" loc="61:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f06d69ce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d69ce3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f06d69ce530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f06d69ce6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f06d69ce850"/>
        <function-ref name="fired" scoped="" ref="0x7f06d69ce9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f06d69c5a20" loc="71:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f06d69c5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d69c5da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f06d69c4020"/>
        <function-ref name="captured" scoped="" ref="0x7f06d69c41b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d69c4340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d69c44d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f06d69c4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f06d69d65a0" loc="55:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f06d69d65a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f06d69d6920"/>
        <function-ref name="getControl" scoped="" ref="0x7f06d69d6ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d69d6c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f06d69d6dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f06d69d4020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d69d41b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f06d69d4340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f06d69d44d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f06d69d4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f06d69efd60" loc="40:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f06d69efd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f06d69fe180"/>
        <function-ref name="getControl" scoped="" ref="0x7f06d69fe310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d69fe4a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f06d69fe630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f06d69fe7c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d69fe950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f06d69feae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f06d69fec70"/>
        <function-ref name="setControl" scoped="" ref="0x7f06d69fee00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f06d69caa20" loc="66:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f06d69caa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d69cada0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f06d69c9020"/>
        <function-ref name="captured" scoped="" ref="0x7f06d69c91b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d69c9340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d69c94d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f06d69c9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f06d69d03e0" loc="59:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f06d69d03e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d69d0760"/>
        <function-ref name="setEvent" scoped="" ref="0x7f06d69d08f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f06d69d0a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f06d69d0c10"/>
        <function-ref name="fired" scoped="" ref="0x7f06d69d0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f06d69da5a0" loc="52:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f06d69da5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f06d69daa20"/>
        <function-ref name="getControl" scoped="" ref="0x7f06d69dabb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d69dad40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f06d69d9020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f06d69d91b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d69d9340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f06d69d94d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f06d69d9660"/>
        <function-ref name="setControl" scoped="" ref="0x7f06d69d97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f06d69e3700" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f06d69e3700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d69e3a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f06d69e3c10"/>
        <function-ref name="captured" scoped="" ref="0x7f06d69e3da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d69dd020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d69dd1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f06d69dd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f06d69c7a20" loc="69:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f06d69c7a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d69c7da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f06d69c6020"/>
        <function-ref name="captured" scoped="" ref="0x7f06d69c61b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d69c6340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d69c64d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f06d69c6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f06d69d9be0" loc="53:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f06d69d9be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f06d69d8020"/>
        <function-ref name="getControl" scoped="" ref="0x7f06d69d81b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d69d8340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f06d69d84d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f06d69d8660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d69d87f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f06d69d8980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f06d69d8b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f06d69d8ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f06d69eba20" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f06d69eba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d69ebda0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f06d69e6020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f06d69e61b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f06d69e6340"/>
        <function-ref name="fired" scoped="" ref="0x7f06d69e64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f06d69f61b0" loc="39:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f06d69f61b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d69f6530"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f06d69f66c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d69f6850"/>
        <function-ref name="get" scoped="" ref="0x7f06d69f69e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d69f6b70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d69f6d00"/>
        <function-ref name="getMode" scoped="" ref="0x7f06d69ff020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d69ff1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f06d69ff340"/>
        <function-ref name="setMode" scoped="" ref="0x7f06d69ff4d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f06d69ff660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f06d69ceda0" loc="62:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f06d69ceda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d69cd180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f06d69cd310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f06d69cd4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f06d69cd630"/>
        <function-ref name="fired" scoped="" ref="0x7f06d69cd7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f06d69f5220" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f06d69f5220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f06d69f55a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f06d69f5730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d69f58c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f06d69f5a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f06d69f5be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d69f5d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f06d69ee020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f06d69ee1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f06d69ee340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f06d69d4a50" loc="56:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f06d69d4a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f06d69d4dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f06d69d3020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d69d31b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f06d69d3340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f06d69d34d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d69d3660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f06d69d37f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f06d69d3980"/>
        <function-ref name="setControl" scoped="" ref="0x7f06d69d3b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f06d69de7b0" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f06d69de7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d69deb30"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f06d69decc0"/>
        <function-ref name="captured" scoped="" ref="0x7f06d69dee50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d69e5020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d69e51b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f06d69e5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f06d69c9a20" loc="67:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f06d69c9a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d69c9da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f06d69c8020"/>
        <function-ref name="captured" scoped="" ref="0x7f06d69c81b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d69c8340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d69c84d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f06d69c8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f06d69e7e60" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f06d69e7e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d69ec210"/>
        <function-ref name="setEvent" scoped="" ref="0x7f06d69ec3a0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f06d69ec530"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f06d69ec6c0"/>
        <function-ref name="fired" scoped="" ref="0x7f06d69ec850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f06d69cf1f0" loc="60:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f06d69cf1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d69cf570"/>
        <function-ref name="setEvent" scoped="" ref="0x7f06d69cf700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f06d69cf890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f06d69cfa20"/>
        <function-ref name="fired" scoped="" ref="0x7f06d69cfbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f06d69c6a20" loc="70:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f06d69c6a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d69c6da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f06d69c5020"/>
        <function-ref name="captured" scoped="" ref="0x7f06d69c51b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d69c5340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d69c54d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f06d69c5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f06d69d70c0" loc="54:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f06d69d70c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f06d69d7440"/>
        <function-ref name="getControl" scoped="" ref="0x7f06d69d75d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d69d7760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f06d69d78f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f06d69d7a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d69d7c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f06d69d7da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f06d69d6020"/>
        <function-ref name="setControl" scoped="" ref="0x7f06d69d61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f06d69dd6c0" loc="50:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f06d69dd6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d69dda40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f06d69ddbd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d69ddd60"/>
        <function-ref name="get" scoped="" ref="0x7f06d69dc020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d69dc1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d69dc340"/>
        <function-ref name="getMode" scoped="" ref="0x7f06d69dc4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d69dc660"/>
        <function-ref name="overflow" scoped="" ref="0x7f06d69dc7f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f06d69dc980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f06d69dcb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f06d69cdb80" loc="63:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f06d69cdb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d69cc020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f06d69cc1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f06d69cc340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f06d69cc4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f06d69cc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f06d69cba20" loc="65:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f06d69cba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d69cbda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f06d69ca020"/>
        <function-ref name="captured" scoped="" ref="0x7f06d69ca1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d69ca340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d69ca4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f06d69ca660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f06d69cca20" loc="64:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f06d69cca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d69cb020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f06d69cb1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f06d69cb340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f06d69cb4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f06d69cb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f06d69d1570" loc="58:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f06d69d1570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d69d18f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f06d69d1a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f06d69d1c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f06d69d1da0"/>
        <function-ref name="fired" scoped="" ref="0x7f06d69d0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f06d69d2020" loc="57:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f06d69d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f06d69d23a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f06d69d2530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d69d26c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f06d69d2850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f06d69d29e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d69d2b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f06d69d2d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f06d69d1020"/>
        <function-ref name="setControl" scoped="" ref="0x7f06d69d11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f06d698caa0" loc="53:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f06d698caa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f06d698ce20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f06d698c450" loc="52:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f06d698c450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f06d698c7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f06d698b120" loc="54:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f06d698b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f06d698b4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f06d698dd80" loc="51:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f06d698dd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f06d698c180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f06d698e540" loc="50:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f06d698e540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d698e8c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f06d698ea50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d698ebe0"/>
        <function-ref name="get" scoped="" ref="0x7f06d698ed70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d698d020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d698d1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f06d698d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d698d4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f06d698d660"/>
        <function-ref name="setMode" scoped="" ref="0x7f06d698d7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f06d698d980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f06d6984940" loc="53:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f06d6984940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f06d6984cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f06d69842f0" loc="52:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f06d69842f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f06d6984670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f06d6983020" loc="54:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f06d6983020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f06d69833a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f06d6985bf0" loc="51:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f06d6985bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f06d6984020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f06d69863e0" loc="50:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f06d69863e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d6986760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f06d69868f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d6986a80"/>
        <function-ref name="get" scoped="" ref="0x7f06d6986c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d6986da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d6985020"/>
        <function-ref name="getMode" scoped="" ref="0x7f06d69851b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d6985340"/>
        <function-ref name="overflow" scoped="" ref="0x7f06d69854d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f06d6985660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f06d69857f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f06d6938a90" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f06d6938a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d6938e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f06d6937020"/>
        <function-ref name="captured" scoped="" ref="0x7f06d69371b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d6937340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d69374d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f06d6937660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f06d69809d0" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f06d69809d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f06d6980d50"/>
        <function-ref name="getControl" scoped="" ref="0x7f06d6939020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d69391b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f06d6939340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f06d69394d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d6939660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f06d69397f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f06d6939980"/>
        <function-ref name="setControl" scoped="" ref="0x7f06d6939b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f06d6935020" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f06d6935020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f06d69353a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f06d6939de0" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f06d6939de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d6938180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f06d6938310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f06d69384a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f06d6938630"/>
        <function-ref name="fired" scoped="" ref="0x7f06d69387c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f06d6937930" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f06d6937930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d6937cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f06d6937e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d6936020"/>
        <function-ref name="get" scoped="" ref="0x7f06d69361b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d6936340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d69364d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f06d6936660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d69367f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f06d6936980"/>
        <function-ref name="setMode" scoped="" ref="0x7f06d6936b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f06d6936ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f06d6930160" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f06d6930160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d69304e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f06d6930670"/>
        <function-ref name="captured" scoped="" ref="0x7f06d6930800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d6930990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d6930b20"/>
        <function-ref name="setEdge" scoped="" ref="0x7f06d6930cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f06d6932020" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f06d6932020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f06d69323a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f06d6932530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d69326c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f06d6932850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f06d69329e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d6932b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f06d6932d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f06d6931020"/>
        <function-ref name="setControl" scoped="" ref="0x7f06d69311b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f06d692e7a0" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f06d692e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f06d692eb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f06d6931480" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f06d6931480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d6931800"/>
        <function-ref name="setEvent" scoped="" ref="0x7f06d6931990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f06d6931b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f06d6931cb0"/>
        <function-ref name="fired" scoped="" ref="0x7f06d6931e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f06d692f020" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f06d692f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d692f3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f06d692f530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d692f6c0"/>
        <function-ref name="get" scoped="" ref="0x7f06d692f850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d692f9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d692fb70"/>
        <function-ref name="getMode" scoped="" ref="0x7f06d692fd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d692e020"/>
        <function-ref name="overflow" scoped="" ref="0x7f06d692e1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f06d692e340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f06d692e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f06d69287a0" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f06d69287a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d6928b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f06d6928cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f06d6928e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d6927020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d69271b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f06d6927340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f06d692a6d0" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f06d692a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f06d692aa50"/>
        <function-ref name="getControl" scoped="" ref="0x7f06d692abe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d692ad70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f06d6929020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f06d69291b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d6929340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f06d69294d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f06d6929660"/>
        <function-ref name="setControl" scoped="" ref="0x7f06d69297f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f06d6926c50" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f06d6926c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f06d6925020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f06d6929ac0" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f06d6929ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d6929e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f06d6928020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f06d69281b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f06d6928340"/>
        <function-ref name="fired" scoped="" ref="0x7f06d69284d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f06d6927610" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f06d6927610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d6927990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f06d6927b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d6927cb0"/>
        <function-ref name="get" scoped="" ref="0x7f06d6927e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d6926020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d69261b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f06d6926340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d69264d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f06d6926660"/>
        <function-ref name="setMode" scoped="" ref="0x7f06d69267f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f06d6926980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f06d6921cb0" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f06d6921cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d69200a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f06d6920230"/>
        <function-ref name="captured" scoped="" ref="0x7f06d69203c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d6920550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d69206e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f06d6920870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f06d6923b30" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f06d6923b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f06d6922020"/>
        <function-ref name="getControl" scoped="" ref="0x7f06d69221b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d6922340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f06d69224d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f06d6922660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d69227f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f06d6922980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f06d6922b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f06d6922ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f06d691e2f0" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f06d691e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f06d691e670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f06d6921020" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f06d6921020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d69213a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f06d6921530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f06d69216c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f06d6921850"/>
        <function-ref name="fired" scoped="" ref="0x7f06d69219e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f06d6920b40" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f06d6920b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d691f020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f06d691f1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d691f340"/>
        <function-ref name="get" scoped="" ref="0x7f06d691f4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d691f660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d691f7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f06d691f980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d691fb10"/>
        <function-ref name="overflow" scoped="" ref="0x7f06d691fca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f06d691fe30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f06d691e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f06d69182f0" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f06d69182f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d6918670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f06d6918800"/>
        <function-ref name="captured" scoped="" ref="0x7f06d6918990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d6918b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d6918cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f06d6918e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f06d691a220" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f06d691a220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f06d691a5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f06d691a730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d691a8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f06d691aa50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f06d691abe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d691ad70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f06d6919020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f06d69191b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f06d6919340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f06d69167a0" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f06d69167a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f06d6916b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f06d6919610" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f06d6919610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d6919990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f06d6919b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f06d6919cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f06d6919e40"/>
        <function-ref name="fired" scoped="" ref="0x7f06d6918020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f06d6917160" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f06d6917160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d69174e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f06d6917670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d6917800"/>
        <function-ref name="get" scoped="" ref="0x7f06d6917990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d6917b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d6917cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f06d6917e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d6916020"/>
        <function-ref name="overflow" scoped="" ref="0x7f06d69161b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f06d6916340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f06d69164d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f06d69117a0" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f06d69117a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d6911b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f06d6911cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f06d6911e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d6910020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d69101b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f06d6910340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f06d69136d0" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f06d69136d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f06d6913a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f06d6913be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d6913d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f06d6912020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f06d69121b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d6912340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f06d69124d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f06d6912660"/>
        <function-ref name="setControl" scoped="" ref="0x7f06d69127f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f06d690fc50" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f06d690fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f06d690e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f06d6912ac0" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f06d6912ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d6912e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f06d6911020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f06d69111b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f06d6911340"/>
        <function-ref name="fired" scoped="" ref="0x7f06d69114d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f06d6910610" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f06d6910610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d6910990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f06d6910b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d6910cb0"/>
        <function-ref name="get" scoped="" ref="0x7f06d6910e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d690f020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d690f1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f06d690f340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d690f4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f06d690f660"/>
        <function-ref name="setMode" scoped="" ref="0x7f06d690f7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f06d690f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f06d6909cb0" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f06d6909cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d69080a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f06d6908230"/>
        <function-ref name="captured" scoped="" ref="0x7f06d69083c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d6908550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d69086e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f06d6908870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f06d690bb30" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f06d690bb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f06d690a020"/>
        <function-ref name="getControl" scoped="" ref="0x7f06d690a1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d690a340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f06d690a4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f06d690a660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d690a7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f06d690a980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f06d690ab10"/>
        <function-ref name="setControl" scoped="" ref="0x7f06d690aca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f06d69062f0" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f06d69062f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f06d6906670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f06d6909020" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f06d6909020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d69093a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f06d6909530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f06d69096c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f06d6909850"/>
        <function-ref name="fired" scoped="" ref="0x7f06d69099e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f06d6908b40" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f06d6908b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d6907020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f06d69071b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d6907340"/>
        <function-ref name="get" scoped="" ref="0x7f06d69074d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d6907660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d69077f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f06d6907980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d6907b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f06d6907ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f06d6907e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f06d6906020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f06d69012f0" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f06d69012f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d6901670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f06d6901800"/>
        <function-ref name="captured" scoped="" ref="0x7f06d6901990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d6901b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d6901cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f06d6901e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f06d6903220" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f06d6903220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f06d69035a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f06d6903730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d69038c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f06d6903a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f06d6903be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d6903d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f06d6902020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f06d69021b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f06d6902340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f06d68ff7a0" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f06d68ff7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f06d68ffb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f06d6902610" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f06d6902610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d6902990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f06d6902b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f06d6902cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f06d6902e40"/>
        <function-ref name="fired" scoped="" ref="0x7f06d6901020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f06d6900160" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f06d6900160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d69004e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f06d6900670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d6900800"/>
        <function-ref name="get" scoped="" ref="0x7f06d6900990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d6900b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d6900cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f06d6900e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d68ff020"/>
        <function-ref name="overflow" scoped="" ref="0x7f06d68ff1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f06d68ff340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f06d68ff4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f06d68f97a0" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f06d68f97a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d68f9b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f06d68f9cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f06d68f9e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d68f8020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d68f81b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f06d68f8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f06d68fc6d0" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f06d68fc6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f06d68fca50"/>
        <function-ref name="getControl" scoped="" ref="0x7f06d68fcbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d68fcd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f06d68fa020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f06d68fa1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d68fa340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f06d68fa4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f06d68fa660"/>
        <function-ref name="setControl" scoped="" ref="0x7f06d68fa7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f06d68f7c50" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f06d68f7c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f06d68f6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f06d68faac0" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f06d68faac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d68fae40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f06d68f9020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f06d68f91b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f06d68f9340"/>
        <function-ref name="fired" scoped="" ref="0x7f06d68f94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f06d68f8610" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f06d68f8610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d68f8990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f06d68f8b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d68f8cb0"/>
        <function-ref name="get" scoped="" ref="0x7f06d68f8e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d68f7020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d68f71b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f06d68f7340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d68f74d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f06d68f7660"/>
        <function-ref name="setMode" scoped="" ref="0x7f06d68f77f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f06d68f7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f06d68f2cb0" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f06d68f2cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d68f10a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f06d68f1230"/>
        <function-ref name="captured" scoped="" ref="0x7f06d68f13c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d68f1550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d68f16e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f06d68f1870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f06d68f4b30" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f06d68f4b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f06d68f3020"/>
        <function-ref name="getControl" scoped="" ref="0x7f06d68f31b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d68f3340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f06d68f34d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f06d68f3660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d68f37f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f06d68f3980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f06d68f3b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f06d68f3ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f06d68ef2f0" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f06d68ef2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f06d68ef670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f06d68f2020" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f06d68f2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d68f23a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f06d68f2530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f06d68f26c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f06d68f2850"/>
        <function-ref name="fired" scoped="" ref="0x7f06d68f29e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f06d68f1b40" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f06d68f1b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d68f0020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f06d68f01b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d68f0340"/>
        <function-ref name="get" scoped="" ref="0x7f06d68f04d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d68f0660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d68f07f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f06d68f0980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d68f0b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f06d68f0ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f06d68f0e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f06d68ef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f06d68e8240" loc="7:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f06d68e8240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f06d68e85c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f06d68eda90" loc="4:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f06d68eda90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f06d68ede10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f06d68e9260" loc="5:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f06d68e9260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f06d68e95e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f06d68e99f0" loc="6:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f06d68e99f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f06d68e9d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f06d6d6f080" loc="55:/opt/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f06d6d6f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f06d6d6f400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f06d6ea82d0" loc="51:/opt/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f06d6ea82d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f06d6ea8650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f06d6cd07d0" loc="52:/opt/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f06d6cd07d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f06d6cd0b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f06d6a4ab50" loc="39:/opt/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f06d6a4ab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f06d68b1b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f06d68b11b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f06d68b1340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f06d68b14d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f06d68b1020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f06d68b1660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f06d68b17f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f06d68b1980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f06d68a5dc0" loc="60:/opt/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f06d68a5dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d68a4180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f06d68b2590" loc="57:/opt/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f06d68b2590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f06d68b2910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f06d68a56c0" loc="59:/opt/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f06d68a56c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d68a5a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f06d68b2c00" loc="58:/opt/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f06d68b2c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d68a5020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f06d68a51b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f06d68a5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f06d6f801d0" loc="48:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f06d6f801d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f06d6f80550"/>
        <function-ref name="runTask" scoped="" ref="0x7f06d6f806e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f06d6f113a0" loc="47:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f06d6f113a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d6f11720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f06d6f118b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f06d6f11a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f06d6aba040" loc="56:/opt/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f06d6aba040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f06d6aba3c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f06d6aba550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f06d6ab75d0" loc="57:/opt/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f06d6ab75d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f06d6ab7950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f06d6abc140" loc="55:/opt/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f06d6abc140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d6abc4c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f06d6abc650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f06d6abc7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x7f06d6831970" loc="23:Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x7f06d6831970"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f06d6831cf0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f06d6831e80"/>
        <function-ref name="start" scoped="" ref="0x7f06d6835030"/>
        <function-ref name="stop" scoped="" ref="0x7f06d68351c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f06d6836080" loc="21:Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f06d6836080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f06d6836400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x7f06d6815200" loc="32:Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f06d6815200"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a88ac0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f06d6a87260"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f06d6815e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f06d682d130" loc="24:Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f06d682d130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f06d682d4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sender" ref="0x7f06d682a980" loc="26:Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Sender" scoped="" ref="0x7f06d682a980"/></type-interface>
      <instance>
        <interfacedef-ref qname="SimpleSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d682ad00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CommandHandler" ref="0x7f06d6824c00" loc="28:Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CommandHandler" scoped="" ref="0x7f06d6824c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CommandHandler"/>
      </instance>
      <interface-functions>
        <function-ref name="printLinkState" scoped="" ref="0x7f06d682b020"/>
        <function-ref name="printNeighbors" scoped="" ref="0x7f06d682b1b0"/>
        <function-ref name="printDistanceVector" scoped="" ref="0x7f06d682b340"/>
        <function-ref name="setTestClient" scoped="" ref="0x7f06d682b4d0"/>
        <function-ref name="setTestServer" scoped="" ref="0x7f06d682b660"/>
        <function-ref name="setAppServer" scoped="" ref="0x7f06d682b7f0"/>
        <function-ref name="printRouteTable" scoped="" ref="0x7f06d682b980"/>
        <function-ref name="ping" scoped="" ref="0x7f06d682bb10"/>
        <function-ref name="setAppClient" scoped="" ref="0x7f06d682bca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f06d6819960" loc="31:Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f06d6819960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a88ac0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f06d6a87260"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f06d6818e80"/>
        <function-ref name="fired" scoped="" ref="0x7f06d68224a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f06d6818260"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f06d6822da0"/>
        <function-ref name="getdt" scoped="" ref="0x7f06d68167a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f06d6816320"/>
        <function-ref name="isRunning" scoped="" ref="0x7f06d6822920"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f06d68235a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f06d6818870"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f06d6823a70"/>
        <function-ref name="stop" scoped="" ref="0x7f06d6822020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f06d56ca5f0" loc="46:/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="NodeC.GeneralReceive"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f06d56ca5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d56ca970"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f06d56cab00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d56cac90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d56cae20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f06d56c8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f06d56ca020" loc="45:/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="NodeC.GeneralReceive"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f06d56ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f06d56ca3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f06d56c8270" loc="47:/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="NodeC.GeneralReceive"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f06d56c8270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f06d56c85f0"/>
        <function-ref name="source" scoped="" ref="0x7f06d56c8780"/>
        <function-ref name="address" scoped="" ref="0x7f06d56c8910"/>
        <function-ref name="destination" scoped="" ref="0x7f06d56c8aa0"/>
        <function-ref name="setSource" scoped="" ref="0x7f06d56c8c30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f06d56c8dc0"/>
        <function-ref name="type" scoped="" ref="0x7f06d56c7020"/>
        <function-ref name="setType" scoped="" ref="0x7f06d56c71b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f06d56c7340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f06d56c74d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f06d56c7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f06d67d78a0" loc="61:/opt/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f06d67d78a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f06d67d7c20"/>
        <function-ref name="stopDone" scoped="" ref="0x7f06d67d7db0"/>
        <function-ref name="start" scoped="" ref="0x7f06d67c2020"/>
        <function-ref name="stop" scoped="" ref="0x7f06d67c21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f06d67c14f0" loc="63:/opt/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f06d67c14f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f06d684bca0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d67c1870"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d67c1a00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d67c1b90"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d67c1d20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d67c0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f06d67b6430" loc="65:/opt/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f06d67b6430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f06d684bca0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f06d67b67b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f06d67b6a40" loc="67:/opt/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f06d67b6a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d67b6dc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f06d67b5020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d67b51b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d67b5340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f06d67b54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f06d67a9cd0" loc="70:/opt/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f06d67a9cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a876a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f06d6a87a10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f06d67a42e0"/>
        <function-ref name="clear" scoped="" ref="0x7f06d67a4a10"/>
        <function-ref name="isValid" scoped="" ref="0x7f06d67abb60"/>
        <function-ref name="set" scoped="" ref="0x7f06d67a3170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f06d6798b20" loc="72:/opt/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f06d6798b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f06d679e020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f06d679e1b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f06d679e340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f06d679e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f06d67c0800" loc="64:/opt/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f06d67c0800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f06d684bca0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f06d67c0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f06d67ac9f0" loc="69:/opt/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f06d67ac9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f06d67acd70"/>
        <function-ref name="noAck" scoped="" ref="0x7f06d67b1020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f06d67b11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f06d67b5780" loc="68:/opt/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f06d67b5780"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f06d67b5b00"/>
        <function-ref name="source" scoped="" ref="0x7f06d67b5c90"/>
        <function-ref name="address" scoped="" ref="0x7f06d67b5e20"/>
        <function-ref name="destination" scoped="" ref="0x7f06d67b4020"/>
        <function-ref name="setSource" scoped="" ref="0x7f06d67b41b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f06d67b4340"/>
        <function-ref name="type" scoped="" ref="0x7f06d67b44d0"/>
        <function-ref name="setType" scoped="" ref="0x7f06d67b4660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f06d67b47f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f06d67b4980"/>
        <function-ref name="localGroup" scoped="" ref="0x7f06d67b4b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f06d67a3dc0" loc="71:/opt/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f06d67a3dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a88ac0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f06d6a87260"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f06d67a03f0"/>
        <function-ref name="clear" scoped="" ref="0x7f06d67a0b20"/>
        <function-ref name="isValid" scoped="" ref="0x7f06d67a1ca0"/>
        <function-ref name="set" scoped="" ref="0x7f06d679f2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f06d678b880" loc="55:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f06d678b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f06d678bc00"/>
        <function-ref name="stopDone" scoped="" ref="0x7f06d678bd90"/>
        <function-ref name="start" scoped="" ref="0x7f06d678a020"/>
        <function-ref name="stop" scoped="" ref="0x7f06d678a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f06d677a050" loc="64:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f06d677a050"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f06d684bca0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f06d677a3d0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f06d677a560"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f06d677a6f0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f06d677a880"/>
        <function-ref name="setCca" scoped="" ref="0x7f06d677aa10"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f06d677aba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f06d676f1d0" loc="67:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f06d676f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f06d684bca0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f06d676f650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f06d6786760" loc="60:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f06d6786760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d6786ae0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f06d6786c70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d6786e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d6785020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f06d67851b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f06d678a980" loc="56:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f06d678a980"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f06d684bca0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d678ad00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d6789020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d67891b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d6789340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d67894d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f06d6788900" loc="58:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f06d6788900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f06d684bca0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f06d6788c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f06d677c970" loc="61:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f06d677c970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f06d677ccf0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f06d677ce80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f06d6784030"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f06d67841c0"/>
        <function-ref name="getPower" scoped="" ref="0x7f06d6784350"/>
        <function-ref name="getLqi" scoped="" ref="0x7f06d67844e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f06d6778020" loc="65:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f06d6778020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f06d67783a0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f06d6778530"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f06d67786c0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f06d6778850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f06d6789cb0" loc="57:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f06d6789cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f06d684bca0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f06d67880a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f06d6784810" loc="62:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f06d6784810"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f06d6784b90"/>
        <function-ref name="noAck" scoped="" ref="0x7f06d6784d20"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f06d6783020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f06d6766430" loc="66:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f06d6766430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f06d67667b0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f06d6766940"/>
        <function-ref name="getRetries" scoped="" ref="0x7f06d6766ad0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f06d6766c60"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f06d6766df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f06d6787020" loc="59:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f06d6787020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f06d67873a0"/>
        <function-ref name="source" scoped="" ref="0x7f06d6787530"/>
        <function-ref name="address" scoped="" ref="0x7f06d67876c0"/>
        <function-ref name="destination" scoped="" ref="0x7f06d6787850"/>
        <function-ref name="setSource" scoped="" ref="0x7f06d67879e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f06d6787b70"/>
        <function-ref name="type" scoped="" ref="0x7f06d6787d00"/>
        <function-ref name="setType" scoped="" ref="0x7f06d6786020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f06d67861b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f06d6786340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f06d67864d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f06d6779a80" loc="63:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f06d6779a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f06d6779e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f06d6761020" loc="43:/opt/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f06d6761020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f06d67613a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f06d6761530"/>
        <function-ref name="start" scoped="" ref="0x7f06d67616c0"/>
        <function-ref name="stop" scoped="" ref="0x7f06d6761850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f06d674e9d0" loc="55:/opt/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f06d674e9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f06d674ed50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f06d674db70" loc="57:/opt/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f06d674db70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f06d674c020"/>
        <function-ref name="setRetries" scoped="" ref="0x7f06d674c1b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f06d674c340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f06d674c4d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f06d674c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f06d674f020" loc="53:/opt/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f06d674f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f06d674f3a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f06d674f530"/>
        <function-ref name="getRssi" scoped="" ref="0x7f06d674f6c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f06d674f850"/>
        <function-ref name="getPower" scoped="" ref="0x7f06d674f9e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f06d674fb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f06d6759a70" loc="50:/opt/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f06d6759a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d6759df0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d6752020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d67521b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d6752340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d67524d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f06d674d080" loc="56:/opt/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f06d674d080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f06d674d400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f06d674d590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f06d674d720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f06d674d8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f06d675a690" loc="47:/opt/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f06d675a690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f06d675aa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f06d674e020" loc="54:/opt/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f06d674e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f06d674e3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f06d674e530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f06d674e6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f06d6760530" loc="45:/opt/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f06d6760530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d67608b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f06d6760a40"/>
        <function-ref name="request" scoped="" ref="0x7f06d6760bd0"/>
        <function-ref name="granted" scoped="" ref="0x7f06d6760d60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d675b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f06d6750940" loc="46:/opt/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f06d6750940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d6750cc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d6750e50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d675a020"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d675a1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d675a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f06d675ad50" loc="48:/opt/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f06d675ad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d6759100"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f06d6759290"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d6759420"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d67595b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f06d6759740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f06d6752840" loc="51:/opt/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f06d6752840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f06d6752bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f06d6749390" loc="44:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f06d6749390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f06d6749710"/>
        <function-ref name="stopDone" scoped="" ref="0x7f06d67498a0"/>
        <function-ref name="start" scoped="" ref="0x7f06d6749a30"/>
        <function-ref name="stop" scoped="" ref="0x7f06d6749bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f06d6747330" loc="47:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f06d6747330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f06d67476b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f06d6747840"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f06d67479d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f06d6747b60"/>
        <function-ref name="setCca" scoped="" ref="0x7f06d6747cf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f06d6747e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f06d6749e80" loc="45:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f06d6749e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d6748220"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d67483b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d6748540"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d67486d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d6748860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f06d6748b40" loc="46:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f06d6748b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f06d6747020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f06d6746e80" loc="39:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f06d6746e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f06d6742220"/>
        <function-ref name="stopDone" scoped="" ref="0x7f06d67423b0"/>
        <function-ref name="start" scoped="" ref="0x7f06d6742540"/>
        <function-ref name="stop" scoped="" ref="0x7f06d67426d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f06d67407e0" loc="41:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f06d67407e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f06d6740b60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f06d6740cf0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f06d6740e80"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f06d673f030"/>
        <function-ref name="setCca" scoped="" ref="0x7f06d673f1c0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f06d673f350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f06d6735060" loc="47:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f06d6735060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f06d67353e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f06d6735570"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f06d6735700"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f06d6735890"/>
        <function-ref name="setCca" scoped="" ref="0x7f06d6735a20"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f06d6735bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f06d672a1a0" loc="50:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f06d672a1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f06d672a520"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f06d672a6b0"/>
        <function-ref name="getRssi" scoped="" ref="0x7f06d672a840"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f06d672a9d0"/>
        <function-ref name="getPower" scoped="" ref="0x7f06d672ab60"/>
        <function-ref name="getLqi" scoped="" ref="0x7f06d672acf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f06d672d2a0" loc="46:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f06d672d2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d672d620"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d672d7b0"/>
        <function-ref name="modify" scoped="" ref="0x7f06d672d940"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d672dad0"/>
        <function-ref name="resend" scoped="" ref="0x7f06d672dc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f06d6742990" loc="40:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f06d6742990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d6742d10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d6740020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d67401b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d6740340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d67404d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f06d6729420" loc="48:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f06d6729420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f06d67297a0"/>
        <function-ref name="rand32" scoped="" ref="0x7f06d6729930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f06d6734760" loc="45:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f06d6734760"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f06d6734ae0"/>
        <function-ref name="stop" scoped="" ref="0x7f06d6734c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f06d6718790" loc="51:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f06d6718790"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f06d6718b10"/>
        <function-ref name="getHeader" scoped="" ref="0x7f06d6718ca0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f06d6718e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f06d6738b50" loc="44:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f06d6738b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f06d673d020"/>
        <function-ref name="rfOff" scoped="" ref="0x7f06d673d1b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f06d673d340"/>
        <function-ref name="startVReg" scoped="" ref="0x7f06d673d4d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f06d673d660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f06d673d7f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f06d673d980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f06d673db10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f06d671f9a0" loc="49:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f06d671f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f06d671fd20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f06d672b020"/>
        <function-ref name="led1On" scoped="" ref="0x7f06d672b1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f06d672b340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f06d672b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f06d672b660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f06d672b7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f06d672be30"/>
        <function-ref name="set" scoped="" ref="0x7f06d672b980"/>
        <function-ref name="led0On" scoped="" ref="0x7f06d672bb10"/>
        <function-ref name="led2On" scoped="" ref="0x7f06d672bca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f06d673f640" loc="43:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f06d673f640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d673f9c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f06d673fb50"/>
        <function-ref name="request" scoped="" ref="0x7f06d673fce0"/>
        <function-ref name="granted" scoped="" ref="0x7f06d673fe70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d673e030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f06d6713e40" loc="52:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7f06d6713e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f06d671c310"/>
        <function-ref name="toIdle" scoped="" ref="0x7f06d671c4a0"/>
        <function-ref name="isState" scoped="" ref="0x7f06d671c630"/>
        <function-ref name="isIdle" scoped="" ref="0x7f06d671c7c0"/>
        <function-ref name="requestState" scoped="" ref="0x7f06d671c950"/>
        <function-ref name="forceState" scoped="" ref="0x7f06d671cae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f06d670e9e0" loc="76:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7f06d670e9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f06d670ed60"/>
        <function-ref name="runTask" scoped="" ref="0x7f06d670d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f06d670fa10" loc="75:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7f06d670fa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f06d670fd90"/>
        <function-ref name="runTask" scoped="" ref="0x7f06d670e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f06d6710a00" loc="74:/opt/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7f06d6710a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f06d6710d80"/>
        <function-ref name="runTask" scoped="" ref="0x7f06d670f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f06d66b6b80" loc="45:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f06d66b6b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f06d66c2020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f06d66c21b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f06d66c2340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f06d66c24d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f06d66c2660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f06d66c27f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f06d66c2980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f06d66c2b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f06d66c2ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f06d66c2e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f06d66c1020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f06d66c11b0"/>
        <function-ref name="sync" scoped="" ref="0x7f06d66c1340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f06d66c15d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f06d66c1760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f06d66b4020" loc="47:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f06d66b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d66b4c10"/>
        <function-ref name="readDone" scoped="" ref="0x7f06d66b00d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f06d66c1a60" loc="46:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f06d66c1a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f06d66c1de0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f06d66b5020"/>
        <function-ref name="rxOn" scoped="" ref="0x7f06d66b51b0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f06d66b5340"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f06d66b54d0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f06d66b5660"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f06d66b57f0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f06d66b5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f06d66c6720" loc="44:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f06d66c6720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d66c6aa0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f06d66c6c30"/>
        <function-ref name="request" scoped="" ref="0x7f06d66c6dc0"/>
        <function-ref name="granted" scoped="" ref="0x7f06d66c3020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d66c31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f06d66ac970" loc="46:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f06d66ac970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f06d66accf0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f06d66ace80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f06d66ab030"/>
        <function-ref name="syncDone" scoped="" ref="0x7f06d66ab1c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f06d66ab350"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f06d66ab4e0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f06d66ab670"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f06d66ab800"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f06d66ab990"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f06d66abb20"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f06d66abcb0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f06d66abe40"/>
        <function-ref name="sync" scoped="" ref="0x7f06d66aa020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f06d66aa2b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f06d66aa440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f06d667f3d0" loc="66:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f06d667f3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d667f750"/>
        <function-ref name="write" scoped="" ref="0x7f06d667f8e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f06d66a6020" loc="50:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f06d66a6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f06d66a63a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f06d669dd90" loc="52:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7f06d669dd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a876a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f06d6a87a10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f06d669c670"/>
        <function-ref name="fired" scoped="" ref="0x7f06d66a35d0"/>
        <function-ref name="startAt" scoped="" ref="0x7f06d669c020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f06d66a3a90"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f06d669cb30"/>
        <function-ref name="start" scoped="" ref="0x7f06d66a4bc0"/>
        <function-ref name="stop" scoped="" ref="0x7f06d66a3110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f06d66831f0" loc="64:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f06d66831f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d6683570"/>
        <function-ref name="write" scoped="" ref="0x7f06d6683700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f06d66980f0" loc="54:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f06d66980f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d6698470"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6698600"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6698790"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6698920"/>
        <function-ref name="get" scoped="" ref="0x7f06d6698ab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6698c40"/>
        <function-ref name="set" scoped="" ref="0x7f06d6698dd0"/>
        <function-ref name="clr" scoped="" ref="0x7f06d6693020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f06d66a9b40" loc="48:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f06d66a9b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d66a8750"/>
        <function-ref name="readDone" scoped="" ref="0x7f06d66a8bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f06d666c2f0" loc="126:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7f06d666c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f06d666c670"/>
        <function-ref name="runTask" scoped="" ref="0x7f06d666c800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f06d667fc70" loc="67:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f06d667fc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d667e020"/>
        <function-ref name="write" scoped="" ref="0x7f06d667e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f06d667e550" loc="68:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f06d667e550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d667e8d0"/>
        <function-ref name="write" scoped="" ref="0x7f06d667ea60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f06d6688020" loc="62:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f06d6688020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d66883a0"/>
        <function-ref name="write" scoped="" ref="0x7f06d6688530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f06d66894b0" loc="57:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f06d66894b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f06d6689830"/>
        <function-ref name="changed" scoped="" ref="0x7f06d66899c0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f06d6689b50"/>
        <function-ref name="setAddress" scoped="" ref="0x7f06d6689ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f06d6695e80" loc="53:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f06d6695e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d6699220"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d66993b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6699540"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d66996d0"/>
        <function-ref name="get" scoped="" ref="0x7f06d6699860"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d66999f0"/>
        <function-ref name="set" scoped="" ref="0x7f06d6699b80"/>
        <function-ref name="clr" scoped="" ref="0x7f06d6699d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f06d667db60" loc="71:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f06d667db60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d667b180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f06d6693380" loc="55:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f06d6693380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d6693700"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6693890"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6693a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6693bb0"/>
        <function-ref name="get" scoped="" ref="0x7f06d6693d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6692020"/>
        <function-ref name="set" scoped="" ref="0x7f06d66921b0"/>
        <function-ref name="clr" scoped="" ref="0x7f06d6692340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f06d66ad4a0" loc="44:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f06d66ad4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d66ad820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f06d6683ac0" loc="65:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f06d6683ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d6683e40"/>
        <function-ref name="write" scoped="" ref="0x7f06d667f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f06d667b520" loc="72:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f06d667b520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d667b8a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f06d667bc40" loc="74:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f06d667bc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d6679020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f06d66791b0"/>
        <function-ref name="request" scoped="" ref="0x7f06d6679340"/>
        <function-ref name="granted" scoped="" ref="0x7f06d66794d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d6679660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f06d6678880" loc="76:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7f06d6678880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d6678c00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f06d6678d90"/>
        <function-ref name="request" scoped="" ref="0x7f06d6677020"/>
        <function-ref name="granted" scoped="" ref="0x7f06d66771b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d6677340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f06d66aa740" loc="47:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f06d66aa740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f06d66aaac0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f06d66aac50"/>
        <function-ref name="rxOn" scoped="" ref="0x7f06d66aade0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f06d66a9020"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f06d66a91b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f06d66a9340"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f06d66a94d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f06d66a9660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f06d66888d0" loc="63:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f06d66888d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d6688c50"/>
        <function-ref name="write" scoped="" ref="0x7f06d6688de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f06d6681690" loc="61:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f06d6681690"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d6681a10"/>
        <function-ref name="write" scoped="" ref="0x7f06d6681ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f06d667acf0" loc="69:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f06d667acf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d667d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f06d6677600" loc="78:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f06d6677600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f06d6677980"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f06d6677b10"/>
        <function-ref name="led1On" scoped="" ref="0x7f06d6677ca0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f06d6677e30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f06d6676020"/>
        <function-ref name="get" scoped="" ref="0x7f06d66761b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f06d6676340"/>
        <function-ref name="led2Off" scoped="" ref="0x7f06d6676980"/>
        <function-ref name="set" scoped="" ref="0x7f06d66764d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f06d6676660"/>
        <function-ref name="led2On" scoped="" ref="0x7f06d66767f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f06d666e410" loc="125:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7f06d666e410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f06d666e790"/>
        <function-ref name="runTask" scoped="" ref="0x7f06d666e920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f06d66adb10" loc="45:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f06d66adb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d66ac020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f06d66ac1b0"/>
        <function-ref name="request" scoped="" ref="0x7f06d66ac340"/>
        <function-ref name="granted" scoped="" ref="0x7f06d66ac4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d66ac660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f06d668d020" loc="60:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f06d668d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d668d3a0"/>
        <function-ref name="write" scoped="" ref="0x7f06d668d530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f06d66845b0" loc="59:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f06d66845b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d6684a30"/>
        <function-ref name="write" scoped="" ref="0x7f06d6684bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f06d668ed70" loc="56:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f06d668ed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f06d6691180"/>
        <function-ref name="disable" scoped="" ref="0x7f06d6691310"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f06d66914a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f06d6691630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f06d6679a10" loc="75:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7f06d6679a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d6679d90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f06d6678020"/>
        <function-ref name="request" scoped="" ref="0x7f06d66781b0"/>
        <function-ref name="granted" scoped="" ref="0x7f06d6678340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d66784d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f06d667d430" loc="70:/opt/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f06d667d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d667d7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f06d65f77e0" loc="45:/opt/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f06d65f77e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d65f7b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f06d65f4220" loc="46:/opt/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f06d65f4220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a876a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f06d6a87a10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f06d65f1b30"/>
        <function-ref name="fired" scoped="" ref="0x7f06d65f2a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f06d65f14e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f06d65f1020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f06d65f0020"/>
        <function-ref name="start" scoped="" ref="0x7f06d65f2090"/>
        <function-ref name="stop" scoped="" ref="0x7f06d65f25a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f06d65ee490" loc="42:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f06d65ee490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d65ee810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f06d65eed20" loc="43:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f06d65eed20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a876a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f06d6a87a10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f06d64f5670"/>
        <function-ref name="fired" scoped="" ref="0x7f06d64f6550"/>
        <function-ref name="startAt" scoped="" ref="0x7f06d64f5020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f06d64f6a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f06d64f5b30"/>
        <function-ref name="start" scoped="" ref="0x7f06d64f7b60"/>
        <function-ref name="stop" scoped="" ref="0x7f06d64f6090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f06d4fab8b0" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f06d4fab8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a876a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f06d6a87a10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f06d4fa70d0"/>
        <function-ref name="fired" scoped="" ref="0x7f06d4fa80d0"/>
        <function-ref name="startAt" scoped="" ref="0x7f06d4fa8a50"/>
        <function-ref name="isRunning" scoped="" ref="0x7f06d4fa8590"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f06d4fa7590"/>
        <function-ref name="start" scoped="" ref="0x7f06d4fa96e0"/>
        <function-ref name="stop" scoped="" ref="0x7f06d4fa9bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f06d4fab060" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f06d4fab060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d4fab3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f06d4fa3870" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f06d4fa3870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a876a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f06d6a87a10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f06d4f9f090"/>
        <function-ref name="fired" scoped="" ref="0x7f06d4fa1090"/>
        <function-ref name="startAt" scoped="" ref="0x7f06d4fa1a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f06d4fa1550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f06d4f9f550"/>
        <function-ref name="start" scoped="" ref="0x7f06d4fa26a0"/>
        <function-ref name="stop" scoped="" ref="0x7f06d4fa2bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f06d4fa3020" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f06d4fa3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d4fa33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f06d4f8a020" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f06d4f8a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d4f8a3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f06d4f8a530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f06d4f8a6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f06d4f8a850"/>
        <function-ref name="fired" scoped="" ref="0x7f06d4f8a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f06d4f8d570" loc="39:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f06d4f8d570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d4f8d8f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f06d4f8da80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d4f8dc10"/>
        <function-ref name="get" scoped="" ref="0x7f06d4f8dda0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d4f8c020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d4f8c1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f06d4f8c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d4f8c4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f06d4f8c660"/>
        <function-ref name="setMode" scoped="" ref="0x7f06d4f8c7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f06d4f8c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f06d4f8cc10" loc="40:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f06d4f8cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f06d4f8b020"/>
        <function-ref name="getControl" scoped="" ref="0x7f06d4f8b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d4f8b340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f06d4f8b4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f06d4f8b660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d4f8b7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f06d4f8b980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f06d4f8bb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f06d4f8bca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f06d65ccba0" loc="52:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f06d65ccba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d65ca020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f06d65ca1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f06d65ca340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f06d65ca4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f06d65ca660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f06d65cf4d0" loc="50:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f06d65cf4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d65cf850"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f06d65cf9e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d65cfb70"/>
        <function-ref name="get" scoped="" ref="0x7f06d65cfd00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d65ce020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d65ce1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f06d65ce340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d65ce4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f06d65ce660"/>
        <function-ref name="setMode" scoped="" ref="0x7f06d65ce7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f06d65ce980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f06d65cd280" loc="51:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f06d65cd280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f06d65cd600"/>
        <function-ref name="getControl" scoped="" ref="0x7f06d65cd790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d65cd920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f06d65cdab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f06d65cdc40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d65cddd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f06d65cc020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f06d65cc1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f06d65cc340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f06d4f81da0" loc="49:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f06d4f81da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d4f7f180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f06d4f7f310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f06d4f7f4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f06d4f7f630"/>
        <function-ref name="fired" scoped="" ref="0x7f06d4f7f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f06d4f834c0" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f06d4f834c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d4f83840"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f06d4f839d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d4f83b60"/>
        <function-ref name="get" scoped="" ref="0x7f06d4f83cf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d4f83e80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d4f82030"/>
        <function-ref name="getMode" scoped="" ref="0x7f06d4f821c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d4f82350"/>
        <function-ref name="overflow" scoped="" ref="0x7f06d4f824e0"/>
        <function-ref name="setMode" scoped="" ref="0x7f06d4f82670"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f06d4f82800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f06d4f86340" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f06d4f86340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a876a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f06d6a87a10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f06d4f84ba0"/>
        <function-ref name="fired" scoped="" ref="0x7f06d4f85b80"/>
        <function-ref name="startAt" scoped="" ref="0x7f06d4f84550"/>
        <function-ref name="isRunning" scoped="" ref="0x7f06d4f84090"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f06d4f83090"/>
        <function-ref name="start" scoped="" ref="0x7f06d4f851b0"/>
        <function-ref name="stop" scoped="" ref="0x7f06d4f856c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f06d4f87a30" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f06d4f87a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d4f87db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f06d4f82a90" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f06d4f82a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f06d4f82e10"/>
        <function-ref name="getControl" scoped="" ref="0x7f06d4f81020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d4f811b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f06d4f81340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f06d4f814d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d4f81660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f06d4f817f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f06d4f81980"/>
        <function-ref name="setControl" scoped="" ref="0x7f06d4f81b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f06d657a020" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f06d657a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a876a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f06d6a87a10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f06d657ae30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d6579800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d6579340"/>
        <function-ref name="overflow" scoped="" ref="0x7f06d6579cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f06d6571020" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f06d6571020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a876a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f06d6a87a10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f06d6571e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d6570800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d6570340"/>
        <function-ref name="overflow" scoped="" ref="0x7f06d6570cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f06d655d2c0" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f06d655d2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d655d640"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f06d655d7d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d655d960"/>
        <function-ref name="get" scoped="" ref="0x7f06d655daf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d655dc80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d655de10"/>
        <function-ref name="getMode" scoped="" ref="0x7f06d655c020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d655c1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f06d655c340"/>
        <function-ref name="setMode" scoped="" ref="0x7f06d655c4d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f06d655c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f06d656c0a0" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f06d656c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a876a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f06d6a87a10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f06d655f020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d655f9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d655f4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f06d655fe60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f06d653b540" loc="63:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f06d653b540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a876a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f06d6a87a10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f06d653a3d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d653ad50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d653a890"/>
        <function-ref name="overflow" scoped="" ref="0x7f06d6539260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f06d653e0f0" loc="62:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f06d653e0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a876a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f06d6a87a10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f06d653d020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d653d9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d653d4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f06d653de60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f06d4f9da90" loc="61:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f06d4f9da90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a876a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f06d6a87a10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f06d4f9a2e0"/>
        <function-ref name="fired" scoped="" ref="0x7f06d4f9b2e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f06d4f9bc60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f06d4f9b7a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f06d4f9a7a0"/>
        <function-ref name="start" scoped="" ref="0x7f06d4f9c8d0"/>
        <function-ref name="stop" scoped="" ref="0x7f06d4f9cde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f06d4f96210" loc="73:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f06d4f96210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a876a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f06d6a87a10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f06d4f94b30"/>
        <function-ref name="fired" scoped="" ref="0x7f06d4f95a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f06d4f944e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f06d4f94020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f06d4f93020"/>
        <function-ref name="start" scoped="" ref="0x7f06d4f95090"/>
        <function-ref name="stop" scoped="" ref="0x7f06d4f955a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f06d4f9ae10" loc="68:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f06d4f9ae10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a876a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f06d6a87a10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f06d4f98ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d4f97670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d4f971b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f06d4f97b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f06d64ee380" loc="44:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f06d64ee380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64ee700"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d64ee890"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d64eea20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d64eebb0"/>
        <function-ref name="get" scoped="" ref="0x7f06d64eed40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d64ed020"/>
        <function-ref name="set" scoped="" ref="0x7f06d64ed1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64ed340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f06d64ed6b0" loc="45:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f06d64ed6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64eda30"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d64edbc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d64edd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d64ec020"/>
        <function-ref name="get" scoped="" ref="0x7f06d64ec1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d64ec340"/>
        <function-ref name="set" scoped="" ref="0x7f06d64ec4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64ec660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f06d64ec9c0" loc="46:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f06d64ec9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64ecd40"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d64eb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d64eb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d64eb340"/>
        <function-ref name="get" scoped="" ref="0x7f06d64eb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d64eb660"/>
        <function-ref name="set" scoped="" ref="0x7f06d64eb7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64eb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f06d64ef060" loc="43:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f06d64ef060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64ef3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d64ef570"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d64ef700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d64ef890"/>
        <function-ref name="get" scoped="" ref="0x7f06d64efa20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d64efbb0"/>
        <function-ref name="set" scoped="" ref="0x7f06d64efd40"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64ee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f06d64e9020" loc="48:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f06d64e9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64e93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d64e9530"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d64e96c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d64e9850"/>
        <function-ref name="get" scoped="" ref="0x7f06d64e99e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d64e9b70"/>
        <function-ref name="set" scoped="" ref="0x7f06d64e9d00"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64e8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f06d65f5e40" loc="42:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f06d65f5e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64f01e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d64f0370"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d64f0500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d64f0690"/>
        <function-ref name="get" scoped="" ref="0x7f06d64f0820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d64f09b0"/>
        <function-ref name="set" scoped="" ref="0x7f06d64f0b40"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64f0cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f06d64ebcd0" loc="47:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f06d64ebcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64ea0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d64ea230"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d64ea3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d64ea550"/>
        <function-ref name="get" scoped="" ref="0x7f06d64ea6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d64ea870"/>
        <function-ref name="set" scoped="" ref="0x7f06d64eaa00"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64eab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f06d64d3020" loc="53:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f06d64d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64d33a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d64d3530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d64d36c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d64d3850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d64d39e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64d3b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d64d3d00"/>
        <function-ref name="get" scoped="" ref="0x7f06d64d2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d64d21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64d2340"/>
        <function-ref name="set" scoped="" ref="0x7f06d64d24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d64d2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d64d27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d64d2a80"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64d2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f06d64be020" loc="66:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f06d64be020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64be3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d64be530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d64be6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d64be850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d64be9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64beb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d64bed00"/>
        <function-ref name="get" scoped="" ref="0x7f06d64bd020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d64bd1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64bd340"/>
        <function-ref name="set" scoped="" ref="0x7f06d64bd4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d64bd660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d64bd7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d64bda80"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64bdc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f06d6475560" loc="145:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f06d6475560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64758e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6475a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d6475c00"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6475d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6474020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64741b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6474340"/>
        <function-ref name="get" scoped="" ref="0x7f06d64744d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d6474660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64747f0"/>
        <function-ref name="set" scoped="" ref="0x7f06d6474980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d6474b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d6474ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6473020"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64731b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f06d6450570" loc="165:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f06d6450570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64508f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6450a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d6450c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6450da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d644f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d644f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d644f340"/>
        <function-ref name="get" scoped="" ref="0x7f06d644f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d644f660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d644f7f0"/>
        <function-ref name="set" scoped="" ref="0x7f06d644f980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d644fb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d644fca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d644e020"/>
        <function-ref name="clr" scoped="" ref="0x7f06d644e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f06d6473580" loc="146:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f06d6473580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d6473900"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6473a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d6473c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6473db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6472020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64721b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6472340"/>
        <function-ref name="get" scoped="" ref="0x7f06d64724d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d6472660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64727f0"/>
        <function-ref name="set" scoped="" ref="0x7f06d6472980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d6472b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d6472ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6471020"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64711b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f06d64ba020" loc="71:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f06d64ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64ba3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d64ba530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d64ba6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d64ba850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d64ba9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64bab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d64bad00"/>
        <function-ref name="get" scoped="" ref="0x7f06d64b9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d64b91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64b9340"/>
        <function-ref name="set" scoped="" ref="0x7f06d64b94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d64b9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d64b97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d64b9a80"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64b9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f06d64a6200" loc="84:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f06d64a6200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64a6580"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d64a6710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d64a68a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d64a6a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d64a6bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64a6d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d64a5020"/>
        <function-ref name="get" scoped="" ref="0x7f06d64a51b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d64a5340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64a54d0"/>
        <function-ref name="set" scoped="" ref="0x7f06d64a5660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d64a57f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d64a5980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d64a5c10"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64a5da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f06d6491200" loc="97:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f06d6491200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d6491580"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6491710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d64918a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6491a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6491bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d6491d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6490020"/>
        <function-ref name="get" scoped="" ref="0x7f06d64901b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d6490340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64904d0"/>
        <function-ref name="set" scoped="" ref="0x7f06d6490660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d64907f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d6490980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6490c10"/>
        <function-ref name="clr" scoped="" ref="0x7f06d6490da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f06d6481200" loc="108:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f06d6481200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d6481580"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6481710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d64818a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6481a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6481bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d6481d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6480020"/>
        <function-ref name="get" scoped="" ref="0x7f06d64801b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d6480340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64804d0"/>
        <function-ref name="set" scoped="" ref="0x7f06d6480660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d64807f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d6480980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6480c10"/>
        <function-ref name="clr" scoped="" ref="0x7f06d6480da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f06d646d580" loc="149:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f06d646d580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d646d900"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d646da90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d646dc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d646ddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d646c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d646c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d646c340"/>
        <function-ref name="get" scoped="" ref="0x7f06d646c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d646c660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d646c7f0"/>
        <function-ref name="set" scoped="" ref="0x7f06d646c980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d646cb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d646cca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d646b020"/>
        <function-ref name="clr" scoped="" ref="0x7f06d646b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f06d645c570" loc="159:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f06d645c570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d645c8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d645ca80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d645cc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d645cda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d645b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d645b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d645b340"/>
        <function-ref name="get" scoped="" ref="0x7f06d645b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d645b660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d645b7f0"/>
        <function-ref name="set" scoped="" ref="0x7f06d645b980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d645bb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d645bca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d645a020"/>
        <function-ref name="clr" scoped="" ref="0x7f06d645a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f06d6448580" loc="171:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f06d6448580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d6448900"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6448a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d6448c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6448db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6447020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64471b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6447340"/>
        <function-ref name="get" scoped="" ref="0x7f06d64474d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d6447660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64477f0"/>
        <function-ref name="set" scoped="" ref="0x7f06d6447980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d6447b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d6447ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6446020"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64461b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f06d64cd020" loc="56:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f06d64cd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64cd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d64cd530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d64cd6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d64cd850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d64cd9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64cdb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d64cdd00"/>
        <function-ref name="get" scoped="" ref="0x7f06d64cc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d64cc1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64cc340"/>
        <function-ref name="set" scoped="" ref="0x7f06d64cc4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d64cc660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d64cc7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d64cca80"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64ccc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f06d646b580" loc="150:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f06d646b580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d646b900"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d646ba90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d646bc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d646bdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d646a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d646a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d646a340"/>
        <function-ref name="get" scoped="" ref="0x7f06d646a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d646a660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d646a7f0"/>
        <function-ref name="set" scoped="" ref="0x7f06d646a980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d646ab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d646aca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6469020"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64691b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f06d64c9020" loc="61:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f06d64c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64c93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d64c9530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d64c96c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d64c9850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d64c99e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64c9b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d64c9d00"/>
        <function-ref name="get" scoped="" ref="0x7f06d64c8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d64c81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64c8340"/>
        <function-ref name="set" scoped="" ref="0x7f06d64c84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d64c8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d64c87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d64c8a80"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64c8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f06d64b4020" loc="74:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f06d64b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64b43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d64b4530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d64b46c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d64b4850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d64b49e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64b4b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d64b4d00"/>
        <function-ref name="get" scoped="" ref="0x7f06d64b3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d64b31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64b3340"/>
        <function-ref name="set" scoped="" ref="0x7f06d64b34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d64b3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d64b37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d64b3a80"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64b3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f06d64a0200" loc="87:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f06d64a0200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64a0580"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d64a0710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d64a08a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d64a0a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d64a0bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64a0d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d649f020"/>
        <function-ref name="get" scoped="" ref="0x7f06d649f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d649f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d649f4d0"/>
        <function-ref name="set" scoped="" ref="0x7f06d649f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d649f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d649f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d649fc10"/>
        <function-ref name="clr" scoped="" ref="0x7f06d649fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f06d648b200" loc="100:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f06d648b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d648b580"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d648b710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d648b8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d648ba30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d648bbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d648bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d648a020"/>
        <function-ref name="get" scoped="" ref="0x7f06d648a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d648a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d648a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f06d648a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d648a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d648a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d648ac10"/>
        <function-ref name="clr" scoped="" ref="0x7f06d648ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f06d647b200" loc="111:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f06d647b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d647b580"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d647b710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d647b8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d647ba30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d647bbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d647bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d647a020"/>
        <function-ref name="get" scoped="" ref="0x7f06d647a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d647a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d647a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f06d647a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d647a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d647a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d647ac10"/>
        <function-ref name="clr" scoped="" ref="0x7f06d647ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f06d64d7020" loc="51:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f06d64d7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64d73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d64d7530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d64d76c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d64d7850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d64d79e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64d7b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d64d7d00"/>
        <function-ref name="get" scoped="" ref="0x7f06d64d6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d64d61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64d6340"/>
        <function-ref name="set" scoped="" ref="0x7f06d64d64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d64d6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d64d67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d64d6a80"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64d6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f06d64c2020" loc="64:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f06d64c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64c24a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d64c2630"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d64c27c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d64c2950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d64c2ae0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64c2c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d64c2e00"/>
        <function-ref name="get" scoped="" ref="0x7f06d64c1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d64c11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64c1340"/>
        <function-ref name="set" scoped="" ref="0x7f06d64c14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d64c1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d64c17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d64c1a80"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64c1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f06d64ae020" loc="77:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f06d64ae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64ae3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d64ae530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d64ae6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d64ae850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d64ae9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64aeb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d64aed00"/>
        <function-ref name="get" scoped="" ref="0x7f06d64ad020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d64ad1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64ad340"/>
        <function-ref name="set" scoped="" ref="0x7f06d64ad4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d64ad660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d64ad7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d64ada80"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64adc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f06d6477580" loc="144:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f06d6477580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d6477900"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6477a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d6477c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6477db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6476020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64761b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6476340"/>
        <function-ref name="get" scoped="" ref="0x7f06d64764d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d6476660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64767f0"/>
        <function-ref name="set" scoped="" ref="0x7f06d6476980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d6476b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d6476ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6475020"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64751b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f06d6456570" loc="162:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f06d6456570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64568f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6456a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d6456c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6456da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6455020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64551b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6455340"/>
        <function-ref name="get" scoped="" ref="0x7f06d64554d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d6455660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64557f0"/>
        <function-ref name="set" scoped="" ref="0x7f06d6455980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d6455b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d6455ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6454020"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64541b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f06d644a570" loc="169:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f06d644a570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d644a8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d644aa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d644ac10"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d644ada0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6449020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64491b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6449340"/>
        <function-ref name="get" scoped="" ref="0x7f06d64494d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d6449660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64497f0"/>
        <function-ref name="set" scoped="" ref="0x7f06d6449980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d6449b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d6449ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6448020"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64481b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f06d6462580" loc="155:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f06d6462580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d6462900"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6462a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d6462c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6462db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6461020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64611b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6461340"/>
        <function-ref name="get" scoped="" ref="0x7f06d64614d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d6461660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64617f0"/>
        <function-ref name="set" scoped="" ref="0x7f06d6461980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d6461b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d6461ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6460020"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64601b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f06d64aa020" loc="82:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f06d64aa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64aa5a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d64aa730"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d64aa8c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d64aaa50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d64aabe0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64aad70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d64a9020"/>
        <function-ref name="get" scoped="" ref="0x7f06d64a91b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d64a9340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64a94d0"/>
        <function-ref name="set" scoped="" ref="0x7f06d64a9660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d64a97f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d64a9980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d64a9c10"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64a9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f06d6495200" loc="95:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f06d6495200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d6495580"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6495710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d64958a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6495a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6495bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d6495d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6494020"/>
        <function-ref name="get" scoped="" ref="0x7f06d64941b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d6494340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64944d0"/>
        <function-ref name="set" scoped="" ref="0x7f06d6494660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d64947f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d6494980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6494c10"/>
        <function-ref name="clr" scoped="" ref="0x7f06d6494da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f06d6485200" loc="106:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f06d6485200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d6485580"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6485710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d64858a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6485a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6485bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d6485d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6484020"/>
        <function-ref name="get" scoped="" ref="0x7f06d64841b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d6484340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64844d0"/>
        <function-ref name="set" scoped="" ref="0x7f06d6484660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d64847f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d6484980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6484c10"/>
        <function-ref name="clr" scoped="" ref="0x7f06d6484da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f06d6454570" loc="163:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f06d6454570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64548f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6454a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d6454c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6454da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6453020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64531b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6453340"/>
        <function-ref name="get" scoped="" ref="0x7f06d64534d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d6453660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64537f0"/>
        <function-ref name="set" scoped="" ref="0x7f06d6453980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d6453b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d6453ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6452020"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64521b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f06d6469570" loc="152:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f06d6469570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64698f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6469a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d6469c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6469da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6468020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64681b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6468340"/>
        <function-ref name="get" scoped="" ref="0x7f06d64684d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d6468660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64687f0"/>
        <function-ref name="set" scoped="" ref="0x7f06d6468980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d6468b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d6468ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6467020"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64671b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f06d64d1020" loc="54:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f06d64d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64d13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d64d1530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d64d16c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d64d1850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d64d19e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64d1b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d64d1d00"/>
        <function-ref name="get" scoped="" ref="0x7f06d64d0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d64d01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64d0340"/>
        <function-ref name="set" scoped="" ref="0x7f06d64d04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d64d0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d64d07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d64d0a80"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64d0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f06d64bc020" loc="67:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f06d64bc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64bc3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d64bc530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d64bc6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d64bc850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d64bc9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64bcb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d64bcd00"/>
        <function-ref name="get" scoped="" ref="0x7f06d64bb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d64bb1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64bb340"/>
        <function-ref name="set" scoped="" ref="0x7f06d64bb4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d64bb660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d64bb7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d64bba80"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64bbc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f06d6489200" loc="104:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f06d6489200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d6489580"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6489710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d64898a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6489a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6489bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d6489d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6488020"/>
        <function-ref name="get" scoped="" ref="0x7f06d64881b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d6488340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64884d0"/>
        <function-ref name="set" scoped="" ref="0x7f06d6488660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d64887f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d6488980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6488c10"/>
        <function-ref name="clr" scoped="" ref="0x7f06d6488da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f06d64b8020" loc="72:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f06d64b8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64b83a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d64b8530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d64b86c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d64b8850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d64b89e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64b8b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d64b8d00"/>
        <function-ref name="get" scoped="" ref="0x7f06d64b7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d64b71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64b7340"/>
        <function-ref name="set" scoped="" ref="0x7f06d64b74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d64b7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d64b77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d64b7a80"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64b7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f06d64a4200" loc="85:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f06d64a4200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64a4580"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d64a4710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d64a48a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d64a4a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d64a4bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64a4d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d64a3020"/>
        <function-ref name="get" scoped="" ref="0x7f06d64a31b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d64a3340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64a34d0"/>
        <function-ref name="set" scoped="" ref="0x7f06d64a3660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d64a37f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d64a3980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d64a3c10"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64a3da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f06d648f200" loc="98:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f06d648f200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d648f580"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d648f710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d648f8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d648fa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d648fbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d648fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d648e020"/>
        <function-ref name="get" scoped="" ref="0x7f06d648e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d648e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d648e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f06d648e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d648e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d648e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d648ec10"/>
        <function-ref name="clr" scoped="" ref="0x7f06d648eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f06d647f200" loc="109:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f06d647f200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d647f580"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d647f710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d647f8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d647fa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d647fbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d647fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d647e020"/>
        <function-ref name="get" scoped="" ref="0x7f06d647e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d647e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d647e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f06d647e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d647e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d647e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d647ec10"/>
        <function-ref name="clr" scoped="" ref="0x7f06d647eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f06d6464580" loc="154:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f06d6464580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d6464900"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6464a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d6464c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6464db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6463020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64631b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6463340"/>
        <function-ref name="get" scoped="" ref="0x7f06d64634d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d6463660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64637f0"/>
        <function-ref name="set" scoped="" ref="0x7f06d6463980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d6463b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d6463ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6462020"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64621b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f06d64e4020" loc="49:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f06d64e4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64e43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d64e4530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d64e46c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d64e4850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d64e49e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64e4b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d64e4d00"/>
        <function-ref name="get" scoped="" ref="0x7f06d64e3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d64e31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64e3340"/>
        <function-ref name="set" scoped="" ref="0x7f06d64e34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d64e3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d64e37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d64e3a80"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64e3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f06d64c7020" loc="62:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f06d64c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64c73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d64c7530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d64c76c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d64c7850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d64c79e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64c7b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d64c7d00"/>
        <function-ref name="get" scoped="" ref="0x7f06d64c6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d64c61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64c6340"/>
        <function-ref name="set" scoped="" ref="0x7f06d64c64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d64c6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d64c67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d64c6a80"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64c6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f06d64b2020" loc="75:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f06d64b2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64b23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d64b2530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d64b26c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d64b2850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d64b29e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64b2b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d64b2d00"/>
        <function-ref name="get" scoped="" ref="0x7f06d64b1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d64b11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64b1340"/>
        <function-ref name="set" scoped="" ref="0x7f06d64b14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d64b1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d64b17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d64b1a80"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64b1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f06d649e200" loc="88:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f06d649e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d649e580"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d649e710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d649e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d649ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d649ebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d649ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d649d020"/>
        <function-ref name="get" scoped="" ref="0x7f06d649d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d649d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d649d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f06d649d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d649d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d649d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d649dc10"/>
        <function-ref name="clr" scoped="" ref="0x7f06d649dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f06d6460580" loc="156:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f06d6460580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d6460900"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6460a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d6460c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6460db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d645f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d645f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d645f340"/>
        <function-ref name="get" scoped="" ref="0x7f06d645f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d645f660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d645f7f0"/>
        <function-ref name="set" scoped="" ref="0x7f06d645f980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d645fb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d645fca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d645e020"/>
        <function-ref name="clr" scoped="" ref="0x7f06d645e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f06d645a570" loc="160:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f06d645a570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d645a8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d645aa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d645ac10"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d645ada0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6459020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64591b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6459340"/>
        <function-ref name="get" scoped="" ref="0x7f06d64594d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d6459660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64597f0"/>
        <function-ref name="set" scoped="" ref="0x7f06d6459980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d6459b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d6459ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6458020"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64581b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f06d644e570" loc="166:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f06d644e570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d644e8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d644ea80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d644ec10"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d644eda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d644d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d644d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d644d340"/>
        <function-ref name="get" scoped="" ref="0x7f06d644d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d644d660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d644d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f06d644d980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d644db10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d644dca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d644c020"/>
        <function-ref name="clr" scoped="" ref="0x7f06d644c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f06d649a200" loc="93:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f06d649a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d649a580"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d649a710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d649a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d649aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d649abc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d649ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6499020"/>
        <function-ref name="get" scoped="" ref="0x7f06d64991b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d6499340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64994d0"/>
        <function-ref name="set" scoped="" ref="0x7f06d6499660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d64997f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d6499980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6499c10"/>
        <function-ref name="clr" scoped="" ref="0x7f06d6499da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f06d645e580" loc="157:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f06d645e580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d645e900"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d645ea90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d645ec20"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d645edb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d645d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d645d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d645d340"/>
        <function-ref name="get" scoped="" ref="0x7f06d645d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d645d660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d645d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f06d645d980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d645db10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d645dca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d645c020"/>
        <function-ref name="clr" scoped="" ref="0x7f06d645c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f06d64d5020" loc="52:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f06d64d5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64d53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d64d5530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d64d56c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d64d5850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d64d59e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64d5b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d64d5d00"/>
        <function-ref name="get" scoped="" ref="0x7f06d64d4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d64d41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64d4340"/>
        <function-ref name="set" scoped="" ref="0x7f06d64d44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d64d4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d64d47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d64d4a80"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64d4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f06d64c0020" loc="65:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f06d64c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64c03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d64c0530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d64c06c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d64c0850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d64c09e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64c0b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d64c0d00"/>
        <function-ref name="get" scoped="" ref="0x7f06d64bf020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d64bf1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64bf340"/>
        <function-ref name="set" scoped="" ref="0x7f06d64bf4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d64bf660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d64bf7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d64bfa80"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64bfc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f06d64ac020" loc="78:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f06d64ac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64ac3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d64ac530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d64ac6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d64ac850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d64ac9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64acb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d64acd00"/>
        <function-ref name="get" scoped="" ref="0x7f06d64ab020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d64ab1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64ab340"/>
        <function-ref name="set" scoped="" ref="0x7f06d64ab4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d64ab660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d64ab7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d64aba80"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64abc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f06d6467580" loc="153:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f06d6467580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d6467900"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6467a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d6467c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6467db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6465020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64651b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6465340"/>
        <function-ref name="get" scoped="" ref="0x7f06d64654d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d6465660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64657f0"/>
        <function-ref name="set" scoped="" ref="0x7f06d6465980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d6465b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d6465ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6464020"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64641b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f06d6452570" loc="164:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f06d6452570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64528f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6452a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d6452c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6452da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6451020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64511b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6451340"/>
        <function-ref name="get" scoped="" ref="0x7f06d64514d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d6451660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64517f0"/>
        <function-ref name="set" scoped="" ref="0x7f06d6451980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d6451b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d6451ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6450020"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64501b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f06d64a8200" loc="83:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f06d64a8200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64a8580"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d64a8710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d64a88a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d64a8a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d64a8bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64a8d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d64a7020"/>
        <function-ref name="get" scoped="" ref="0x7f06d64a71b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d64a7340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64a74d0"/>
        <function-ref name="set" scoped="" ref="0x7f06d64a7660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d64a77f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d64a7980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d64a7c10"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64a7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f06d6493200" loc="96:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f06d6493200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d6493580"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6493710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d64938a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6493a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6493bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d6493d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6492020"/>
        <function-ref name="get" scoped="" ref="0x7f06d64921b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d6492340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64924d0"/>
        <function-ref name="set" scoped="" ref="0x7f06d6492660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d64927f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d6492980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6492c10"/>
        <function-ref name="clr" scoped="" ref="0x7f06d6492da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f06d6483200" loc="107:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f06d6483200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d6483580"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6483710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d64838a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6483a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6483bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d6483d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6482020"/>
        <function-ref name="get" scoped="" ref="0x7f06d64821b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d6482340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64824d0"/>
        <function-ref name="set" scoped="" ref="0x7f06d6482660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d64827f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d6482980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6482c10"/>
        <function-ref name="clr" scoped="" ref="0x7f06d6482da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f06d64cf020" loc="55:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f06d64cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64cf3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d64cf530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d64cf6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d64cf850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d64cf9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64cfb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d64cfd00"/>
        <function-ref name="get" scoped="" ref="0x7f06d64ce020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d64ce1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64ce340"/>
        <function-ref name="set" scoped="" ref="0x7f06d64ce4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d64ce660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d64ce7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d64cea80"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64cec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f06d6487200" loc="105:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f06d6487200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d6487580"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6487710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d64878a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6487a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6487bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d6487d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6486020"/>
        <function-ref name="get" scoped="" ref="0x7f06d64861b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d6486340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64864d0"/>
        <function-ref name="set" scoped="" ref="0x7f06d6486660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d64867f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d6486980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6486c10"/>
        <function-ref name="clr" scoped="" ref="0x7f06d6486da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f06d64cb020" loc="60:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f06d64cb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64cb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d64cb530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d64cb6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d64cb850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d64cb9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64cbb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d64cbd00"/>
        <function-ref name="get" scoped="" ref="0x7f06d64ca020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d64ca1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64ca340"/>
        <function-ref name="set" scoped="" ref="0x7f06d64ca4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d64ca660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d64ca7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d64caa80"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64cac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f06d64b6020" loc="73:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f06d64b6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64b63a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d64b6530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d64b66c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d64b6850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d64b69e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64b6b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d64b6d00"/>
        <function-ref name="get" scoped="" ref="0x7f06d64b5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d64b51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64b5340"/>
        <function-ref name="set" scoped="" ref="0x7f06d64b54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d64b5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d64b57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d64b5a80"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64b5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f06d64a2200" loc="86:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f06d64a2200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64a2580"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d64a2710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d64a28a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d64a2a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d64a2bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64a2d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d64a1020"/>
        <function-ref name="get" scoped="" ref="0x7f06d64a11b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d64a1340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64a14d0"/>
        <function-ref name="set" scoped="" ref="0x7f06d64a1660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d64a17f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d64a1980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d64a1c10"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64a1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f06d648d200" loc="99:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f06d648d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d648d580"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d648d710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d648d8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d648da30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d648dbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d648dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d648c020"/>
        <function-ref name="get" scoped="" ref="0x7f06d648c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d648c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d648c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f06d648c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d648c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d648c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d648cc10"/>
        <function-ref name="clr" scoped="" ref="0x7f06d648cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f06d647d200" loc="110:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f06d647d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d647d580"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d647d710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d647d8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d647da30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d647dbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d647dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d647c020"/>
        <function-ref name="get" scoped="" ref="0x7f06d647c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d647c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d647c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f06d647c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d647c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d647c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d647cc10"/>
        <function-ref name="clr" scoped="" ref="0x7f06d647cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f06d64d9020" loc="50:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f06d64d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64d93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d64d9530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d64d96c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d64d9850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d64d99e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64d9b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d64d9d00"/>
        <function-ref name="get" scoped="" ref="0x7f06d64d8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d64d81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64d8340"/>
        <function-ref name="set" scoped="" ref="0x7f06d64d84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d64d8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d64d87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d64d8a80"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64d8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f06d64c4020" loc="63:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f06d64c4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64c43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d64c4530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d64c46c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d64c4850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d64c49e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64c4b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d64c4d00"/>
        <function-ref name="get" scoped="" ref="0x7f06d64c3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d64c31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64c3340"/>
        <function-ref name="set" scoped="" ref="0x7f06d64c34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d64c3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d64c37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d64c3a80"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64c3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f06d64b0020" loc="76:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f06d64b0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64b03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d64b0530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d64b06c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d64b0850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d64b09e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64b0b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d64b0d00"/>
        <function-ref name="get" scoped="" ref="0x7f06d64af020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d64af1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64af340"/>
        <function-ref name="set" scoped="" ref="0x7f06d64af4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d64af660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d64af7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d64afa80"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64afc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f06d649c200" loc="89:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f06d649c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d649c580"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d649c710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d649c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d649ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d649cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d649cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d649b020"/>
        <function-ref name="get" scoped="" ref="0x7f06d649b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d649b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d649b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f06d649b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d649b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d649b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d649bc10"/>
        <function-ref name="clr" scoped="" ref="0x7f06d649bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f06d646f560" loc="148:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f06d646f560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d646f8e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d646fa70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d646fc00"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d646fd90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d646e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d646e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d646e340"/>
        <function-ref name="get" scoped="" ref="0x7f06d646e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d646e660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d646e7f0"/>
        <function-ref name="set" scoped="" ref="0x7f06d646e980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d646eb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d646eca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d646d020"/>
        <function-ref name="clr" scoped="" ref="0x7f06d646d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f06d6458570" loc="161:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f06d6458570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64588f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6458a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d6458c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6458da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6457020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64571b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6457340"/>
        <function-ref name="get" scoped="" ref="0x7f06d64574d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d6457660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64577f0"/>
        <function-ref name="set" scoped="" ref="0x7f06d6457980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d6457b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d6457ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6456020"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64561b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f06d6471580" loc="147:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f06d6471580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d6471900"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6471a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d6471c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6471db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6470020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64701b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6470340"/>
        <function-ref name="get" scoped="" ref="0x7f06d64704d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d6470660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64707f0"/>
        <function-ref name="set" scoped="" ref="0x7f06d6470980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d6470b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d6470ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d646f020"/>
        <function-ref name="clr" scoped="" ref="0x7f06d646f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f06d6498200" loc="94:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f06d6498200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d6498580"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6498710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d64988a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6498a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6498bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d6498d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6497020"/>
        <function-ref name="get" scoped="" ref="0x7f06d64971b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d6497340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64974d0"/>
        <function-ref name="set" scoped="" ref="0x7f06d6497660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d64977f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d6497980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6497c10"/>
        <function-ref name="clr" scoped="" ref="0x7f06d6497da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f06d644c570" loc="168:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f06d644c570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d644c8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d644ca80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d644cc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d644cda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d644b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d644b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d644b340"/>
        <function-ref name="get" scoped="" ref="0x7f06d644b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d644b660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d644b7f0"/>
        <function-ref name="set" scoped="" ref="0x7f06d644b980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d644bb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d644bca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d644a020"/>
        <function-ref name="clr" scoped="" ref="0x7f06d644a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f06d6446580" loc="172:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f06d6446580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d6446900"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6446a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d6446c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6446db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6445020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64451b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6445340"/>
        <function-ref name="get" scoped="" ref="0x7f06d64454d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d6445660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64457f0"/>
        <function-ref name="set" scoped="" ref="0x7f06d6445980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d6445b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d6445ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6444020"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64441b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f06d64791f0" loc="143:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f06d64791f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d6479970"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6479b00"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d6479c90"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6479e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6478020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64781b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6478340"/>
        <function-ref name="get" scoped="" ref="0x7f06d64784d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d6478660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d64787f0"/>
        <function-ref name="set" scoped="" ref="0x7f06d6478980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d6478b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d6478ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6477020"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64771b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d641b6d0" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d641b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d641ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d641bbe0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d641bd70"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d641a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d641a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d641a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d641a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f06d641a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d641a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d641a980"/>
        <function-ref name="set" scoped="" ref="0x7f06d641ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d641aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d641ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6419120"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64192b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d6416100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d6416100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d6416480"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6416610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d64167a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6416930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6416ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d6416c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6416de0"/>
        <function-ref name="get" scoped="" ref="0x7f06d6414020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d64141b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d6414340"/>
        <function-ref name="set" scoped="" ref="0x7f06d64144d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d6414660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d64147f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6414a80"/>
        <function-ref name="clr" scoped="" ref="0x7f06d6414c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d6411d10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d6411d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64100e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6410270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d6410400"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6410590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6410720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64108b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6410a40"/>
        <function-ref name="get" scoped="" ref="0x7f06d6410bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d6410d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d640f020"/>
        <function-ref name="set" scoped="" ref="0x7f06d640f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d640f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d640f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d640f760"/>
        <function-ref name="clr" scoped="" ref="0x7f06d640f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d640c740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d640c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d640cac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d640cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d640cde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d640b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d640b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d640b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d640b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f06d640b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d640b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d640b980"/>
        <function-ref name="set" scoped="" ref="0x7f06d640bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d640bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d640be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d640a120"/>
        <function-ref name="clr" scoped="" ref="0x7f06d640a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d6407100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d6407100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d6407480"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6407610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d64077a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6407930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6407ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d6407c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6407de0"/>
        <function-ref name="get" scoped="" ref="0x7f06d6406020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d64061b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d6406340"/>
        <function-ref name="set" scoped="" ref="0x7f06d64064d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d6406660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d64067f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6406a80"/>
        <function-ref name="clr" scoped="" ref="0x7f06d6406c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d6403d10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d6403d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d64020e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6402270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d6402400"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6402590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6402720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d64028b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6402a40"/>
        <function-ref name="get" scoped="" ref="0x7f06d6402bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d6402d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d6401020"/>
        <function-ref name="set" scoped="" ref="0x7f06d64011b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d6401340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d64014d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6401760"/>
        <function-ref name="clr" scoped="" ref="0x7f06d64018f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d63fe740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d63fe740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d63feac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d63fec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d63fede0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d63fd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d63fd1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d63fd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d63fd4d0"/>
        <function-ref name="get" scoped="" ref="0x7f06d63fd660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d63fd7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d63fd980"/>
        <function-ref name="set" scoped="" ref="0x7f06d63fdb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d63fdca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d63fde30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d63fc120"/>
        <function-ref name="clr" scoped="" ref="0x7f06d63fc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d63f9100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d63f9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d63f9480"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d63f9610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d63f97a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d63f9930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d63f9ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d63f9c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d63f9de0"/>
        <function-ref name="get" scoped="" ref="0x7f06d63f8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d63f81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d63f8340"/>
        <function-ref name="set" scoped="" ref="0x7f06d63f84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d63f8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d63f87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d63f8a80"/>
        <function-ref name="clr" scoped="" ref="0x7f06d63f8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d63f5d10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d63f5d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d63f40e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d63f4270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d63f4400"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d63f4590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d63f4720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d63f48b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d63f4a40"/>
        <function-ref name="get" scoped="" ref="0x7f06d63f4bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d63f4d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d63f3020"/>
        <function-ref name="set" scoped="" ref="0x7f06d63f31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d63f3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d63f34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d63f3760"/>
        <function-ref name="clr" scoped="" ref="0x7f06d63f38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d63ef740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d63ef740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d63efac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d63efc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d63efde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d63ee020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d63ee1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d63ee340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d63ee4d0"/>
        <function-ref name="get" scoped="" ref="0x7f06d63ee660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d63ee7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d63ee980"/>
        <function-ref name="set" scoped="" ref="0x7f06d63eeb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d63eeca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d63eee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d63ed120"/>
        <function-ref name="clr" scoped="" ref="0x7f06d63ed2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d63ea100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d63ea100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d63ea480"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d63ea610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d63ea7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d63ea930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d63eaac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d63eac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d63eade0"/>
        <function-ref name="get" scoped="" ref="0x7f06d63e9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d63e91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d63e9340"/>
        <function-ref name="set" scoped="" ref="0x7f06d63e94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d63e9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d63e97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d63e9a80"/>
        <function-ref name="clr" scoped="" ref="0x7f06d63e9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d63e6d10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d63e6d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d63e50e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d63e5270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d63e5400"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d63e5590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d63e5720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d63e58b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d63e5a40"/>
        <function-ref name="get" scoped="" ref="0x7f06d63e5bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d63e5d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d63e4020"/>
        <function-ref name="set" scoped="" ref="0x7f06d63e41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d63e4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d63e44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d63e4760"/>
        <function-ref name="clr" scoped="" ref="0x7f06d63e48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d63e1860" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d63e1860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d63e1be0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d63e1d70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d63e0020"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d63e01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d63e0340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d63e04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d63e0660"/>
        <function-ref name="get" scoped="" ref="0x7f06d63e07f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d63e0980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d63e0b10"/>
        <function-ref name="set" scoped="" ref="0x7f06d63e0ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d63e0e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d63df020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d63df2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f06d63df440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d63dc270" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d63dc270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d63dc5f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d63dc780"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d63dc910"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d63dcaa0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d63dcc30"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d63dcdc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d63db020"/>
        <function-ref name="get" scoped="" ref="0x7f06d63db1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d63db340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d63db4d0"/>
        <function-ref name="set" scoped="" ref="0x7f06d63db660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d63db7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d63db980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d63dbc10"/>
        <function-ref name="clr" scoped="" ref="0x7f06d63dbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d63d8d10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d63d8d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d63d70e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d63d7270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d63d7400"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d63d7590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d63d7720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d63d78b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d63d7a40"/>
        <function-ref name="get" scoped="" ref="0x7f06d63d7bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d63d7d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d63d6020"/>
        <function-ref name="set" scoped="" ref="0x7f06d63d61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d63d6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d63d64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d63d6760"/>
        <function-ref name="clr" scoped="" ref="0x7f06d63d68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d63d3740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d63d3740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d63d3ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d63d3c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d63d3de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d63d2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d63d21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d63d2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d63d24d0"/>
        <function-ref name="get" scoped="" ref="0x7f06d63d2660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d63d27f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d63d2980"/>
        <function-ref name="set" scoped="" ref="0x7f06d63d2b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d63d2ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d63d2e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d63d1120"/>
        <function-ref name="clr" scoped="" ref="0x7f06d63d12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d63ce100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d63ce100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d63ce480"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d63ce610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d63ce7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d63ce930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d63ceac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d63cec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d63cede0"/>
        <function-ref name="get" scoped="" ref="0x7f06d63cc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d63cc1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d63cc340"/>
        <function-ref name="set" scoped="" ref="0x7f06d63cc4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d63cc660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d63cc7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d63cca80"/>
        <function-ref name="clr" scoped="" ref="0x7f06d63ccc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d63c9d10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d63c9d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d63c80e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d63c8270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d63c8400"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d63c8590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d63c8720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d63c88b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d63c8a40"/>
        <function-ref name="get" scoped="" ref="0x7f06d63c8bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d63c8d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d63c7020"/>
        <function-ref name="set" scoped="" ref="0x7f06d63c71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d63c7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d63c74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d63c7760"/>
        <function-ref name="clr" scoped="" ref="0x7f06d63c78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d63c4740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d63c4740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d63c4ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d63c4c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d63c4de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d63c3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d63c31b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d63c3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d63c34d0"/>
        <function-ref name="get" scoped="" ref="0x7f06d63c3660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d63c37f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d63c3980"/>
        <function-ref name="set" scoped="" ref="0x7f06d63c3b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d63c3ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d63c3e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d63c2120"/>
        <function-ref name="clr" scoped="" ref="0x7f06d63c22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d63bf100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d63bf100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d63bf480"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d63bf610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d63bf7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d63bf930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d63bfac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d63bfc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d63bfde0"/>
        <function-ref name="get" scoped="" ref="0x7f06d63be020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d63be1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d63be340"/>
        <function-ref name="set" scoped="" ref="0x7f06d63be4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d63be660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d63be7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d63bea80"/>
        <function-ref name="clr" scoped="" ref="0x7f06d63bec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d63bbd10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d63bbd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d63ba0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d63ba270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d63ba400"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d63ba590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d63ba720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d63ba8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d63baa40"/>
        <function-ref name="get" scoped="" ref="0x7f06d63babd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d63bad60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d63b9020"/>
        <function-ref name="set" scoped="" ref="0x7f06d63b91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d63b9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d63b94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d63b9760"/>
        <function-ref name="clr" scoped="" ref="0x7f06d63b98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d63b6740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d63b6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d63b6ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d63b6c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d63b6de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d63b5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d63b51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d63b5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d63b54d0"/>
        <function-ref name="get" scoped="" ref="0x7f06d63b5660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d63b57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d63b5980"/>
        <function-ref name="set" scoped="" ref="0x7f06d63b5b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d63b5ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d63b5e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d63b4120"/>
        <function-ref name="clr" scoped="" ref="0x7f06d63b42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d63b1100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d63b1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d63b1480"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d63b1610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d63b17a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d63b1930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d63b1ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d63b1c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d63b1de0"/>
        <function-ref name="get" scoped="" ref="0x7f06d63b0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d63b01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d63b0340"/>
        <function-ref name="set" scoped="" ref="0x7f06d63b04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d63b0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d63b07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d63b0a80"/>
        <function-ref name="clr" scoped="" ref="0x7f06d63b0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d63add10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d63add10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d63ac0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d63ac270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d63ac400"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d63ac590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d63ac720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d63ac8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d63aca40"/>
        <function-ref name="get" scoped="" ref="0x7f06d63acbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d63acd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d63ab020"/>
        <function-ref name="set" scoped="" ref="0x7f06d63ab1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d63ab340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d63ab4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d63ab760"/>
        <function-ref name="clr" scoped="" ref="0x7f06d63ab8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d63a8a60" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d63a8a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d63a8de0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d63a6020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d63a61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d63a6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d63a64d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d63a6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d63a67f0"/>
        <function-ref name="get" scoped="" ref="0x7f06d63a6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d63a6b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d63a6ca0"/>
        <function-ref name="set" scoped="" ref="0x7f06d63a6e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d63a5020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d63a51b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d63a5440"/>
        <function-ref name="clr" scoped="" ref="0x7f06d63a55d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d63a2460" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d63a2460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d63a27e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d63a2970"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d63a2b00"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d63a2c90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d63a2e20"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d63a1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d63a11b0"/>
        <function-ref name="get" scoped="" ref="0x7f06d63a1340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d63a14d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d63a1660"/>
        <function-ref name="set" scoped="" ref="0x7f06d63a17f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d63a1980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d63a1b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d63a1da0"/>
        <function-ref name="clr" scoped="" ref="0x7f06d63a0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d639ee00" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d639ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d639d1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d639d350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d639d4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d639d670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d639d800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d639d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d639db20"/>
        <function-ref name="get" scoped="" ref="0x7f06d639dcb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d639de40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d639c020"/>
        <function-ref name="set" scoped="" ref="0x7f06d639c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d639c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d639c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d639c760"/>
        <function-ref name="clr" scoped="" ref="0x7f06d639c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d6399740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d6399740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d6399ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6399c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d6399de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6398020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d63981b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d6398340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d63984d0"/>
        <function-ref name="get" scoped="" ref="0x7f06d6398660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d63987f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d6398980"/>
        <function-ref name="set" scoped="" ref="0x7f06d6398b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d6398ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d6398e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6397120"/>
        <function-ref name="clr" scoped="" ref="0x7f06d63972b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d6394100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d6394100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d6394480"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6394610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d63947a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6394930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6394ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d6394c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6394de0"/>
        <function-ref name="get" scoped="" ref="0x7f06d6393020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d63931b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d6393340"/>
        <function-ref name="set" scoped="" ref="0x7f06d63934d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d6393660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d63937f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6393a80"/>
        <function-ref name="clr" scoped="" ref="0x7f06d6393c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d6390d10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d6390d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d638f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d638f270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d638f400"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d638f590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d638f720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d638f8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d638fa40"/>
        <function-ref name="get" scoped="" ref="0x7f06d638fbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d638fd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d638e020"/>
        <function-ref name="set" scoped="" ref="0x7f06d638e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d638e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d638e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d638e760"/>
        <function-ref name="clr" scoped="" ref="0x7f06d638e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d638b740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d638b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d638bac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d638bc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d638bde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d638a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d638a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d638a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d638a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f06d638a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d638a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d638a980"/>
        <function-ref name="set" scoped="" ref="0x7f06d638ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d638aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d638ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6389120"/>
        <function-ref name="clr" scoped="" ref="0x7f06d63892b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d6386100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d6386100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d6386480"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6386610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d63867a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6386930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6386ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d6386c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6386de0"/>
        <function-ref name="get" scoped="" ref="0x7f06d6385020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d63851b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d6385340"/>
        <function-ref name="set" scoped="" ref="0x7f06d63854d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d6385660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d63857f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6385a80"/>
        <function-ref name="clr" scoped="" ref="0x7f06d6385c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d6381d10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d6381d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d63800e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6380270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d6380400"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6380590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6380720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d63808b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6380a40"/>
        <function-ref name="get" scoped="" ref="0x7f06d6380bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d6380d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d637f020"/>
        <function-ref name="set" scoped="" ref="0x7f06d637f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d637f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d637f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d637f760"/>
        <function-ref name="clr" scoped="" ref="0x7f06d637f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d637c740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d637c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d637cac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d637cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d637cde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d637b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d637b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d637b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d637b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f06d637b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d637b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d637b980"/>
        <function-ref name="set" scoped="" ref="0x7f06d637bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d637bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d637be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d637a120"/>
        <function-ref name="clr" scoped="" ref="0x7f06d637a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d6377100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d6377100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d6377480"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6377610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d63777a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6377930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6377ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d6377c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6377de0"/>
        <function-ref name="get" scoped="" ref="0x7f06d6376020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d63761b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d6376340"/>
        <function-ref name="set" scoped="" ref="0x7f06d63764d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d6376660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d63767f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6376a80"/>
        <function-ref name="clr" scoped="" ref="0x7f06d6376c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d6373d10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d6373d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d63720e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6372270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d6372400"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6372590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6372720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d63728b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6372a40"/>
        <function-ref name="get" scoped="" ref="0x7f06d6372bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d6372d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d6371020"/>
        <function-ref name="set" scoped="" ref="0x7f06d63711b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d6371340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d63714d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6371760"/>
        <function-ref name="clr" scoped="" ref="0x7f06d63718f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d636e740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d636e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d636eac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d636ec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d636ede0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d636d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d636d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d636d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d636d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f06d636d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d636d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d636d980"/>
        <function-ref name="set" scoped="" ref="0x7f06d636db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d636dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d636de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d636c120"/>
        <function-ref name="clr" scoped="" ref="0x7f06d636c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d6369100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d6369100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d6369480"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6369610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d63697a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6369930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6369ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d6369c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6369de0"/>
        <function-ref name="get" scoped="" ref="0x7f06d6368020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d63681b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d6368340"/>
        <function-ref name="set" scoped="" ref="0x7f06d63684d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d6368660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d63687f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6368a80"/>
        <function-ref name="clr" scoped="" ref="0x7f06d6368c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d6365d10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d6365d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d63640e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6364270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d6364400"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6364590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6364720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d63648b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6364a40"/>
        <function-ref name="get" scoped="" ref="0x7f06d6364bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d6364d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d6363020"/>
        <function-ref name="set" scoped="" ref="0x7f06d63631b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d6363340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d63634d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6363760"/>
        <function-ref name="clr" scoped="" ref="0x7f06d63638f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d6360740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d6360740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d6360ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6360c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d6360de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d635e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d635e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d635e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d635e4d0"/>
        <function-ref name="get" scoped="" ref="0x7f06d635e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d635e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d635e980"/>
        <function-ref name="set" scoped="" ref="0x7f06d635eb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d635eca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d635ee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d635d120"/>
        <function-ref name="clr" scoped="" ref="0x7f06d635d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d635a100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d635a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d635a480"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d635a610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d635a7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d635a930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d635aac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d635ac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d635ade0"/>
        <function-ref name="get" scoped="" ref="0x7f06d6359020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d63591b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d6359340"/>
        <function-ref name="set" scoped="" ref="0x7f06d63594d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d6359660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d63597f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6359a80"/>
        <function-ref name="clr" scoped="" ref="0x7f06d6359c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d6356d10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d6356d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d63550e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6355270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d6355400"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6355590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6355720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d63558b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6355a40"/>
        <function-ref name="get" scoped="" ref="0x7f06d6355bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d6355d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d6354020"/>
        <function-ref name="set" scoped="" ref="0x7f06d63541b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d6354340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d63544d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6354760"/>
        <function-ref name="clr" scoped="" ref="0x7f06d63548f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d6351740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d6351740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d6351ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6351c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d6351de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6350020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d63501b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d6350340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d63504d0"/>
        <function-ref name="get" scoped="" ref="0x7f06d6350660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d63507f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d6350980"/>
        <function-ref name="set" scoped="" ref="0x7f06d6350b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d6350ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d6350e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d634f120"/>
        <function-ref name="clr" scoped="" ref="0x7f06d634f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d634c100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d634c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d634c480"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d634c610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d634c7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d634c930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d634cac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d634cc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d634cde0"/>
        <function-ref name="get" scoped="" ref="0x7f06d634b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d634b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d634b340"/>
        <function-ref name="set" scoped="" ref="0x7f06d634b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d634b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d634b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d634ba80"/>
        <function-ref name="clr" scoped="" ref="0x7f06d634bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d6348d10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d6348d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d63470e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6347270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d6347400"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6347590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6347720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d63478b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6347a40"/>
        <function-ref name="get" scoped="" ref="0x7f06d6347bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d6347d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d6346020"/>
        <function-ref name="set" scoped="" ref="0x7f06d63461b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d6346340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d63464d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6346760"/>
        <function-ref name="clr" scoped="" ref="0x7f06d63468f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d6343740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d6343740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d6343ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6343c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d6343de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6342020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d63421b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d6342340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d63424d0"/>
        <function-ref name="get" scoped="" ref="0x7f06d6342660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d63427f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d6342980"/>
        <function-ref name="set" scoped="" ref="0x7f06d6342b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d6342ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d6342e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6341120"/>
        <function-ref name="clr" scoped="" ref="0x7f06d63412b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d633e100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d633e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d633e480"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d633e610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d633e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d633e930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d633eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d633ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d633ede0"/>
        <function-ref name="get" scoped="" ref="0x7f06d633d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d633d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d633d340"/>
        <function-ref name="set" scoped="" ref="0x7f06d633d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d633d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d633d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d633da80"/>
        <function-ref name="clr" scoped="" ref="0x7f06d633dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f06d633ad10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f06d633ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d63380e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6338270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d6338400"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d6338590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d6338720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d63388b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d6338a40"/>
        <function-ref name="get" scoped="" ref="0x7f06d6338bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d6338d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d6337020"/>
        <function-ref name="set" scoped="" ref="0x7f06d63371b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d6337340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d63374d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d6337760"/>
        <function-ref name="clr" scoped="" ref="0x7f06d63378f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f06d62c02f0" loc="44:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f06d62c02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d62c0670"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d62c0800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d62c0990"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d62c0b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d62c0cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d62c0e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d62bf020"/>
        <function-ref name="get" scoped="" ref="0x7f06d62bf1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d62bf340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d62bf4d0"/>
        <function-ref name="set" scoped="" ref="0x7f06d62bf660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d62bf7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d62bf980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d62bfc10"/>
        <function-ref name="clr" scoped="" ref="0x7f06d62bfda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f06d62d1020" loc="43:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f06d62d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d62d13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d62d1530"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d62d16c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d62d1850"/>
        <function-ref name="get" scoped="" ref="0x7f06d62d19e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d62d1b70"/>
        <function-ref name="set" scoped="" ref="0x7f06d62d1d00"/>
        <function-ref name="clr" scoped="" ref="0x7f06d62c0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f06d62bcde0" loc="44:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f06d62bcde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d62bb180"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d62bb310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d62bb4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d62bb630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d62bb7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d62bb950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d62bbae0"/>
        <function-ref name="get" scoped="" ref="0x7f06d62bbc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d62bbe00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d62ba020"/>
        <function-ref name="set" scoped="" ref="0x7f06d62ba1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d62ba340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d62ba4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d62ba760"/>
        <function-ref name="clr" scoped="" ref="0x7f06d62ba8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f06d62bdb60" loc="43:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f06d62bdb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d62bc020"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d62bc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d62bc340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d62bc4d0"/>
        <function-ref name="get" scoped="" ref="0x7f06d62bc660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d62bc7f0"/>
        <function-ref name="set" scoped="" ref="0x7f06d62bc980"/>
        <function-ref name="clr" scoped="" ref="0x7f06d62bcb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f06d62b7930" loc="44:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f06d62b7930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d62b7cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d62b7e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d62b6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d62b61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d62b6340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d62b64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d62b6660"/>
        <function-ref name="get" scoped="" ref="0x7f06d62b67f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d62b6980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d62b6b10"/>
        <function-ref name="set" scoped="" ref="0x7f06d62b6ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d62b6e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d62b5020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d62b52b0"/>
        <function-ref name="clr" scoped="" ref="0x7f06d62b5440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f06d62b8710" loc="43:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f06d62b8710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d62b8a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d62b8c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d62b8db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d62b7020"/>
        <function-ref name="get" scoped="" ref="0x7f06d62b71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d62b7340"/>
        <function-ref name="set" scoped="" ref="0x7f06d62b74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f06d62b7660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f06d62b2480" loc="44:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f06d62b2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d62b2800"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d62b2990"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d62b2b20"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d62b2cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d62b2e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d62b1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d62b11b0"/>
        <function-ref name="get" scoped="" ref="0x7f06d62b1340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d62b14d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d62b1660"/>
        <function-ref name="set" scoped="" ref="0x7f06d62b17f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d62b1980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d62b1b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d62b1da0"/>
        <function-ref name="clr" scoped="" ref="0x7f06d62b0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f06d62b31d0" loc="43:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f06d62b31d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d62b3550"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d62b36e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d62b3870"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d62b3a00"/>
        <function-ref name="get" scoped="" ref="0x7f06d62b3b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d62b3d20"/>
        <function-ref name="set" scoped="" ref="0x7f06d62b2020"/>
        <function-ref name="clr" scoped="" ref="0x7f06d62b21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f06d62ac020" loc="44:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f06d62ac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d62ac3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d62ac530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d62ac6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d62ac850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d62ac9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d62acb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d62acd00"/>
        <function-ref name="get" scoped="" ref="0x7f06d62ab020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d62ab1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d62ab340"/>
        <function-ref name="set" scoped="" ref="0x7f06d62ab4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d62ab660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d62ab7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d62aba80"/>
        <function-ref name="clr" scoped="" ref="0x7f06d62abc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f06d62afd70" loc="43:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f06d62afd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d62ad180"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d62ad310"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d62ad4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d62ad630"/>
        <function-ref name="get" scoped="" ref="0x7f06d62ad7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d62ad950"/>
        <function-ref name="set" scoped="" ref="0x7f06d62adae0"/>
        <function-ref name="clr" scoped="" ref="0x7f06d62adc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f06d62a8de0" loc="44:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f06d62a8de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d62a7180"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d62a7310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d62a74a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d62a7630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d62a77c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d62a7950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d62a7ae0"/>
        <function-ref name="get" scoped="" ref="0x7f06d62a7c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d62a7e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d62a6020"/>
        <function-ref name="set" scoped="" ref="0x7f06d62a61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d62a6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d62a64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d62a6760"/>
        <function-ref name="clr" scoped="" ref="0x7f06d62a68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f06d62a9b60" loc="43:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f06d62a9b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d62a8020"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d62a81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d62a8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d62a84d0"/>
        <function-ref name="get" scoped="" ref="0x7f06d62a8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d62a87f0"/>
        <function-ref name="set" scoped="" ref="0x7f06d62a8980"/>
        <function-ref name="clr" scoped="" ref="0x7f06d62a8b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f06d62a3930" loc="44:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f06d62a3930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d62a3cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d62a3e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d62a2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d62a21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d62a2340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d62a24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d62a2660"/>
        <function-ref name="get" scoped="" ref="0x7f06d62a27f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d62a2980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d62a2b10"/>
        <function-ref name="set" scoped="" ref="0x7f06d62a2ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d62a2e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d62a1020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d62a12b0"/>
        <function-ref name="clr" scoped="" ref="0x7f06d62a1440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f06d62a4710" loc="43:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f06d62a4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d62a4a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d62a4c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d62a4db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d62a3020"/>
        <function-ref name="get" scoped="" ref="0x7f06d62a31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d62a3340"/>
        <function-ref name="set" scoped="" ref="0x7f06d62a34d0"/>
        <function-ref name="clr" scoped="" ref="0x7f06d62a3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f06d628e150" loc="42:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f06d628e150"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f06d628e4d0"/>
        <function-ref name="disable" scoped="" ref="0x7f06d628e660"/>
        <function-ref name="captured" scoped="" ref="0x7f06d628e7f0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f06d628e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f06d628ed60" loc="43:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f06d628ed60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f06d628d180"/>
        <function-ref name="disable" scoped="" ref="0x7f06d628d310"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f06d628d4a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f06d628d630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f06d628da20" loc="44:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f06d628da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f06d628dda0"/>
        <function-ref name="disable" scoped="" ref="0x7f06d6289020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f06d62891b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f06d6289340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7f06d62728f0" loc="42:/opt/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7f06d62728f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d6272c70"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f06d6272e00"/>
        <function-ref name="captured" scoped="" ref="0x7f06d6271020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d62711b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d6271340"/>
        <function-ref name="setEdge" scoped="" ref="0x7f06d62714d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f06d6286a20" loc="40:/opt/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f06d6286a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f06d6286da0"/>
        <function-ref name="disable" scoped="" ref="0x7f06d6273020"/>
        <function-ref name="captured" scoped="" ref="0x7f06d62731b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f06d6273340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f06d62735d0" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f06d62735d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f06d6273950"/>
        <function-ref name="getControl" scoped="" ref="0x7f06d6273ae0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d6273c70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f06d6273e00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f06d6272020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d62721b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f06d6272340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f06d62724d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f06d6272660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f06d62717a0" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f06d62717a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d6271b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d6271cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d6271e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d626f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d626f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d626f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d626f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f06d626f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d626f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d626f980"/>
        <function-ref name="set" scoped="" ref="0x7f06d626fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d626fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d626fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d626e120"/>
        <function-ref name="clr" scoped="" ref="0x7f06d626e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f06d62603f0" loc="46:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f06d62603f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d6260770"/>
        <function-ref name="fired" scoped="" ref="0x7f06d6260900"/>
        <function-ref name="disable" scoped="" ref="0x7f06d6260a90"/>
        <function-ref name="edge" scoped="" ref="0x7f06d6260c20"/>
        <function-ref name="enable" scoped="" ref="0x7f06d6260db0"/>
        <function-ref name="getValue" scoped="" ref="0x7f06d625f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f06d6256580" loc="58:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f06d6256580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d6256900"/>
        <function-ref name="fired" scoped="" ref="0x7f06d6256a90"/>
        <function-ref name="disable" scoped="" ref="0x7f06d6256c20"/>
        <function-ref name="edge" scoped="" ref="0x7f06d6256db0"/>
        <function-ref name="enable" scoped="" ref="0x7f06d6255020"/>
        <function-ref name="getValue" scoped="" ref="0x7f06d62551b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f06d625d3f0" loc="49:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f06d625d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d625d770"/>
        <function-ref name="fired" scoped="" ref="0x7f06d625d900"/>
        <function-ref name="disable" scoped="" ref="0x7f06d625da90"/>
        <function-ref name="edge" scoped="" ref="0x7f06d625dc20"/>
        <function-ref name="enable" scoped="" ref="0x7f06d625ddb0"/>
        <function-ref name="getValue" scoped="" ref="0x7f06d625c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f06d625b3f0" loc="53:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f06d625b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d625b770"/>
        <function-ref name="fired" scoped="" ref="0x7f06d625b900"/>
        <function-ref name="disable" scoped="" ref="0x7f06d625ba90"/>
        <function-ref name="edge" scoped="" ref="0x7f06d625bc20"/>
        <function-ref name="enable" scoped="" ref="0x7f06d625bdb0"/>
        <function-ref name="getValue" scoped="" ref="0x7f06d625a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f06d62673f0" loc="44:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f06d62673f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d6267770"/>
        <function-ref name="fired" scoped="" ref="0x7f06d6267900"/>
        <function-ref name="disable" scoped="" ref="0x7f06d6267a90"/>
        <function-ref name="edge" scoped="" ref="0x7f06d6267c20"/>
        <function-ref name="enable" scoped="" ref="0x7f06d6267db0"/>
        <function-ref name="getValue" scoped="" ref="0x7f06d6262020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f06d62583f0" loc="56:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f06d62583f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d6258870"/>
        <function-ref name="fired" scoped="" ref="0x7f06d6258a00"/>
        <function-ref name="disable" scoped="" ref="0x7f06d6258b90"/>
        <function-ref name="edge" scoped="" ref="0x7f06d6258d20"/>
        <function-ref name="enable" scoped="" ref="0x7f06d6257020"/>
        <function-ref name="getValue" scoped="" ref="0x7f06d62571b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f06d625f3f0" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f06d625f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d625f770"/>
        <function-ref name="fired" scoped="" ref="0x7f06d625f900"/>
        <function-ref name="disable" scoped="" ref="0x7f06d625fa90"/>
        <function-ref name="edge" scoped="" ref="0x7f06d625fc20"/>
        <function-ref name="enable" scoped="" ref="0x7f06d625fdb0"/>
        <function-ref name="getValue" scoped="" ref="0x7f06d625e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f06d6255580" loc="59:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f06d6255580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d6255900"/>
        <function-ref name="fired" scoped="" ref="0x7f06d6255a90"/>
        <function-ref name="disable" scoped="" ref="0x7f06d6255c20"/>
        <function-ref name="edge" scoped="" ref="0x7f06d6255db0"/>
        <function-ref name="enable" scoped="" ref="0x7f06d6254020"/>
        <function-ref name="getValue" scoped="" ref="0x7f06d62541b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f06d62633d0" loc="42:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f06d62633d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d6263750"/>
        <function-ref name="fired" scoped="" ref="0x7f06d62638e0"/>
        <function-ref name="disable" scoped="" ref="0x7f06d6263a70"/>
        <function-ref name="edge" scoped="" ref="0x7f06d6263c00"/>
        <function-ref name="enable" scoped="" ref="0x7f06d6263d90"/>
        <function-ref name="getValue" scoped="" ref="0x7f06d6268020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f06d625a3f0" loc="54:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f06d625a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d625a770"/>
        <function-ref name="fired" scoped="" ref="0x7f06d625a900"/>
        <function-ref name="disable" scoped="" ref="0x7f06d625aa90"/>
        <function-ref name="edge" scoped="" ref="0x7f06d625ac20"/>
        <function-ref name="enable" scoped="" ref="0x7f06d625adb0"/>
        <function-ref name="getValue" scoped="" ref="0x7f06d6259020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f06d62623f0" loc="45:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f06d62623f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d6262770"/>
        <function-ref name="fired" scoped="" ref="0x7f06d6262900"/>
        <function-ref name="disable" scoped="" ref="0x7f06d6262a90"/>
        <function-ref name="edge" scoped="" ref="0x7f06d6262c20"/>
        <function-ref name="enable" scoped="" ref="0x7f06d6262db0"/>
        <function-ref name="getValue" scoped="" ref="0x7f06d6260020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f06d6257580" loc="57:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f06d6257580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d6257900"/>
        <function-ref name="fired" scoped="" ref="0x7f06d6257a90"/>
        <function-ref name="disable" scoped="" ref="0x7f06d6257c20"/>
        <function-ref name="edge" scoped="" ref="0x7f06d6257db0"/>
        <function-ref name="enable" scoped="" ref="0x7f06d6256020"/>
        <function-ref name="getValue" scoped="" ref="0x7f06d62561b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f06d625e3f0" loc="48:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f06d625e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d625e770"/>
        <function-ref name="fired" scoped="" ref="0x7f06d625e900"/>
        <function-ref name="disable" scoped="" ref="0x7f06d625ea90"/>
        <function-ref name="edge" scoped="" ref="0x7f06d625ec20"/>
        <function-ref name="enable" scoped="" ref="0x7f06d625edb0"/>
        <function-ref name="getValue" scoped="" ref="0x7f06d625d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f06d625c3f0" loc="52:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f06d625c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d625c770"/>
        <function-ref name="fired" scoped="" ref="0x7f06d625c900"/>
        <function-ref name="disable" scoped="" ref="0x7f06d625ca90"/>
        <function-ref name="edge" scoped="" ref="0x7f06d625cc20"/>
        <function-ref name="enable" scoped="" ref="0x7f06d625cdb0"/>
        <function-ref name="getValue" scoped="" ref="0x7f06d625b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f06d62683f0" loc="43:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f06d62683f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d6268770"/>
        <function-ref name="fired" scoped="" ref="0x7f06d6268900"/>
        <function-ref name="disable" scoped="" ref="0x7f06d6268a90"/>
        <function-ref name="edge" scoped="" ref="0x7f06d6268c20"/>
        <function-ref name="enable" scoped="" ref="0x7f06d6268db0"/>
        <function-ref name="getValue" scoped="" ref="0x7f06d6267020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f06d62593f0" loc="55:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f06d62593f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d6259770"/>
        <function-ref name="fired" scoped="" ref="0x7f06d6259900"/>
        <function-ref name="disable" scoped="" ref="0x7f06d6259a90"/>
        <function-ref name="edge" scoped="" ref="0x7f06d6259c20"/>
        <function-ref name="enable" scoped="" ref="0x7f06d6259db0"/>
        <function-ref name="getValue" scoped="" ref="0x7f06d6258020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f06d624c3f0" loc="43:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f06d624c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d624c770"/>
        <function-ref name="fired" scoped="" ref="0x7f06d624c900"/>
        <function-ref name="disable" scoped="" ref="0x7f06d624ca90"/>
        <function-ref name="edge" scoped="" ref="0x7f06d624cc20"/>
        <function-ref name="enable" scoped="" ref="0x7f06d624cdb0"/>
        <function-ref name="getValue" scoped="" ref="0x7f06d624b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f06d6241580" loc="55:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f06d6241580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d6241900"/>
        <function-ref name="fired" scoped="" ref="0x7f06d6241a90"/>
        <function-ref name="disable" scoped="" ref="0x7f06d6241c20"/>
        <function-ref name="edge" scoped="" ref="0x7f06d6241db0"/>
        <function-ref name="enable" scoped="" ref="0x7f06d6240020"/>
        <function-ref name="getValue" scoped="" ref="0x7f06d62401b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f06d62493f0" loc="46:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f06d62493f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d6249770"/>
        <function-ref name="fired" scoped="" ref="0x7f06d6249900"/>
        <function-ref name="disable" scoped="" ref="0x7f06d6249a90"/>
        <function-ref name="edge" scoped="" ref="0x7f06d6249c20"/>
        <function-ref name="enable" scoped="" ref="0x7f06d6249db0"/>
        <function-ref name="getValue" scoped="" ref="0x7f06d6248020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f06d62473f0" loc="50:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f06d62473f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d6247770"/>
        <function-ref name="fired" scoped="" ref="0x7f06d6247900"/>
        <function-ref name="disable" scoped="" ref="0x7f06d6247a90"/>
        <function-ref name="edge" scoped="" ref="0x7f06d6247c20"/>
        <function-ref name="enable" scoped="" ref="0x7f06d6247db0"/>
        <function-ref name="getValue" scoped="" ref="0x7f06d6245020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f06d624e3f0" loc="41:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f06d624e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d624e770"/>
        <function-ref name="fired" scoped="" ref="0x7f06d624e900"/>
        <function-ref name="disable" scoped="" ref="0x7f06d624ea90"/>
        <function-ref name="edge" scoped="" ref="0x7f06d624ec20"/>
        <function-ref name="enable" scoped="" ref="0x7f06d624edb0"/>
        <function-ref name="getValue" scoped="" ref="0x7f06d624d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f06d62433f0" loc="53:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f06d62433f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d6243870"/>
        <function-ref name="fired" scoped="" ref="0x7f06d6243a00"/>
        <function-ref name="disable" scoped="" ref="0x7f06d6243b90"/>
        <function-ref name="edge" scoped="" ref="0x7f06d6243d20"/>
        <function-ref name="enable" scoped="" ref="0x7f06d6242020"/>
        <function-ref name="getValue" scoped="" ref="0x7f06d62421b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f06d624b3f0" loc="44:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f06d624b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d624b770"/>
        <function-ref name="fired" scoped="" ref="0x7f06d624b900"/>
        <function-ref name="disable" scoped="" ref="0x7f06d624ba90"/>
        <function-ref name="edge" scoped="" ref="0x7f06d624bc20"/>
        <function-ref name="enable" scoped="" ref="0x7f06d624bdb0"/>
        <function-ref name="getValue" scoped="" ref="0x7f06d624a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f06d6240580" loc="56:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f06d6240580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d6240900"/>
        <function-ref name="fired" scoped="" ref="0x7f06d6240a90"/>
        <function-ref name="disable" scoped="" ref="0x7f06d6240c20"/>
        <function-ref name="edge" scoped="" ref="0x7f06d6240db0"/>
        <function-ref name="enable" scoped="" ref="0x7f06d623f020"/>
        <function-ref name="getValue" scoped="" ref="0x7f06d623f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f06d62503b0" loc="39:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f06d62503b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d6250730"/>
        <function-ref name="fired" scoped="" ref="0x7f06d62508c0"/>
        <function-ref name="disable" scoped="" ref="0x7f06d6250a50"/>
        <function-ref name="edge" scoped="" ref="0x7f06d6250be0"/>
        <function-ref name="enable" scoped="" ref="0x7f06d6250d70"/>
        <function-ref name="getValue" scoped="" ref="0x7f06d624f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f06d62453f0" loc="51:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f06d62453f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d6245770"/>
        <function-ref name="fired" scoped="" ref="0x7f06d6245900"/>
        <function-ref name="disable" scoped="" ref="0x7f06d6245a90"/>
        <function-ref name="edge" scoped="" ref="0x7f06d6245c20"/>
        <function-ref name="enable" scoped="" ref="0x7f06d6245db0"/>
        <function-ref name="getValue" scoped="" ref="0x7f06d6244020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f06d624d3f0" loc="42:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f06d624d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d624d770"/>
        <function-ref name="fired" scoped="" ref="0x7f06d624d900"/>
        <function-ref name="disable" scoped="" ref="0x7f06d624da90"/>
        <function-ref name="edge" scoped="" ref="0x7f06d624dc20"/>
        <function-ref name="enable" scoped="" ref="0x7f06d624ddb0"/>
        <function-ref name="getValue" scoped="" ref="0x7f06d624c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f06d6242580" loc="54:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f06d6242580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d6242900"/>
        <function-ref name="fired" scoped="" ref="0x7f06d6242a90"/>
        <function-ref name="disable" scoped="" ref="0x7f06d6242c20"/>
        <function-ref name="edge" scoped="" ref="0x7f06d6242db0"/>
        <function-ref name="enable" scoped="" ref="0x7f06d6241020"/>
        <function-ref name="getValue" scoped="" ref="0x7f06d62411b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f06d624a3f0" loc="45:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f06d624a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d624a770"/>
        <function-ref name="fired" scoped="" ref="0x7f06d624a900"/>
        <function-ref name="disable" scoped="" ref="0x7f06d624aa90"/>
        <function-ref name="edge" scoped="" ref="0x7f06d624ac20"/>
        <function-ref name="enable" scoped="" ref="0x7f06d624adb0"/>
        <function-ref name="getValue" scoped="" ref="0x7f06d6249020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f06d62483f0" loc="49:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f06d62483f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d6248770"/>
        <function-ref name="fired" scoped="" ref="0x7f06d6248900"/>
        <function-ref name="disable" scoped="" ref="0x7f06d6248a90"/>
        <function-ref name="edge" scoped="" ref="0x7f06d6248c20"/>
        <function-ref name="enable" scoped="" ref="0x7f06d6248db0"/>
        <function-ref name="getValue" scoped="" ref="0x7f06d6247020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f06d624f3f0" loc="40:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f06d624f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d624f770"/>
        <function-ref name="fired" scoped="" ref="0x7f06d624f900"/>
        <function-ref name="disable" scoped="" ref="0x7f06d624fa90"/>
        <function-ref name="edge" scoped="" ref="0x7f06d624fc20"/>
        <function-ref name="enable" scoped="" ref="0x7f06d624fdb0"/>
        <function-ref name="getValue" scoped="" ref="0x7f06d624e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f06d62443f0" loc="52:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f06d62443f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d6244770"/>
        <function-ref name="fired" scoped="" ref="0x7f06d6244900"/>
        <function-ref name="disable" scoped="" ref="0x7f06d6244a90"/>
        <function-ref name="edge" scoped="" ref="0x7f06d6244c20"/>
        <function-ref name="enable" scoped="" ref="0x7f06d6244db0"/>
        <function-ref name="getValue" scoped="" ref="0x7f06d6243020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f06d616d610" loc="46:/opt/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f06d616d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d616d990"/>
        <function-ref name="fired" scoped="" ref="0x7f06d616db20"/>
        <function-ref name="disable" scoped="" ref="0x7f06d616dcb0"/>
        <function-ref name="edge" scoped="" ref="0x7f06d616de40"/>
        <function-ref name="enable" scoped="" ref="0x7f06d6160020"/>
        <function-ref name="getValue" scoped="" ref="0x7f06d61601b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f06d616ea30" loc="45:/opt/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f06d616ea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f06d616edb0"/>
        <function-ref name="disable" scoped="" ref="0x7f06d616d020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f06d616d1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f06d616d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f06d615d610" loc="46:/opt/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f06d615d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d615d990"/>
        <function-ref name="fired" scoped="" ref="0x7f06d615db20"/>
        <function-ref name="disable" scoped="" ref="0x7f06d615dcb0"/>
        <function-ref name="edge" scoped="" ref="0x7f06d615de40"/>
        <function-ref name="enable" scoped="" ref="0x7f06d615c020"/>
        <function-ref name="getValue" scoped="" ref="0x7f06d615c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f06d615ea70" loc="45:/opt/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f06d615ea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f06d615edf0"/>
        <function-ref name="disable" scoped="" ref="0x7f06d615d020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f06d615d1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f06d615d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f06d5cc2e50" loc="69:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f06d5cc2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cc1410"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cc15a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f06d5cce160" loc="47:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f06d5cce160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5cce4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f06d5cc8e50" loc="63:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f06d5cc8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cc6210"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cc63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f06d5cc0880" loc="72:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f06d5cc0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cc0c00"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cc0d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f06d5cb80a0" loc="86:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f06d5cb80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cb8420"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cb85b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f06d5cbf0a0" loc="73:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f06d5cbf0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cbf420"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cbf5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f06d5cac500" loc="108:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f06d5cac500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cac880"/>
        <function-ref name="write" scoped="" ref="0x7f06d5caca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f06d5cae500" loc="104:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f06d5cae500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cae880"/>
        <function-ref name="write" scoped="" ref="0x7f06d5caea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f06d5ccc490" loc="50:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f06d5ccc490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5ccc810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f06d5cb4880" loc="93:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f06d5cb4880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cb4c00"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cb4d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f06d5caf500" loc="102:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f06d5caf500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5caf880"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cafa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f06d5cc6e50" loc="65:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f06d5cc6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cc3210"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cc33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f06d5cc3e50" loc="67:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f06d5cc3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cc2210"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cc23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f06d5cba880" loc="83:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f06d5cba880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cbac00"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cbad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f06d5cbb0a0" loc="79:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f06d5cbb0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cbb420"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cbb5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f06d5cbf880" loc="74:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f06d5cbf880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cbfc00"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cbfd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f06d5cd0a90" loc="42:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f06d5cd0a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f06d5cd0e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f06d5ccf020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f06d5ccf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f06d5ccbe00" loc="54:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f06d5ccbe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5cca1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f06d5cca490" loc="55:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f06d5cca490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5cca910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f06d5cb3c80" loc="95:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f06d5cb3c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cb20a0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cb2230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f06d5ccabe0" loc="56:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f06d5ccabe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5cc9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f06d5cafce0" loc="103:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f06d5cafce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cae0a0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cae230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f06d5ccb160" loc="52:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f06d5ccb160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5ccb4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f06d5cb40a0" loc="92:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f06d5cb40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cb4420"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cb45b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f06d5cc3670" loc="66:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f06d5cc3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cc39f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cc3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f06d5cc6670" loc="64:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f06d5cc6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cc69f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cc6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f06d5ccfad0" loc="46:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f06d5ccfad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5ccfe50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f06d5cb50a0" loc="90:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f06d5cb50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cb5420"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cb55b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f06d5cb8880" loc="87:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f06d5cb8880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cb8c00"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cb8d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f06d5cb5880" loc="91:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f06d5cb5880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cb5c00"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cb5d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f06d5cadce0" loc="107:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f06d5cadce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cac0a0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cac230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f06d5caece0" loc="105:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f06d5caece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cad0a0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cad230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f06d5cbb880" loc="80:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f06d5cbb880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cbbc00"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cbbd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f06d5cb60a0" loc="88:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f06d5cb60a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cb6420"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cb65b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f06d5cb0ce0" loc="101:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f06d5cb0ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5caf0a0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5caf230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f06d5cbd880" loc="76:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f06d5cbd880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cbdc00"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cbdd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f06d5cacce0" loc="111:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f06d5cacce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f06d5cab0a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f06d5cab230"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cab3c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f06d5cab550"/>
        <function-ref name="readDone" scoped="" ref="0x7f06d5cab6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f06d5ccf480" loc="45:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f06d5ccf480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5ccf800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f06d5cc8670" loc="62:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f06d5cc8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cc89f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cc8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f06d5cc2670" loc="68:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f06d5cc2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cc29f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cc2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f06d5cb90a0" loc="84:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f06d5cb90a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cb9420"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cb95b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f06d5cbd0a0" loc="75:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f06d5cbd0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cbd420"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cbd5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f06d5cb9880" loc="85:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f06d5cb9880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cb9c00"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cb9d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f06d5cc1870" loc="70:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f06d5cc1870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cc1bf0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cc1d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f06d5cce7b0" loc="48:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f06d5cce7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5cceb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f06d5cc00a0" loc="71:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f06d5cc00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cc0420"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cc05b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f06d5cd1e20" loc="41:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f06d5cd1e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d5cd01c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f06d5cd0350"/>
        <function-ref name="request" scoped="" ref="0x7f06d5cd04e0"/>
        <function-ref name="granted" scoped="" ref="0x7f06d5cd0670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d5cd0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f06d5cc92f0" loc="57:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f06d5cc92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5cc9670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f06d5cc8020" loc="59:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f06d5cc8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5cc83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f06d5cb0500" loc="100:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f06d5cb0500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cb0880"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cb0a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f06d5cb2ce0" loc="99:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f06d5cb2ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cb00a0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cb0230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f06d5ccb7b0" loc="53:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f06d5ccb7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5ccbb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f06d5cb2500" loc="96:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f06d5cb2500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cb2880"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cb2a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f06d5cad500" loc="106:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f06d5cad500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cad880"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cada10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f06d5cba0a0" loc="81:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f06d5cba0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cba420"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cba5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f06d5cb6880" loc="89:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f06d5cb6880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cb6c00"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cb6d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f06d5ccee00" loc="49:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f06d5ccee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5ccc1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f06d5cccae0" loc="51:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f06d5cccae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5ccce60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f06d5cbc0a0" loc="77:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f06d5cbc0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cbc420"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cbc5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f06d5cc9940" loc="58:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f06d5cc9940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5cc9cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f06d5cbc880" loc="78:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f06d5cbc880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cbcc00"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cbcd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f06d5cb30a0" loc="94:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f06d5cb30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5cb3820"/>
        <function-ref name="write" scoped="" ref="0x7f06d5cb39b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f06d5cab9b0" loc="112:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f06d5cab9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f06d5cabd30"/>
        <function-ref name="writeDone" scoped="" ref="0x7f06d5caa020"/>
        <function-ref name="write" scoped="" ref="0x7f06d5caa1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f06d5caa340"/>
        <function-ref name="readDone" scoped="" ref="0x7f06d5caa4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f06d611d630" loc="41:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f06d611d630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f06d611d9b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f06d611db40"/>
        <function-ref name="write" scoped="" ref="0x7f06d611dcd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f06d611de60"/>
        <function-ref name="readDone" scoped="" ref="0x7f06d611c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f06d611e680" loc="40:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f06d611e680"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f06d611ea00"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f06d611eb90"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f06d611ed20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f06d611c8c0" loc="42:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f06d611c8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d611cc40"/>
        <function-ref name="write" scoped="" ref="0x7f06d611cdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f06d611a6f0" loc="43:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f06d611a6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d611aa70"/>
        <function-ref name="write" scoped="" ref="0x7f06d611ac00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f06d6121960" loc="39:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f06d6121960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d6121ce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f06d6121e70"/>
        <function-ref name="request" scoped="" ref="0x7f06d611e030"/>
        <function-ref name="granted" scoped="" ref="0x7f06d611e1c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d611e350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f06d6119510" loc="44:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f06d6119510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d6119890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f06d6103680" loc="55:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f06d6103680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d6103a00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d6103b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f06d6114bb0" loc="46:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f06d6114bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f06d6113020"/>
        <function-ref name="writeDone" scoped="" ref="0x7f06d61131b0"/>
        <function-ref name="write" scoped="" ref="0x7f06d6113340"/>
        <function-ref name="beginRead" scoped="" ref="0x7f06d61134d0"/>
        <function-ref name="readDone" scoped="" ref="0x7f06d6113660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f06d6118930" loc="44:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f06d6118930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f06d6118cb0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f06d6118e40"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f06d6115020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f06d610d080" loc="54:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f06d610d080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f06d610d400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f06d610c020" loc="56:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7f06d610c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f06d610c3a0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f06d610c530"/>
        <function-ref name="isState" scoped="" ref="0x7f06d610c6c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f06d610c850"/>
        <function-ref name="requestState" scoped="" ref="0x7f06d610c9e0"/>
        <function-ref name="forceState" scoped="" ref="0x7f06d610cb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f06d610f400" loc="53:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f06d610f400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d610f780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f06d610f910"/>
        <function-ref name="request" scoped="" ref="0x7f06d610faa0"/>
        <function-ref name="granted" scoped="" ref="0x7f06d610fc30"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d610fdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f06d6111020" loc="47:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f06d6111020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d61113a0"/>
        <function-ref name="write" scoped="" ref="0x7f06d6111530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f06d6111db0" loc="48:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f06d6111db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d6110180"/>
        <function-ref name="write" scoped="" ref="0x7f06d6110310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f06d610cdf0" loc="57:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f06d610cdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f06d610b1c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f06d610b350"/>
        <function-ref name="led1On" scoped="" ref="0x7f06d610b4e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f06d610b670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f06d610b800"/>
        <function-ref name="get" scoped="" ref="0x7f06d610b990"/>
        <function-ref name="led1Off" scoped="" ref="0x7f06d610bb20"/>
        <function-ref name="led2Off" scoped="" ref="0x7f06d61041b0"/>
        <function-ref name="set" scoped="" ref="0x7f06d610bcb0"/>
        <function-ref name="led0On" scoped="" ref="0x7f06d610be40"/>
        <function-ref name="led2On" scoped="" ref="0x7f06d6104020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f06d6115810" loc="45:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f06d6115810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d6115b90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f06d6115d20"/>
        <function-ref name="request" scoped="" ref="0x7f06d6114020"/>
        <function-ref name="granted" scoped="" ref="0x7f06d61141b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d6114340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f06d60fe120" loc="88:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7f06d60fe120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f06d60fe4a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f06d60fe630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f06d6110ba0" loc="49:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f06d6110ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d610f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f06d60a4770" loc="67:/opt/tinyos-main/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f06d60a4770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f06d60a4af0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f06d60a4c80"/>
        <function-ref name="isState" scoped="" ref="0x7f06d60a4e10"/>
        <function-ref name="isIdle" scoped="" ref="0x7f06d609c020"/>
        <function-ref name="requestState" scoped="" ref="0x7f06d609c1b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f06d609c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f06d60a0280" loc="66:/opt/tinyos-main/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f06d60a0280"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f06d60a0600"/>
        <function-ref name="toIdle" scoped="" ref="0x7f06d60a0790"/>
        <function-ref name="isState" scoped="" ref="0x7f06d60a0920"/>
        <function-ref name="isIdle" scoped="" ref="0x7f06d60a0ab0"/>
        <function-ref name="requestState" scoped="" ref="0x7f06d60a0c40"/>
        <function-ref name="forceState" scoped="" ref="0x7f06d60a0dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f06d609b020" loc="66:/opt/tinyos-main/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f06d609b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d609b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f06d609bb70" loc="67:/opt/tinyos-main/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f06d609bb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f06d609a020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f06d609a1b0"/>
        <function-ref name="isState" scoped="" ref="0x7f06d609a340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f06d609a4d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f06d609a660"/>
        <function-ref name="forceState" scoped="" ref="0x7f06d609a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f06d5cf9020" loc="44:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f06d5cf9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d5cf93a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d5cf9530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f06d60818f0" loc="43:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f06d60818f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f06d6081c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f06d6082c40" loc="42:/opt/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f06d6082c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d6081020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f06d60811b0"/>
        <function-ref name="request" scoped="" ref="0x7f06d6081340"/>
        <function-ref name="granted" scoped="" ref="0x7f06d60814d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d6081660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f06d4b6faf0" loc="82:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f06d4b6faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f06d4b6fe70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f06d4b6e030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f06d4b6c440" loc="87:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f06d4b6c440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d4b6c7c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d4b6c950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f06d4b6cbe0" loc="89:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f06d4b6cbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f06d4b6b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f06d4b6e2c0" loc="83:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f06d4b6e2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f06d4b6e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f06d4b71e70" loc="81:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f06d4b71e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d4b6f220"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f06d4b6f3b0"/>
        <function-ref name="request" scoped="" ref="0x7f06d4b6f540"/>
        <function-ref name="granted" scoped="" ref="0x7f06d4b6f6d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d4b6f860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f06d4b6e8d0" loc="85:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f06d4b6e8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f06d4b6ec50"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f06d4b6ede0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f06d4b6c020"/>
        <function-ref name="write" scoped="" ref="0x7f06d4b6c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f06d60145e0" loc="74:/opt/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f06d60145e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f06d6014960"/>
        <function-ref name="configure" scoped="" ref="0x7f06d6014af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f06d6011510" loc="77:/opt/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f06d6011510"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d6011890"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d6011a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f06d600e600" loc="80:/opt/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f06d600e600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f06d600e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f06d6014dd0" loc="75:/opt/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f06d6014dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f06d6013180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f06d6010370" loc="79:/opt/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f06d6010370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d60106f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f06d6010880"/>
        <function-ref name="request" scoped="" ref="0x7f06d6010a10"/>
        <function-ref name="granted" scoped="" ref="0x7f06d6010ba0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d6010d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f06d601aa20" loc="73:/opt/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f06d601aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d601ada0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f06d6016020"/>
        <function-ref name="request" scoped="" ref="0x7f06d60161b0"/>
        <function-ref name="granted" scoped="" ref="0x7f06d6016340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d60164d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f06d6013480" loc="76:/opt/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f06d6013480"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f06d6013800"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f06d6013990"/>
        <function-ref name="splitRead" scoped="" ref="0x7f06d6013b20"/>
        <function-ref name="write" scoped="" ref="0x7f06d6013cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f06d60096a0" loc="81:/opt/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f06d60096a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f06d6009a20"/>
        <function-ref name="txDone" scoped="" ref="0x7f06d6009bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f06d5f98c40" loc="76:/opt/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f06d5f98c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f06d5f97020"/>
        <function-ref name="configure" scoped="" ref="0x7f06d5f971b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f06d5f96700" loc="79:/opt/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f06d5f96700"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d5f96aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d5f96c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f06d5f95e00" loc="82:/opt/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f06d5f95e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f06d5f941c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f06d5f97440" loc="77:/opt/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f06d5f97440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f06d5f977c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f06d5f94490" loc="83:/opt/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f06d5f94490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f06d5f94810"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f06d5f949a0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f06d5f94b30"/>
        <function-ref name="enableUart" scoped="" ref="0x7f06d5f94cc0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f06d5f94e50"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f06d5f93020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f06d5f931b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f06d5f93340"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f06d5f934d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f06d5f93660"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f06d5f937f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f06d5f93980"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f06d5f93b10"/>
        <function-ref name="getUbr" scoped="" ref="0x7f06d5f93da0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f06d5f92020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f06d5f921b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f06d5f92340"/>
        <function-ref name="isUart" scoped="" ref="0x7f06d5f924d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f06d5f92660"/>
        <function-ref name="isSpi" scoped="" ref="0x7f06d5f927f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f06d5f92980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f06d5f92b10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f06d5f92ca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f06d5f92e30"/>
        <function-ref name="getMode" scoped="" ref="0x7f06d5f91020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f06d5f913b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f06d5f91540"/>
        <function-ref name="setUbr" scoped="" ref="0x7f06d5f916d0"/>
        <function-ref name="tx" scoped="" ref="0x7f06d5f91860"/>
        <function-ref name="getUctl" scoped="" ref="0x7f06d5f919f0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f06d5f91b80"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f06d5f91d10"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f06d5f90020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f06d5f901b0"/>
        <function-ref name="rx" scoped="" ref="0x7f06d5f90340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f06d5f904d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f06d5f90660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f06d5f907f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f06d5f90980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f06d5f90b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f06d5f8f5a0" loc="85:/opt/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f06d5f8f5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f06d5f8f920"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f06d5f8fab0"/>
        <function-ref name="led1On" scoped="" ref="0x7f06d5f8fc40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f06d5f8fdd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f06d5f8e020"/>
        <function-ref name="get" scoped="" ref="0x7f06d5f8e1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f06d5f8e340"/>
        <function-ref name="led2On" scoped="" ref="0x7f06d5f8e980"/>
        <function-ref name="set" scoped="" ref="0x7f06d5f8e660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f06d5f8e4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f06d5f8e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f06d5f95060" loc="81:/opt/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f06d5f95060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d5f95400"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f06d5f95590"/>
        <function-ref name="request" scoped="" ref="0x7f06d5f95720"/>
        <function-ref name="granted" scoped="" ref="0x7f06d5f958b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d5f95a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f06d5f99e80" loc="75:/opt/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f06d5f99e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d5f98240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f06d5f983d0"/>
        <function-ref name="request" scoped="" ref="0x7f06d5f98560"/>
        <function-ref name="granted" scoped="" ref="0x7f06d5f986f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d5f98880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f06d5f97a50" loc="78:/opt/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f06d5f97a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f06d5f97dd0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f06d5f96020"/>
        <function-ref name="splitRead" scoped="" ref="0x7f06d5f961b0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5f96340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f06d5f90de0" loc="84:/opt/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f06d5f90de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f06d5f8f180"/>
        <function-ref name="txDone" scoped="" ref="0x7f06d5f8f310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7f06d5f8ec50" loc="102:/opt/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7f06d5f8ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f06d5f8d020"/>
        <function-ref name="runTask" scoped="" ref="0x7f06d5f8d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f06d5f7d980" loc="78:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f06d5f7d980"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f06d5f7dd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f06d5f803b0" loc="77:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f06d5f803b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f06d5f80730"/>
        <function-ref name="txDone" scoped="" ref="0x7f06d5f808c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f06d5f87860" loc="76:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f06d5f87860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f06d5f87be0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f06d5f87d70"/>
        <function-ref name="setUctl" scoped="" ref="0x7f06d5f84020"/>
        <function-ref name="enableUart" scoped="" ref="0x7f06d5f841b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f06d5f84340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f06d5f844d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f06d5f84660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f06d5f847f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f06d5f84980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f06d5f84b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f06d5f84ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f06d5f84e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f06d5f83020"/>
        <function-ref name="getUbr" scoped="" ref="0x7f06d5f832b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f06d5f83440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f06d5f835d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f06d5f83760"/>
        <function-ref name="isUart" scoped="" ref="0x7f06d5f838f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f06d5f83a80"/>
        <function-ref name="isSpi" scoped="" ref="0x7f06d5f83c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f06d5f83da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f06d5f82020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f06d5f821b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f06d5f82340"/>
        <function-ref name="getMode" scoped="" ref="0x7f06d5f824d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f06d5f82860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f06d5f829f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f06d5f82b80"/>
        <function-ref name="tx" scoped="" ref="0x7f06d5f82d10"/>
        <function-ref name="getUctl" scoped="" ref="0x7f06d5f81020"/>
        <function-ref name="disableUart" scoped="" ref="0x7f06d5f811b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f06d5f81340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f06d5f814d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f06d5f81660"/>
        <function-ref name="rx" scoped="" ref="0x7f06d5f817f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f06d5f81980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f06d5f81b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f06d5f81ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f06d5f81e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f06d5f80020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f06d5f44670" loc="82:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f06d5f44670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d5f449f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d5f44b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d5f44d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d5f43020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d5f431b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d5f43340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d5f434d0"/>
        <function-ref name="get" scoped="" ref="0x7f06d5f43660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d5f437f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d5f43980"/>
        <function-ref name="set" scoped="" ref="0x7f06d5f43b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d5f43ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d5f43e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d5f42120"/>
        <function-ref name="clr" scoped="" ref="0x7f06d5f422b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f06d5f77dc0" loc="76:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f06d5f77dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f06d5f76180"/>
        <function-ref name="txDone" scoped="" ref="0x7f06d5f76310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f06d5f42670" loc="83:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f06d5f42670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d5f429f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d5f42b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d5f42d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d5f41020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d5f411b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d5f41340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d5f414d0"/>
        <function-ref name="get" scoped="" ref="0x7f06d5f41660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d5f417f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d5f41980"/>
        <function-ref name="set" scoped="" ref="0x7f06d5f41b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d5f41ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d5f41e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d5f40120"/>
        <function-ref name="clr" scoped="" ref="0x7f06d5f402b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f06d5f40670" loc="84:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f06d5f40670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d5f409f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d5f40b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d5f40d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d5f3f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d5f3f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d5f3f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d5f3f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f06d5f3f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d5f3f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d5f3f980"/>
        <function-ref name="set" scoped="" ref="0x7f06d5f3fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d5f3fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d5f3fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d5f3e120"/>
        <function-ref name="clr" scoped="" ref="0x7f06d5f3e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f06d5f7b060" loc="75:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f06d5f7b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f06d5f7b3e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f06d5f7b570"/>
        <function-ref name="setUctl" scoped="" ref="0x7f06d5f7b700"/>
        <function-ref name="enableUart" scoped="" ref="0x7f06d5f7b890"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f06d5f7ba20"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f06d5f7bbb0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f06d5f7bd40"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f06d5f7a020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f06d5f7a1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f06d5f7a340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f06d5f7a4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f06d5f7a660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f06d5f7a7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f06d5f7aa80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f06d5f7ac10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f06d5f7ada0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f06d5f79020"/>
        <function-ref name="isUart" scoped="" ref="0x7f06d5f791b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f06d5f79340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f06d5f794d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f06d5f79660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f06d5f797f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f06d5f79980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f06d5f79b10"/>
        <function-ref name="getMode" scoped="" ref="0x7f06d5f79ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f06d5f78220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f06d5f783b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f06d5f78540"/>
        <function-ref name="tx" scoped="" ref="0x7f06d5f786d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f06d5f78860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f06d5f789f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f06d5f78b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f06d5f78d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f06d5f77020"/>
        <function-ref name="rx" scoped="" ref="0x7f06d5f771b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f06d5f77340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f06d5f774d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f06d5f77660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f06d5f777f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f06d5f77980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7f06d5f4d5b0" loc="79:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f06d5f4d5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f06d5f4d930"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f06d5f4dac0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f06d5f4dc50"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f06d5f4dde0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f06d5f74020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f06d5f741b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f06d5f74340"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f06d5f744d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f06d5f74660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f06d5f747f0"/>
        <function-ref name="getData" scoped="" ref="0x7f06d5f74980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f06d5f74b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f06d5f74ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f06d5f73020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f06d5f731b0"/>
        <function-ref name="getIV" scoped="" ref="0x7f06d5f73340"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f06d5f734d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f06d5f73660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f06d5f737f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f06d5f73980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f06d5f73b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f06d5f73ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f06d5f73e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f06d5f4c020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f06d5f4c1b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f06d5f4c540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f06d5f4c6d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f06d5f4c860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f06d5f4c9f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f06d5f4cb80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f06d5f4cd10"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f06d5f4b020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f06d5f4b1b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f06d5f4b340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f06d5f4b4d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f06d5f4b660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f06d5f4b7f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f06d5f4b980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f06d5f4bb10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f06d5f4bca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f06d5f4be30"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f06d5f4a020"/>
        <function-ref name="setData" scoped="" ref="0x7f06d5f4a1b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f06d5f4a340"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f06d5f4a4d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f06d5f4a660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f06d5f4a7f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f06d5f4a980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f06d5f4ab10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f06d5f49420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f06d5f495b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f06d5f49740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f06d5f498d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f06d5f49a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f06d5f49bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f06d5f49d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f06d5f48020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f06d5f481b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f06d5f48340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f06d5f46670" loc="81:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f06d5f46670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d5f469f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d5f46b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d5f46d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d5f45020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d5f451b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d5f45340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d5f454d0"/>
        <function-ref name="get" scoped="" ref="0x7f06d5f45660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d5f457f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d5f45980"/>
        <function-ref name="set" scoped="" ref="0x7f06d5f45b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d5f45ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d5f45e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d5f44120"/>
        <function-ref name="clr" scoped="" ref="0x7f06d5f442b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f06d5f76750" loc="77:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f06d5f76750"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f06d5f76ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f06d5f48700" loc="80:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f06d5f48700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d5f48a80"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d5f48c10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d5f48da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d5f47020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d5f471b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d5f47340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d5f474d0"/>
        <function-ref name="get" scoped="" ref="0x7f06d5f47660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d5f477f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d5f47980"/>
        <function-ref name="set" scoped="" ref="0x7f06d5f47b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d5f47ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d5f47e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d5f46120"/>
        <function-ref name="clr" scoped="" ref="0x7f06d5f462b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f06d5ec07d0" loc="46:/opt/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f06d5ec07d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f06d5ec0b50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f06d5ec0ce0"/>
        <function-ref name="led1On" scoped="" ref="0x7f06d5ec0e70"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f06d5ebd030"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f06d5ebd1c0"/>
        <function-ref name="get" scoped="" ref="0x7f06d5ebd350"/>
        <function-ref name="led1Off" scoped="" ref="0x7f06d5ebd4e0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f06d5ebdb20"/>
        <function-ref name="set" scoped="" ref="0x7f06d5ebd670"/>
        <function-ref name="led0On" scoped="" ref="0x7f06d5ebd800"/>
        <function-ref name="led2On" scoped="" ref="0x7f06d5ebd990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f06d5eb8870" loc="50:/opt/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f06d5eb8870"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d5eb8bf0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d5eb8d80"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d5eb7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d5eb71b0"/>
        <function-ref name="get" scoped="" ref="0x7f06d5eb7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d5eb74d0"/>
        <function-ref name="set" scoped="" ref="0x7f06d5eb7660"/>
        <function-ref name="clr" scoped="" ref="0x7f06d5eb77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f06d5ebca80" loc="46:/opt/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f06d5ebca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d5ebce00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f06d5eb7b10" loc="51:/opt/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f06d5eb7b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d5eb6020"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d5eb61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d5eb6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d5eb64d0"/>
        <function-ref name="get" scoped="" ref="0x7f06d5eb6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d5eb67f0"/>
        <function-ref name="set" scoped="" ref="0x7f06d5eb6980"/>
        <function-ref name="clr" scoped="" ref="0x7f06d5eb6b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f06d5eb90c0" loc="47:/opt/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f06d5eb90c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f06d5eb9440"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f06d5eb95d0"/>
        <function-ref name="led1On" scoped="" ref="0x7f06d5eb9760"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f06d5eb98f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f06d5eb9a80"/>
        <function-ref name="get" scoped="" ref="0x7f06d5eb9c10"/>
        <function-ref name="led1Off" scoped="" ref="0x7f06d5eb9da0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f06d5eb84d0"/>
        <function-ref name="set" scoped="" ref="0x7f06d5eb8020"/>
        <function-ref name="led0On" scoped="" ref="0x7f06d5eb81b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f06d5eb8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f06d5eb6e30" loc="52:/opt/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f06d5eb6e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d5eb51e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d5eb5370"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d5eb5500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d5eb5690"/>
        <function-ref name="get" scoped="" ref="0x7f06d5eb5820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d5eb59b0"/>
        <function-ref name="set" scoped="" ref="0x7f06d5eb5b40"/>
        <function-ref name="clr" scoped="" ref="0x7f06d5eb5cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f06d5e97360" loc="41:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f06d5e97360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d5e976e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d5e97870"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d5e97a00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d5e97b90"/>
        <function-ref name="get" scoped="" ref="0x7f06d5e97d20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d5e96020"/>
        <function-ref name="set" scoped="" ref="0x7f06d5e961b0"/>
        <function-ref name="clr" scoped="" ref="0x7f06d5e96340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f06d5e966a0" loc="42:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f06d5e966a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d5e96a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d5e96bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d5e96d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d5e95020"/>
        <function-ref name="get" scoped="" ref="0x7f06d5e951b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d5e95340"/>
        <function-ref name="set" scoped="" ref="0x7f06d5e954d0"/>
        <function-ref name="clr" scoped="" ref="0x7f06d5e95660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f06d5e94c40" loc="44:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f06d5e94c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d5e93020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f06d5e959c0" loc="43:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f06d5e959c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d5e95d40"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d5e94020"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d5e941b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d5e94340"/>
        <function-ref name="get" scoped="" ref="0x7f06d5e944d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d5e94660"/>
        <function-ref name="set" scoped="" ref="0x7f06d5e947f0"/>
        <function-ref name="clr" scoped="" ref="0x7f06d5e94980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f06d5e91610" loc="44:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f06d5e91610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d5e91990"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d5e91b20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d5e91cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d5e91e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d5e90020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d5e901b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d5e90340"/>
        <function-ref name="get" scoped="" ref="0x7f06d5e904d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d5e90660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d5e907f0"/>
        <function-ref name="set" scoped="" ref="0x7f06d5e90980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d5e90b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d5e90ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d5e8f020"/>
        <function-ref name="clr" scoped="" ref="0x7f06d5e8f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f06d5e92440" loc="43:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f06d5e92440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d5e927c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d5e92950"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d5e92ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d5e92c70"/>
        <function-ref name="get" scoped="" ref="0x7f06d5e92e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d5e91020"/>
        <function-ref name="set" scoped="" ref="0x7f06d5e911b0"/>
        <function-ref name="clr" scoped="" ref="0x7f06d5e91340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f06d5e8c2f0" loc="44:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f06d5e8c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d5e8c670"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d5e8c800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d5e8c990"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d5e8cb20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d5e8ccb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d5e8ce40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d5e8b020"/>
        <function-ref name="get" scoped="" ref="0x7f06d5e8b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d5e8b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d5e8b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f06d5e8b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d5e8b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d5e8b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d5e8bc10"/>
        <function-ref name="clr" scoped="" ref="0x7f06d5e8bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f06d5e8d020" loc="43:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f06d5e8d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d5e8d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d5e8d530"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d5e8d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d5e8d850"/>
        <function-ref name="get" scoped="" ref="0x7f06d5e8d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d5e8db70"/>
        <function-ref name="set" scoped="" ref="0x7f06d5e8dd00"/>
        <function-ref name="clr" scoped="" ref="0x7f06d5e8c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f06d5e88de0" loc="44:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f06d5e88de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d5e86180"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d5e86310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d5e864a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d5e86630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d5e867c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d5e86950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d5e86ae0"/>
        <function-ref name="get" scoped="" ref="0x7f06d5e86c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d5e86e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d5e85020"/>
        <function-ref name="set" scoped="" ref="0x7f06d5e851b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d5e85340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d5e854d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d5e85760"/>
        <function-ref name="clr" scoped="" ref="0x7f06d5e858f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f06d5e89b90" loc="43:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f06d5e89b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d5e88020"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d5e881b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d5e88340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d5e884d0"/>
        <function-ref name="get" scoped="" ref="0x7f06d5e88660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d5e887f0"/>
        <function-ref name="set" scoped="" ref="0x7f06d5e88980"/>
        <function-ref name="clr" scoped="" ref="0x7f06d5e88b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f06d4b645d0" loc="42:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f06d4b645d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f06d4b64950"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f06d4b64ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f06d4b5e7c0" loc="46:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f06d4b5e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f06d4b5eb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f06d4b55a80" loc="51:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f06d4b55a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f06d4b55e00"/>
        <function-ref name="configure" scoped="" ref="0x7f06d4b54020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f06d4b5edd0" loc="48:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f06d4b5edd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f06d4b5b180"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f06d4b5b310"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f06d4b5b4a0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f06d4b5b630"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f06d4b5b7c0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f06d4b5b950"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f06d4b5bae0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f06d4b5bc70"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f06d4b5be00"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f06d4b5a020"/>
        <function-ref name="getData" scoped="" ref="0x7f06d4b5a1b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f06d4b5a340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f06d4b5a4d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f06d4b5a760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f06d4b5a8f0"/>
        <function-ref name="getIV" scoped="" ref="0x7f06d4b5aa80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f06d4b5ac10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f06d4b5ada0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f06d4b59020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f06d4b591b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f06d4b59340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f06d4b594d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f06d4b59660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f06d4b597f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f06d4b59980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f06d4b59d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f06d4b58020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f06d4b581b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f06d4b58340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f06d4b584d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f06d4b58660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f06d4b587f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f06d4b58980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f06d4b58b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f06d4b58ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f06d4b58e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f06d4b57020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f06d4b571b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f06d4b57340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f06d4b574d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f06d4b57660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f06d4b577f0"/>
        <function-ref name="setData" scoped="" ref="0x7f06d4b57980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f06d4b57b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f06d4b57ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f06d4b57e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f06d4b56020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f06d4b561b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f06d4b56340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f06d4b568d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f06d4b56a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f06d4b56bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f06d4b56d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f06d4b55020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f06d4b551b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f06d4b55340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f06d4b554d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f06d4b55660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f06d4b557f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f06d4b5e020" loc="45:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f06d4b5e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f06d4b5e3a0"/>
        <function-ref name="txDone" scoped="" ref="0x7f06d4b5e530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f06d4b65860" loc="41:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f06d4b65860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d4b65be0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f06d4b65d70"/>
        <function-ref name="request" scoped="" ref="0x7f06d4b64020"/>
        <function-ref name="granted" scoped="" ref="0x7f06d4b641b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d4b64340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f06d4b635a0" loc="44:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f06d4b635a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f06d4b63920"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f06d4b63ab0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f06d4b63c40"/>
        <function-ref name="enableUart" scoped="" ref="0x7f06d4b63dd0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f06d4b62020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f06d4b621b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f06d4b62340"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f06d4b624d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f06d4b62660"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f06d4b627f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f06d4b62980"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f06d4b62b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f06d4b62ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f06d4b61020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f06d4b611b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f06d4b61340"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f06d4b614d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f06d4b61660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f06d4b617f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f06d4b61980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f06d4b61b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f06d4b61ca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f06d4b61e30"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f06d4b60020"/>
        <function-ref name="getMode" scoped="" ref="0x7f06d4b601b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f06d4b60540"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f06d4b606d0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f06d4b60860"/>
        <function-ref name="tx" scoped="" ref="0x7f06d4b609f0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f06d4b60b80"/>
        <function-ref name="disableUart" scoped="" ref="0x7f06d4b60d10"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f06d4b5f020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f06d4b5f1b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f06d4b5f340"/>
        <function-ref name="rx" scoped="" ref="0x7f06d4b5f4d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f06d4b5f660"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f06d4b5f7f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f06d4b5f980"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f06d4b5fb10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f06d4b5fca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f06d4b64d70" loc="43:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f06d4b64d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f06d4b63180"/>
        <function-ref name="userId" scoped="" ref="0x7f06d4b63310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f06d5e5a8a0" loc="42:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f06d5e5a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f06d5e5ac20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f06d5e5adb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f06d5e57020" loc="45:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f06d5e57020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f06d5e573a0"/>
        <function-ref name="configure" scoped="" ref="0x7f06d5e57530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f06d5e5fa80" loc="39:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f06d5e5fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f06d5e5fe00"/>
        <function-ref name="txDone" scoped="" ref="0x7f06d5e5c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f06d5e5b5c0" loc="41:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f06d5e5b5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d5e5b940"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f06d5e5bad0"/>
        <function-ref name="request" scoped="" ref="0x7f06d5e5bc60"/>
        <function-ref name="granted" scoped="" ref="0x7f06d5e5bdf0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d5e5a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f06d5e5c9a0" loc="40:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f06d5e5c9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f06d5e5cd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f06d5e58130" loc="43:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f06d5e58130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f06d5e584b0"/>
        <function-ref name="userId" scoped="" ref="0x7f06d5e58640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f06d5e424b0" loc="43:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f06d5e424b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f06d5e42830"/>
        <function-ref name="userId" scoped="" ref="0x7f06d5e429c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f06d5e555c0" loc="39:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f06d5e555c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f06d5e55960"/>
        <function-ref name="txDone" scoped="" ref="0x7f06d5e55af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f06d5e44e70" loc="42:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f06d5e44e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f06d5e42220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f06d5e44020" loc="40:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f06d5e44020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f06d5e443c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f06d5e44690" loc="41:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f06d5e44690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f06d5e44a10"/>
        <function-ref name="txDone" scoped="" ref="0x7f06d5e44ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f06d5dc9bf0" loc="92:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f06d5dc9bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f06d5dc8020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f06d5dc81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f06d5dc7930" loc="96:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f06d5dc7930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f06d5dc7cd0"/>
        <function-ref name="configure" scoped="" ref="0x7f06d5dc7e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f06d5dc8400" loc="93:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f06d5dc8400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d5dc8780"/>
        <function-ref name="requested" scoped="" ref="0x7f06d5dc8910"/>
        <function-ref name="granted" scoped="" ref="0x7f06d5dc8aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d5dc8c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f06d5dc8dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f06d5dcae60" loc="91:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f06d5dcae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d5dc9230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f06d5dc93c0"/>
        <function-ref name="request" scoped="" ref="0x7f06d5dc9550"/>
        <function-ref name="granted" scoped="" ref="0x7f06d5dc96e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d5dc9870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f06d5dc7060" loc="94:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f06d5dc7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f06d5dc73e0"/>
        <function-ref name="userId" scoped="" ref="0x7f06d5dc7570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f06d4ad5810" loc="44:/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f06d4ad5810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d4ad5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f06d4ad5e20" loc="45:/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f06d4ad5e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f06d4ad41c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f06d4ad4350"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f06d4ad44e0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f06d4ad4670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f06d4ad2d80" loc="55:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f06d4ad2d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f06d4ad0180"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f06d4ad0310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f06d4acfb60" loc="60:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f06d4acfb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f06d4ace020"/>
        <function-ref name="configure" scoped="" ref="0x7f06d4ace1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f06d4ace440" loc="61:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f06d4ace440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f06d4ace7c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f06d4ace950"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f06d4aceae0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f06d4acec70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f06d4ad0560" loc="56:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f06d4ad0560"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d4ad08e0"/>
        <function-ref name="requested" scoped="" ref="0x7f06d4ad0a70"/>
        <function-ref name="granted" scoped="" ref="0x7f06d4ad0c00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d4ad0d90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f06d4acf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f06d4acd020" loc="62:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f06d4acd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f06d4acd3a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f06d4acd530"/>
        <function-ref name="led1On" scoped="" ref="0x7f06d4acd6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f06d4acd850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f06d4acd9e0"/>
        <function-ref name="get" scoped="" ref="0x7f06d4acdb70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f06d4acdd00"/>
        <function-ref name="led0On" scoped="" ref="0x7f06d4acc4d0"/>
        <function-ref name="set" scoped="" ref="0x7f06d4acc1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f06d4acc020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f06d4acc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f06d4ad2020" loc="54:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f06d4ad2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d4ad23c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f06d4ad2550"/>
        <function-ref name="request" scoped="" ref="0x7f06d4ad26e0"/>
        <function-ref name="granted" scoped="" ref="0x7f06d4ad2870"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d4ad2a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f06d4acf270" loc="57:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f06d4acf270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f06d4acf5f0"/>
        <function-ref name="userId" scoped="" ref="0x7f06d4acf780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f06d4acc7a0" loc="75:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f06d4acc7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f06d4accb20"/>
        <function-ref name="runTask" scoped="" ref="0x7f06d4acccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f06d5dbf880" loc="4:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f06d5dbf880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f06d5dbfc00"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f06d5dbfd90"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f06d5dbc020"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f06d5dbc1b0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f06d5dbc340"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f06d5dbc4d0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f06d5dbc660"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f06d5dbc7f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f06d5dbc980"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f06d5dbcb10"/>
        <function-ref name="getData" scoped="" ref="0x7f06d5dbcca0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f06d5dbce30"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f06d5dbb020"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f06d5dbb2b0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f06d5dbb440"/>
        <function-ref name="getIV" scoped="" ref="0x7f06d5dbb5d0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f06d5dbb760"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f06d5dbb8f0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f06d5dbba80"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f06d5dbbc10"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f06d5dbbda0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f06d5dba020"/>
        <function-ref name="isI2C" scoped="" ref="0x7f06d5dba1b0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f06d5dba340"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f06d5dba4d0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f06d5dba860"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f06d5dba9f0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f06d5dbab80"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f06d5dbad10"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f06d5db9020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f06d5db91b0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f06d5db9340"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f06d5db94d0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f06d5db9660"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f06d5db97f0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f06d5db9980"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f06d5db9b10"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f06d5db9ca0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f06d5db9e30"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f06d5db8020"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f06d5db81b0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f06d5db8340"/>
        <function-ref name="setData" scoped="" ref="0x7f06d5db84d0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f06d5db8660"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f06d5db87f0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f06d5db8980"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f06d5db8b10"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f06d5db8ca0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f06d5db8e30"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f06d5db7420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f06d5db75b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f06d5db7740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f06d5db78d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f06d5db7a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f06d5db7bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f06d5db7d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f06d5db6020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f06d5db61b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f06d5db6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7f06d5dac250" loc="41:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7f06d5dac250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f06d5dac5d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f06d5dac760"/>
        <function-ref name="setUctl" scoped="" ref="0x7f06d5dac8f0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f06d5daca80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f06d5dacc10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f06d5dacda0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f06d5dab020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f06d5dab1b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f06d5dab340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f06d5dab4d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f06d5dab660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f06d5dab7f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f06d5dab980"/>
        <function-ref name="getUbr" scoped="" ref="0x7f06d5dabc10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f06d5dabda0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f06d5daa020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f06d5daa1b0"/>
        <function-ref name="isUart" scoped="" ref="0x7f06d5daa340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f06d5daa4d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f06d5daa660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f06d5daa7f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f06d5daa980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f06d5daab10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f06d5daaca0"/>
        <function-ref name="getMode" scoped="" ref="0x7f06d5daae30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f06d5da9220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f06d5da93b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f06d5da9540"/>
        <function-ref name="tx" scoped="" ref="0x7f06d5da96d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f06d5da9860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f06d5da99f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f06d5da9b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f06d5da9d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f06d5da8020"/>
        <function-ref name="rx" scoped="" ref="0x7f06d5da81b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f06d5da8340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f06d5da84d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f06d5da8660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f06d5da87f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f06d5da8980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f06d5da6cb0" loc="43:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f06d5da6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d5da50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d5da5230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d5da53c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d5da5550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d5da56e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d5da5870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d5da5a00"/>
        <function-ref name="get" scoped="" ref="0x7f06d5da5b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d5da5d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d5da4020"/>
        <function-ref name="set" scoped="" ref="0x7f06d5da41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d5da4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d5da44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d5da4760"/>
        <function-ref name="clr" scoped="" ref="0x7f06d5da48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7f06d5db3430" loc="39:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f06d5db3430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f06d5db37b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f06d5db3940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f06d5db3ad0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f06d5db3c60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f06d5db3df0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f06d5db2020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f06d5db21b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f06d5db2340"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f06d5db24d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f06d5db2660"/>
        <function-ref name="getData" scoped="" ref="0x7f06d5db27f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f06d5db2980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f06d5db2b10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f06d5db2da0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f06d5db1020"/>
        <function-ref name="getIV" scoped="" ref="0x7f06d5db11b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f06d5db1340"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f06d5db14d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f06d5db1660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f06d5db17f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f06d5db1980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f06d5db1b10"/>
        <function-ref name="isI2C" scoped="" ref="0x7f06d5db1ca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f06d5db1e30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f06d5db0020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f06d5db03b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f06d5db0540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f06d5db06d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f06d5db0860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f06d5db09f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f06d5db0b80"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f06d5db0d10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f06d5daf020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f06d5daf1b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f06d5daf340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f06d5daf4d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f06d5daf660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f06d5daf7f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f06d5daf980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f06d5dafb10"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f06d5dafca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f06d5dafe30"/>
        <function-ref name="setData" scoped="" ref="0x7f06d5dae020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f06d5dae1b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f06d5dae340"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f06d5dae4d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f06d5dae660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f06d5dae7f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f06d5dae980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f06d5dad020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f06d5dad1b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f06d5dad340"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f06d5dad4d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f06d5dad660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f06d5dad7f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f06d5dad980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f06d5dadb10"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f06d5dadca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f06d5dade30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f06d5da8d40" loc="42:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f06d5da8d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d5da70e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d5da7270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d5da7400"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d5da7590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d5da7720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d5da78b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d5da7a40"/>
        <function-ref name="get" scoped="" ref="0x7f06d5da7bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d5da7d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d5da6020"/>
        <function-ref name="set" scoped="" ref="0x7f06d5da61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d5da6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d5da64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d5da6760"/>
        <function-ref name="clr" scoped="" ref="0x7f06d5da68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f06d5c91c60" loc="69:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f06d5c91c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c90210"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c903a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f06d5c9cda0" loc="47:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f06d5c9cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5c9b180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f06d5c95b50" loc="63:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f06d5c95b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c94020"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c941b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f06d5c8f670" loc="72:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f06d5c8f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c8f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c8fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f06d5c88e50" loc="86:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f06d5c88e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c87210"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c873a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f06d5c8fe50" loc="73:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f06d5c8fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c8e210"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c8e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f06d5c7b2f0" loc="108:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f06d5c7b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c7b670"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c7b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f06d5c7e2f0" loc="104:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f06d5c7e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c7e670"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c7e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f06d5c9a120" loc="50:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f06d5c9a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5c9a4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f06d5c83670" loc="93:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f06d5c83670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c839f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c83b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f06d5c7f2f0" loc="102:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f06d5c7f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c7f670"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c7f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f06d5c94c60" loc="65:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f06d5c94c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c93020"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c931b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f06d5c93c60" loc="67:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f06d5c93c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c91020"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c911b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f06d5c89670" loc="83:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f06d5c89670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c899f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c89b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f06d5c8ce50" loc="79:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f06d5c8ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c8a210"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c8a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f06d5c8e670" loc="74:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f06d5c8e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c8e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c8eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f06d5c9d760" loc="42:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f06d5c9d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f06d5c9dae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f06d5c9dc70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f06d5c9de00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f06d5c99aa0" loc="54:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f06d5c99aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5c99e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f06d5c97120" loc="55:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f06d5c97120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5c975a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f06d5c82a70" loc="95:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f06d5c82a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c82df0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c81020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f06d5c97870" loc="56:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f06d5c97870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5c97bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f06d5c7fad0" loc="103:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f06d5c7fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c7fe50"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c7e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f06d5c9adc0" loc="52:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f06d5c9adc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5c99180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f06d5c85e50" loc="92:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f06d5c85e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c83210"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c833a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f06d5c93480" loc="66:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f06d5c93480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c93800"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c93990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f06d5c94480" loc="64:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f06d5c94480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c94800"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c94990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f06d5c9c750" loc="46:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f06d5c9c750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5c9cad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f06d5c86e50" loc="90:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f06d5c86e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c85210"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c853a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f06d5c87670" loc="87:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f06d5c87670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c879f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c87b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f06d5c85670" loc="91:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f06d5c85670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c859f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c85b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f06d5c7cad0" loc="107:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f06d5c7cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c7ce50"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c7b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f06d5c7ead0" loc="105:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f06d5c7ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c7ee50"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c7c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f06d5c8a670" loc="80:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f06d5c8a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c8a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c8ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f06d5c87e50" loc="88:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f06d5c87e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c86210"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c863a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f06d5c80ad0" loc="101:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f06d5c80ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c80e50"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c7f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f06d5c8d670" loc="76:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f06d5c8d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c8d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c8db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f06d5c7bad0" loc="111:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f06d5c7bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f06d5c7be50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f06d5c7a020"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c7a1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f06d5c7a340"/>
        <function-ref name="readDone" scoped="" ref="0x7f06d5c7a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f06d5c9c100" loc="45:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f06d5c9c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5c9c480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f06d5c95370" loc="62:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f06d5c95370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c956f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c95880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f06d5c91480" loc="68:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f06d5c91480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c91800"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c91990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f06d5c89e50" loc="84:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f06d5c89e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c88210"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c883a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f06d5c8ee50" loc="75:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f06d5c8ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c8d210"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c8d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f06d5c88670" loc="85:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f06d5c88670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c889f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c88b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f06d5c90670" loc="70:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f06d5c90670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c909f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c90b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f06d5c9b450" loc="48:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f06d5c9b450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5c9b7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f06d5c90e50" loc="71:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f06d5c90e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c8f210"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c8f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f06d5c9ea80" loc="41:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f06d5c9ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d5c9ee00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f06d5c9d020"/>
        <function-ref name="request" scoped="" ref="0x7f06d5c9d1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f06d5c9d340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d5c9d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f06d5c96020" loc="57:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f06d5c96020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5c963a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f06d5c96cc0" loc="59:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f06d5c96cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5c950a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f06d5c802f0" loc="100:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f06d5c802f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c80670"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c80800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f06d5c81ad0" loc="99:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f06d5c81ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c81e50"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c80020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f06d5c99450" loc="53:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f06d5c99450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5c997d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f06d5c812f0" loc="96:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f06d5c812f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c81670"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c81800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f06d5c7c2f0" loc="106:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f06d5c7c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c7c670"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c7c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f06d5c8ae50" loc="81:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f06d5c8ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c89210"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c893a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f06d5c86670" loc="89:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f06d5c86670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c869f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c86b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f06d5c9baa0" loc="49:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f06d5c9baa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5c9be20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f06d5c9a770" loc="51:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f06d5c9a770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5c9aaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f06d5c8de50" loc="77:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f06d5c8de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c8c210"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c8c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f06d5c96670" loc="58:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f06d5c96670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5c969f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f06d5c8c670" loc="78:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f06d5c8c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c8c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c8cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f06d5c83e50" loc="94:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f06d5c83e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c82610"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c827a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f06d5c7a7a0" loc="112:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f06d5c7a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f06d5c7ab20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f06d5c7acb0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c7ae40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f06d5c79020"/>
        <function-ref name="readDone" scoped="" ref="0x7f06d5c791b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f06d5c65c60" loc="69:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f06d5c65c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c64210"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c643a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f06d5c70da0" loc="47:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f06d5c70da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5c6f180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f06d5c68b50" loc="63:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f06d5c68b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c67020"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c671b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f06d5c63670" loc="72:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f06d5c63670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c639f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c63b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f06d5c5ce50" loc="86:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f06d5c5ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c5a210"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c5a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f06d5c63e50" loc="73:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f06d5c63e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c61210"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c613a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f06d5c4f2f0" loc="108:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f06d5c4f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c4f670"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c4f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f06d5c512f0" loc="104:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f06d5c512f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c51670"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c51800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f06d5c6d120" loc="50:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f06d5c6d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5c6d4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f06d5c57670" loc="93:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f06d5c57670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c579f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c57b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f06d5c522f0" loc="102:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f06d5c522f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c52670"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c52800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f06d5c67c60" loc="65:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f06d5c67c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c66020"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c661b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f06d5c66c60" loc="67:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f06d5c66c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c65020"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c651b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f06d5c5d670" loc="83:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f06d5c5d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c5d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c5db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f06d5c5fe50" loc="79:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f06d5c5fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c5e210"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c5e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f06d5c61670" loc="74:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f06d5c61670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c619f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c61b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f06d5c71760" loc="42:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f06d5c71760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f06d5c71ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f06d5c71c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f06d5c71e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f06d5c6caa0" loc="54:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f06d5c6caa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5c6ce20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f06d5c6b120" loc="55:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f06d5c6b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5c6b5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f06d5c56a70" loc="95:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f06d5c56a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c56df0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c55020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f06d5c6b870" loc="56:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f06d5c6b870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5c6bbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f06d5c52ad0" loc="103:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f06d5c52ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c52e50"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c51020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f06d5c6ddc0" loc="52:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f06d5c6ddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5c6c180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f06d5c58e50" loc="92:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f06d5c58e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c57210"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c573a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f06d5c66480" loc="66:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f06d5c66480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c66800"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c66990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f06d5c67480" loc="64:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f06d5c67480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c67800"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c67990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f06d5c70750" loc="46:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f06d5c70750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5c70ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f06d5c59e50" loc="90:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f06d5c59e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c58210"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c583a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f06d5c5a670" loc="87:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f06d5c5a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c5a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c5ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f06d5c58670" loc="91:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f06d5c58670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c589f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c58b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f06d5c50ad0" loc="107:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f06d5c50ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c50e50"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c4f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f06d5c51ad0" loc="105:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f06d5c51ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c51e50"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c50020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f06d5c5e670" loc="80:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f06d5c5e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c5e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c5eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f06d5c5ae50" loc="88:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f06d5c5ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c59210"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c593a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f06d5c53ad0" loc="101:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f06d5c53ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c53e50"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c52020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f06d5c60670" loc="76:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f06d5c60670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c609f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c60b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f06d5c4fad0" loc="111:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f06d5c4fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f06d5c4fe50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f06d5c4e020"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c4e1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f06d5c4e340"/>
        <function-ref name="readDone" scoped="" ref="0x7f06d5c4e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f06d5c70100" loc="45:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f06d5c70100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5c70480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f06d5c68370" loc="62:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f06d5c68370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c686f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c68880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f06d5c65480" loc="68:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f06d5c65480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c65800"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c65990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f06d5c5de50" loc="84:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f06d5c5de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c5c210"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c5c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f06d5c61e50" loc="75:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f06d5c61e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c60210"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c603a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f06d5c5c670" loc="85:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f06d5c5c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c5c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c5cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f06d5c64670" loc="70:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f06d5c64670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c649f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c64b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f06d5c6f450" loc="48:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f06d5c6f450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5c6f7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f06d5c64e50" loc="71:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f06d5c64e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c63210"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c633a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f06d5c729e0" loc="41:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f06d5c729e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d5c72d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f06d5c71020"/>
        <function-ref name="request" scoped="" ref="0x7f06d5c711b0"/>
        <function-ref name="granted" scoped="" ref="0x7f06d5c71340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d5c714d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f06d5c6a020" loc="57:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f06d5c6a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5c6a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f06d5c6acc0" loc="59:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f06d5c6acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5c680a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f06d5c532f0" loc="100:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f06d5c532f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c53670"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c53800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f06d5c55ad0" loc="99:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f06d5c55ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c55e50"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c53020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f06d5c6c450" loc="53:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f06d5c6c450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5c6c7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f06d5c552f0" loc="96:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f06d5c552f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c55670"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c55800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f06d5c502f0" loc="106:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f06d5c502f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c50670"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c50800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f06d5c5ee50" loc="81:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f06d5c5ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c5d210"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c5d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f06d5c59670" loc="89:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f06d5c59670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c599f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c59b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f06d5c6faa0" loc="49:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f06d5c6faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5c6fe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f06d5c6d770" loc="51:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f06d5c6d770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5c6daf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f06d5c60e50" loc="77:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f06d5c60e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c5f210"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c5f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f06d5c6a670" loc="58:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f06d5c6a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5c6a9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f06d5c5f670" loc="78:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f06d5c5f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c5f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c5fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f06d5c57e50" loc="94:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f06d5c57e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c56610"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c567a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f06d5c4e7a0" loc="112:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f06d5c4e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f06d5c4eb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f06d5c4ecb0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c4ee40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f06d5c4c020"/>
        <function-ref name="readDone" scoped="" ref="0x7f06d5c4c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f06d5c45b30" loc="54:/opt/tinyos-main/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f06d5c45b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f06d5c41020"/>
        <function-ref name="changed" scoped="" ref="0x7f06d5c411b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f06d5c41340"/>
        <function-ref name="setAddress" scoped="" ref="0x7f06d5c414d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f06d5c44d30" loc="13:/opt/tinyos-main/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f06d5c44d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f06d5c2d0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f06d5c29310" loc="5:/opt/tinyos-main/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f06d5c29310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f06d5c29690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7f06d5c26880" loc="8:/opt/tinyos-main/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f06d5c26880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c26c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f06d5c1b020" loc="8:/opt/tinyos-main/tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f06d5c1b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c1b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7f06d5c11bd0" loc="14:/opt/tinyos-main/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f06d5c11bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c15020"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c151b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7f06d5c15530" loc="15:/opt/tinyos-main/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7f06d5c15530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f06d5c158b0"/>
        <function-ref name="stop" scoped="" ref="0x7f06d5c15a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f06d5c16140" loc="11:/opt/tinyos-main/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f06d5c16140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c164c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f06d5c1ac60" loc="8:/opt/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f06d5c1ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5c01020"/>
        <function-ref name="write" scoped="" ref="0x7f06d5c011b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f06d5c01540" loc="11:/opt/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f06d5c01540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d5c018c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d5c01a50"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d5c01be0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d5c01d70"/>
        <function-ref name="get" scoped="" ref="0x7f06d5c00020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d5c001b0"/>
        <function-ref name="set" scoped="" ref="0x7f06d5c00340"/>
        <function-ref name="clr" scoped="" ref="0x7f06d5c004d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f06d5bf8950" loc="15:/opt/tinyos-main/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f06d5bf8950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a87e50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f06d6a86200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f06d5bfa780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f06d5bfd200" loc="11:/opt/tinyos-main/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f06d5bfd200"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5bfd580"/>
        <function-ref name="write" scoped="" ref="0x7f06d5bfd710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f06d5bfdaa0" loc="14:/opt/tinyos-main/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f06d5bfdaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d5bfde20"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d5bfc020"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d5bfc1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d5bfc340"/>
        <function-ref name="get" scoped="" ref="0x7f06d5bfc4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d5bfc660"/>
        <function-ref name="set" scoped="" ref="0x7f06d5bfc7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f06d5bfc980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f06d5bffca0" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f06d5bffca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a87e50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f06d6a86200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f06d5bd7ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f06d5bd5a90" loc="54:/opt/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f06d5bd5a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a87e50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f06d6a86200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f06d5bd48d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f06d5bc5020" loc="55:/opt/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f06d5bc5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a87e50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f06d6a86200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f06d5bc5e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d5bc3800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d5bc3340"/>
        <function-ref name="overflow" scoped="" ref="0x7f06d5bc3cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7f06d5bbf530" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f06d5bbf530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a87e50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f06d6a86200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f06d5bbe3d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d5bbed50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d5bbe890"/>
        <function-ref name="overflow" scoped="" ref="0x7f06d5bbd260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f06d5bb8020" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f06d5bb8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d5bb83a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f06d5bb8530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d5bb86c0"/>
        <function-ref name="get" scoped="" ref="0x7f06d5bb8850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d5bb89e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d5bb8b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f06d5bb8d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d5bb7020"/>
        <function-ref name="overflow" scoped="" ref="0x7f06d5bb71b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f06d5bb7340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f06d5bb74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f06d5bbbe50" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f06d5bbbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a87e50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f06d6a86200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f06d5bbaca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d5bb9670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d5bb91b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f06d5bb9b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7f06d5c02590" loc="3:/opt/tinyos-main/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7f06d5c02590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d5c02910"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d5c02aa0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d5c02c30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d5c02dc0"/>
        <function-ref name="get" scoped="" ref="0x7f06d5bb3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d5bb31b0"/>
        <function-ref name="set" scoped="" ref="0x7f06d5bb3340"/>
        <function-ref name="clr" scoped="" ref="0x7f06d5bb34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f06d5bb0c50" loc="44:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f06d5bb0c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d5baf020"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d5baf1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d5baf340"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d5baf4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d5baf660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d5baf7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d5baf980"/>
        <function-ref name="get" scoped="" ref="0x7f06d5bafb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d5bafca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d5bafe30"/>
        <function-ref name="set" scoped="" ref="0x7f06d5bae020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d5bae1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d5bae340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d5bae5d0"/>
        <function-ref name="clr" scoped="" ref="0x7f06d5bae760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f06d5bb19e0" loc="43:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f06d5bb19e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d5bb1d60"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d5bb0020"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d5bb01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d5bb0340"/>
        <function-ref name="get" scoped="" ref="0x7f06d5bb04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d5bb0660"/>
        <function-ref name="set" scoped="" ref="0x7f06d5bb07f0"/>
        <function-ref name="clr" scoped="" ref="0x7f06d5bb0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f06d5bb4a20" loc="14:/opt/tinyos-main/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f06d5bb4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f06d5bb4da0"/>
        <function-ref name="stop" scoped="" ref="0x7f06d5ba9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f06d5b9acb0" loc="46:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f06d5b9acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f06d5b990a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f06d5b99230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f06d5b993c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f06d5b99550"/>
        <function-ref name="setCca" scoped="" ref="0x7f06d5b996e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f06d5b99870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f06d5b969f0" loc="47:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f06d5b969f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f06d5b96d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f06d5b9a020" loc="45:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f06d5b9a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d5b9a3a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d5b9a530"/>
        <function-ref name="modify" scoped="" ref="0x7f06d5b9a6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d5b9a850"/>
        <function-ref name="resend" scoped="" ref="0x7f06d5b9a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f06d5b9d6c0" loc="44:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f06d5b9d6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f06d5b9da40"/>
        <function-ref name="stop" scoped="" ref="0x7f06d5b9dbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f06d5b98190" loc="48:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f06d5b98190"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f06d5b98510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f06d5b8a970" loc="51:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f06d5b8a970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f06d5b8acf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f06d5b8ae80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f06d5b89030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f06d5b891c0"/>
        <function-ref name="setCca" scoped="" ref="0x7f06d5b89350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f06d5b894e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f06d5b82950" loc="58:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f06d5b82950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a876a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f06d6a87a10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f06d5b80020"/>
        <function-ref name="clear" scoped="" ref="0x7f06d5b80750"/>
        <function-ref name="isValid" scoped="" ref="0x7f06d5b81780"/>
        <function-ref name="set" scoped="" ref="0x7f06d5b80e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f06d5b6a020" loc="78:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f06d5b6a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5b6a3a0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5b6a530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f06d5b6a890" loc="79:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f06d5b6a890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5b6ac10"/>
        <function-ref name="write" scoped="" ref="0x7f06d5b6ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f06d5b89900" loc="52:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f06d5b89900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f06d5b89c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f06d5b6d530" loc="72:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f06d5b6d530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5b6d8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f06d5b7d880" loc="60:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f06d5b7d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f06d5b7dc00"/>
        <function-ref name="disable" scoped="" ref="0x7f06d5b7dd90"/>
        <function-ref name="captured" scoped="" ref="0x7f06d5b7c020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f06d5b7c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f06d5b88ae0" loc="55:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7f06d5b88ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a876a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f06d6a87a10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f06d5b84390"/>
        <function-ref name="fired" scoped="" ref="0x7f06d5b86360"/>
        <function-ref name="startAt" scoped="" ref="0x7f06d5b86ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f06d5b86820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f06d5b84850"/>
        <function-ref name="start" scoped="" ref="0x7f06d5b87970"/>
        <function-ref name="stop" scoped="" ref="0x7f06d5b87e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f06d5b84d00" loc="56:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f06d5b84d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f06d5b830a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f06d5b83230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f06d5b833c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f06d5b83550"/>
        <function-ref name="getPower" scoped="" ref="0x7f06d5b836e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f06d5b83870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f06d5b6f550" loc="68:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f06d5b6f550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5b6f8d0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5b6fa60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f06d5b6fe00" loc="69:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f06d5b6fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5b6e1c0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5b6e350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f06d5b63d40" loc="83:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f06d5b63d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f06d5b670e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f06d5b67270"/>
        <function-ref name="sfd" scoped="" ref="0x7f06d5b67400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f06d5b8bbc0" loc="50:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f06d5b8bbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d5b8a020"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d5b8a1b0"/>
        <function-ref name="modify" scoped="" ref="0x7f06d5b8a340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d5b8a4d0"/>
        <function-ref name="resend" scoped="" ref="0x7f06d5b8a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f06d5b71d10" loc="66:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f06d5b71d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f06d5b700e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f06d5b70270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f06d5b70400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f06d5b6dc60" loc="73:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f06d5b6dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5b6c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f06d5b75820" loc="62:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f06d5b75820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d5b75ba0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d5b75d30"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d5b73020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d5b731b0"/>
        <function-ref name="get" scoped="" ref="0x7f06d5b73340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d5b734d0"/>
        <function-ref name="set" scoped="" ref="0x7f06d5b73660"/>
        <function-ref name="clr" scoped="" ref="0x7f06d5b737f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f06d5b8dc60" loc="48:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f06d5b8dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d5b8b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f06d5b83bb0" loc="57:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f06d5b83bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f06d5b82020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f06d5b821b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f06d5b82340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f06d5b77be0" loc="59:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f06d5b77be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f06d5b7d020"/>
        <function-ref name="isSet" scoped="" ref="0x7f06d5b7d1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d5b7d340"/>
        <function-ref name="set" scoped="" ref="0x7f06d5b7d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f06d5b6c3e0" loc="74:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f06d5b6c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5b6c960"/>
        <function-ref name="write" scoped="" ref="0x7f06d5b6caf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f06d5b71020" loc="65:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f06d5b71020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d5b713a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f06d5b71530"/>
        <function-ref name="request" scoped="" ref="0x7f06d5b716c0"/>
        <function-ref name="granted" scoped="" ref="0x7f06d5b71850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d5b719e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f06d5b7c500" loc="61:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f06d5b7c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d5b7c980"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d5b7cb10"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d5b7cca0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d5b7ce30"/>
        <function-ref name="get" scoped="" ref="0x7f06d5b75020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d5b751b0"/>
        <function-ref name="set" scoped="" ref="0x7f06d5b75340"/>
        <function-ref name="clr" scoped="" ref="0x7f06d5b754d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f06d5b69130" loc="80:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f06d5b69130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5b694b0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5b69640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f06d5b699c0" loc="81:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f06d5b699c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5b69d40"/>
        <function-ref name="write" scoped="" ref="0x7f06d5b68020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f06d5b6e6d0" loc="70:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f06d5b6e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5b6ea50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f06d5b73b40" loc="63:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f06d5b73b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d5b72020"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d5b721b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d5b72340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d5b724d0"/>
        <function-ref name="get" scoped="" ref="0x7f06d5b72660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d5b727f0"/>
        <function-ref name="set" scoped="" ref="0x7f06d5b72980"/>
        <function-ref name="clr" scoped="" ref="0x7f06d5b72b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f06d5b676c0" loc="84:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f06d5b676c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f06d5b67a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f06d5b67bd0"/>
        <function-ref name="led1On" scoped="" ref="0x7f06d5b67d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f06d5b66020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f06d5b661b0"/>
        <function-ref name="get" scoped="" ref="0x7f06d5b66340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f06d5b664d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f06d5b66b10"/>
        <function-ref name="set" scoped="" ref="0x7f06d5b66660"/>
        <function-ref name="led0On" scoped="" ref="0x7f06d5b667f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f06d5b66980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f06d5b6b5e0" loc="77:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f06d5b6b5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5b6b960"/>
        <function-ref name="write" scoped="" ref="0x7f06d5b6baf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f06d5b8b320" loc="49:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f06d5b8b320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f06d5b8b6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f06d5b8b830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f06d5b70780" loc="67:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f06d5b70780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f06d5b70b00"/>
        <function-ref name="writeDone" scoped="" ref="0x7f06d5b70c90"/>
        <function-ref name="write" scoped="" ref="0x7f06d5b70e20"/>
        <function-ref name="beginRead" scoped="" ref="0x7f06d5b6f020"/>
        <function-ref name="readDone" scoped="" ref="0x7f06d5b6f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f06d5b6ede0" loc="71:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f06d5b6ede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5b6d180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f06d5b6ce80" loc="76:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f06d5b6ce80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5b6b220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f06d5b880f0" loc="53:/opt/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f06d5b880f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f06d5b88470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f06d5ac9c60" loc="69:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f06d5ac9c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5ac8210"/>
        <function-ref name="write" scoped="" ref="0x7f06d5ac83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f06d5ad3020" loc="47:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f06d5ad3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5ad33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f06d5accc70" loc="63:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f06d5accc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5acb020"/>
        <function-ref name="write" scoped="" ref="0x7f06d5acb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f06d5ac7670" loc="72:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f06d5ac7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5ac79f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5ac7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f06d5ac0e50" loc="86:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f06d5ac0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5abe210"/>
        <function-ref name="write" scoped="" ref="0x7f06d5abe3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f06d5ac7e50" loc="73:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f06d5ac7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5ac5210"/>
        <function-ref name="write" scoped="" ref="0x7f06d5ac53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f06d5ab32f0" loc="108:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f06d5ab32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5ab3670"/>
        <function-ref name="write" scoped="" ref="0x7f06d5ab3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f06d5ab52f0" loc="104:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f06d5ab52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5ab5670"/>
        <function-ref name="write" scoped="" ref="0x7f06d5ab5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f06d5ad1370" loc="50:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f06d5ad1370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5ad16f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f06d5abb670" loc="93:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f06d5abb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5abb9f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5abbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f06d5ab62f0" loc="102:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f06d5ab62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5ab6670"/>
        <function-ref name="write" scoped="" ref="0x7f06d5ab6800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f06d5acbc60" loc="65:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f06d5acbc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5aca020"/>
        <function-ref name="write" scoped="" ref="0x7f06d5aca1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f06d5acac60" loc="67:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f06d5acac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5ac9020"/>
        <function-ref name="write" scoped="" ref="0x7f06d5ac91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f06d5ac1670" loc="83:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f06d5ac1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5ac19f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5ac1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f06d5ac3e50" loc="79:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f06d5ac3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5ac2210"/>
        <function-ref name="write" scoped="" ref="0x7f06d5ac23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f06d5ac5670" loc="74:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f06d5ac5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5ac59f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5ac5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f06d5ad58f0" loc="42:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f06d5ad58f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f06d5ad5c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f06d5ad5e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f06d5ad4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f06d5ad0d00" loc="54:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f06d5ad0d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5acf0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f06d5acf370" loc="55:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f06d5acf370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5acf7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f06d5abaa70" loc="95:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f06d5abaa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5abadf0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5ab9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f06d5acfac0" loc="56:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f06d5acfac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5acfe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f06d5ab6ad0" loc="103:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f06d5ab6ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5ab6e50"/>
        <function-ref name="write" scoped="" ref="0x7f06d5ab5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f06d5ad0060" loc="52:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f06d5ad0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5ad03e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f06d5abce50" loc="92:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f06d5abce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5abb210"/>
        <function-ref name="write" scoped="" ref="0x7f06d5abb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f06d5aca480" loc="66:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f06d5aca480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5aca800"/>
        <function-ref name="write" scoped="" ref="0x7f06d5aca990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f06d5acb480" loc="64:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f06d5acb480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5acb800"/>
        <function-ref name="write" scoped="" ref="0x7f06d5acb990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f06d5ad4940" loc="46:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f06d5ad4940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5ad4cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f06d5abde50" loc="90:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f06d5abde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5abc210"/>
        <function-ref name="write" scoped="" ref="0x7f06d5abc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f06d5abe670" loc="87:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f06d5abe670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5abe9f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5abeb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f06d5abc670" loc="91:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f06d5abc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5abc9f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5abcb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f06d5ab4ad0" loc="107:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f06d5ab4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5ab4e50"/>
        <function-ref name="write" scoped="" ref="0x7f06d5ab3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f06d5ab5ad0" loc="105:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f06d5ab5ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5ab5e50"/>
        <function-ref name="write" scoped="" ref="0x7f06d5ab4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f06d5ac2670" loc="80:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f06d5ac2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5ac29f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5ac2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f06d5abee50" loc="88:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f06d5abee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5abd210"/>
        <function-ref name="write" scoped="" ref="0x7f06d5abd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f06d5ab7ad0" loc="101:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f06d5ab7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5ab7e50"/>
        <function-ref name="write" scoped="" ref="0x7f06d5ab6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f06d5ac4670" loc="76:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f06d5ac4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5ac49f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5ac4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f06d5ab3ad0" loc="111:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f06d5ab3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f06d5ab3e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f06d5ab2020"/>
        <function-ref name="write" scoped="" ref="0x7f06d5ab21b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f06d5ab2340"/>
        <function-ref name="readDone" scoped="" ref="0x7f06d5ab24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f06d5ad42f0" loc="45:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f06d5ad42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5ad4670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f06d5acc490" loc="62:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f06d5acc490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5acc810"/>
        <function-ref name="write" scoped="" ref="0x7f06d5acc9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f06d5ac9480" loc="68:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f06d5ac9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5ac9800"/>
        <function-ref name="write" scoped="" ref="0x7f06d5ac9990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f06d5ac1e50" loc="84:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f06d5ac1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5ac0210"/>
        <function-ref name="write" scoped="" ref="0x7f06d5ac03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f06d5ac5e50" loc="75:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f06d5ac5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5ac4210"/>
        <function-ref name="write" scoped="" ref="0x7f06d5ac43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f06d5ac0670" loc="85:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f06d5ac0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5ac09f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5ac0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f06d5ac8670" loc="70:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f06d5ac8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5ac89f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5ac8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f06d5ad3670" loc="48:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f06d5ad3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5ad39f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f06d5ac8e50" loc="71:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f06d5ac8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5ac7210"/>
        <function-ref name="write" scoped="" ref="0x7f06d5ac73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f06d5ad6c30" loc="41:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f06d5ad6c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d5ad5020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f06d5ad51b0"/>
        <function-ref name="request" scoped="" ref="0x7f06d5ad5340"/>
        <function-ref name="granted" scoped="" ref="0x7f06d5ad54d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d5ad5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f06d5ace160" loc="57:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f06d5ace160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5ace4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f06d5acee00" loc="59:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f06d5acee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5acc1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f06d5ab72f0" loc="100:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f06d5ab72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5ab7670"/>
        <function-ref name="write" scoped="" ref="0x7f06d5ab7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f06d5ab9ad0" loc="99:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f06d5ab9ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5ab9e50"/>
        <function-ref name="write" scoped="" ref="0x7f06d5ab7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f06d5ad06b0" loc="53:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f06d5ad06b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5ad0a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f06d5ab92f0" loc="96:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f06d5ab92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5ab9670"/>
        <function-ref name="write" scoped="" ref="0x7f06d5ab9800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f06d5ab42f0" loc="106:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f06d5ab42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5ab4670"/>
        <function-ref name="write" scoped="" ref="0x7f06d5ab4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f06d5ac2e50" loc="81:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f06d5ac2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5ac1210"/>
        <function-ref name="write" scoped="" ref="0x7f06d5ac13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f06d5abd670" loc="89:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f06d5abd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5abd9f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5abdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f06d5ad3cc0" loc="49:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f06d5ad3cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5ad10a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f06d5ad19c0" loc="51:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f06d5ad19c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5ad1d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f06d5ac4e50" loc="77:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f06d5ac4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5ac3210"/>
        <function-ref name="write" scoped="" ref="0x7f06d5ac33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f06d5ace7b0" loc="58:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f06d5ace7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5aceb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f06d5ac3670" loc="78:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f06d5ac3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5ac39f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5ac3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f06d5abbe50" loc="94:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f06d5abbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5aba610"/>
        <function-ref name="write" scoped="" ref="0x7f06d5aba7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f06d5ab27a0" loc="112:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f06d5ab27a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f06d5ab2b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f06d5ab2cb0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5ab2e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f06d5ab0020"/>
        <function-ref name="readDone" scoped="" ref="0x7f06d5ab01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f06d5aa5df0" loc="42:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f06d5aa5df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f06d5aa21c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f06d5aa2350"/>
        <function-ref name="sfd" scoped="" ref="0x7f06d5aa24e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f06d5aa27c0" loc="43:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f06d5aa27c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f06d5aa2b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f06d5aa1020" loc="44:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f06d5aa1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f06d5aa13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f06d5aa55c0" loc="41:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f06d5aa55c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f06d5aa5940"/>
        <function-ref name="stop" scoped="" ref="0x7f06d5aa5ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f06d5a9a380" loc="54:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f06d5a9a380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d5a9a700"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d5a9a890"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d5a9aa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d5a9abb0"/>
        <function-ref name="get" scoped="" ref="0x7f06d5a9ad40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d5a99020"/>
        <function-ref name="set" scoped="" ref="0x7f06d5a991b0"/>
        <function-ref name="clr" scoped="" ref="0x7f06d5a99340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f06d5a93b90" loc="64:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f06d5a93b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f06d5a92020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f06d5a921b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f06d5a92340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f06d5a924d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f06d5a92660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f06d5a927f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f06d5a92980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f06d5a92b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f06d5a92ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f06d5a92e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f06d5a91020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f06d5a911b0"/>
        <function-ref name="sync" scoped="" ref="0x7f06d5a91340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f06d5a915d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f06d5a91760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f06d5a7b9d0" loc="148:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7f06d5a7b9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f06d5a7bd50"/>
        <function-ref name="runTask" scoped="" ref="0x7f06d5a7a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f06d5a91d70" loc="65:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f06d5a91d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a876a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f06d6a87a10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f06d5a8e330"/>
        <function-ref name="clear" scoped="" ref="0x7f06d5a8ea60"/>
        <function-ref name="isValid" scoped="" ref="0x7f06d5a8fba0"/>
        <function-ref name="set" scoped="" ref="0x7f06d5a8d210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f06d5a996b0" loc="55:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f06d5a996b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d5a99a30"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d5a99bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d5a99d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d5a98020"/>
        <function-ref name="get" scoped="" ref="0x7f06d5a981b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d5a98340"/>
        <function-ref name="set" scoped="" ref="0x7f06d5a984d0"/>
        <function-ref name="clr" scoped="" ref="0x7f06d5a98660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f06d5a8bcb0" loc="69:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f06d5a8bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5a8a0a0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5a8a230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f06d5a8a590" loc="70:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f06d5a8a590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5a8a910"/>
        <function-ref name="write" scoped="" ref="0x7f06d5a8aaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f06d5a896d0" loc="72:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f06d5a896d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5a89a50"/>
        <function-ref name="write" scoped="" ref="0x7f06d5a89be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f06d5a94330" loc="62:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f06d5a94330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f06d5a946b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f06d5a94840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f06d5a949d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f06d5a94b60"/>
        <function-ref name="getPower" scoped="" ref="0x7f06d5a94cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f06d5a94e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f06d5a9d550" loc="49:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f06d5a9d550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f06d5a9d8d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f06d5a9da60"/>
        <function-ref name="sfd" scoped="" ref="0x7f06d5a9dbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f06d5a953a0" loc="60:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f06d5a953a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5a95720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f06d5a9b020" loc="53:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f06d5a9b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d5a9b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d5a9b530"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d5a9b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d5a9b850"/>
        <function-ref name="get" scoped="" ref="0x7f06d5a9b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d5a9bb70"/>
        <function-ref name="set" scoped="" ref="0x7f06d5a9bd00"/>
        <function-ref name="clr" scoped="" ref="0x7f06d5a9a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f06d5a88020" loc="73:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f06d5a88020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5a883a0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5a88530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f06d5a9e620" loc="47:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f06d5a9e620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d5a9e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f06d5a931e0" loc="63:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f06d5a931e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f06d5a93560"/>
        <function-ref name="getHeader" scoped="" ref="0x7f06d5a936f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f06d5a93880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f06d5a9c020" loc="50:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f06d5a9c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f06d5a9c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f06d5a976e0" loc="58:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f06d5a976e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d5a97a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f06d5a97bf0"/>
        <function-ref name="request" scoped="" ref="0x7f06d5a97d80"/>
        <function-ref name="granted" scoped="" ref="0x7f06d5a96020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d5a961b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f06d5a8ae00" loc="71:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f06d5a8ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5a891c0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5a89350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f06d5a96530" loc="59:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f06d5a96530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f06d5a968b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f06d5a96a40"/>
        <function-ref name="write" scoped="" ref="0x7f06d5a96bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f06d5a96d60"/>
        <function-ref name="readDone" scoped="" ref="0x7f06d5a95020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f06d5a888b0" loc="74:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f06d5a888b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5a88e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f06d5a9c7c0" loc="51:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f06d5a9c7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f06d5a9cb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f06d5a87150" loc="76:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f06d5a87150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f06d5a874d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f06d5a87660"/>
        <function-ref name="led1On" scoped="" ref="0x7f06d5a877f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f06d5a87980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f06d5a87b10"/>
        <function-ref name="get" scoped="" ref="0x7f06d5a87ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f06d5a87e30"/>
        <function-ref name="led2Off" scoped="" ref="0x7f06d5a864d0"/>
        <function-ref name="set" scoped="" ref="0x7f06d5a86020"/>
        <function-ref name="led0On" scoped="" ref="0x7f06d5a861b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f06d5a86340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f06d5a8b3e0" loc="68:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f06d5a8b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d5a8b760"/>
        <function-ref name="write" scoped="" ref="0x7f06d5a8b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f06d5a8db10" loc="67:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f06d5a8db10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5a8b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f06d5a98a50" loc="56:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f06d5a98a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f06d5a98dd0"/>
        <function-ref name="disable" scoped="" ref="0x7f06d5a97020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f06d5a971b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f06d5a97340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f06d5a95ad0" loc="61:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f06d5a95ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d5a94020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f06d5a9eca0" loc="48:/opt/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f06d5a9eca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f06d5a9d0a0"/>
        <function-ref name="stop" scoped="" ref="0x7f06d5a9d230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f06d5a1ba70" loc="44:/opt/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f06d5a1ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f06d5a1bdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f06d5a1f670" loc="41:/opt/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f06d5a1f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f06d5a1f9f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f06d5a1fb80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f06d5a1fd10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f06d5a1c020"/>
        <function-ref name="getPower" scoped="" ref="0x7f06d5a1c1b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f06d5a1c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f06d5a1a550" loc="46:/opt/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f06d5a1a550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a876a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f06d6a87a10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f06d5a19b00"/>
        <function-ref name="clear" scoped="" ref="0x7f06d5a172a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f06d5a193d0"/>
        <function-ref name="set" scoped="" ref="0x7f06d5a179d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f06d5a1b0c0" loc="43:/opt/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f06d5a1b0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f06d5a1b440"/>
        <function-ref name="getHeader" scoped="" ref="0x7f06d5a1b5d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f06d5a1b760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f06d5a12480" loc="48:/opt/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f06d5a12480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f06d5a12800"/>
        <function-ref name="isSet" scoped="" ref="0x7f06d5a12990"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d5a12b20"/>
        <function-ref name="set" scoped="" ref="0x7f06d5a12cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f06d5a16660" loc="47:/opt/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f06d5a16660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a88ac0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f06d6a87260"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f06d5a15ce0"/>
        <function-ref name="clear" scoped="" ref="0x7f06d5a13460"/>
        <function-ref name="isValid" scoped="" ref="0x7f06d5a155b0"/>
        <function-ref name="set" scoped="" ref="0x7f06d5a13b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f06d5a1c6e0" loc="42:/opt/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f06d5a1c6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f06d5a1ca60"/>
        <function-ref name="noAck" scoped="" ref="0x7f06d5a1cbf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f06d5a1cd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f06d5a0b020" loc="49:/opt/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f06d5a0b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f06d5a0b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f06d5a11d20" loc="46:/opt/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f06d5a11d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f06d5a0e0e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f06d5a0e270"/>
        <function-ref name="getRssi" scoped="" ref="0x7f06d5a0e400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f06d5a0e590"/>
        <function-ref name="getPower" scoped="" ref="0x7f06d5a0e720"/>
        <function-ref name="getLqi" scoped="" ref="0x7f06d5a0e8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f06d5a024a0" loc="56:/opt/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f06d5a024a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d5a02820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f06d5a029b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d5a02b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d5a02cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f06d5a02e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f06d5a0ba80" loc="51:/opt/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f06d5a0ba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a876a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f06d6a87a10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f06d5a09020"/>
        <function-ref name="clear" scoped="" ref="0x7f06d5a09750"/>
        <function-ref name="isValid" scoped="" ref="0x7f06d5a0a8d0"/>
        <function-ref name="set" scoped="" ref="0x7f06d5a09e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f06d5a0d640" loc="48:/opt/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f06d5a0d640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f06d5a0d9c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f06d5a0db50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f06d5a0dce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f06d5a048b0" loc="53:/opt/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f06d5a048b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f06d5a04c30"/>
        <function-ref name="isSet" scoped="" ref="0x7f06d5a04dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d5a02020"/>
        <function-ref name="set" scoped="" ref="0x7f06d5a021b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f06d5a013b0" loc="57:/opt/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f06d5a013b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a876a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f06d6a87a10"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f06d5a00020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f06d5a006e0" loc="58:/opt/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f06d5a006e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a88ac0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f06d6a87260"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f06d59ff3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f06d5a08af0" loc="52:/opt/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f06d5a08af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a88ac0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f06d6a87260"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f06d5a050d0"/>
        <function-ref name="clear" scoped="" ref="0x7f06d5a05800"/>
        <function-ref name="isValid" scoped="" ref="0x7f06d5a06970"/>
        <function-ref name="set" scoped="" ref="0x7f06d5a04020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f06d5a0ec50" loc="47:/opt/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f06d5a0ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f06d5a0d020"/>
        <function-ref name="noAck" scoped="" ref="0x7f06d5a0d1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f06d5a0d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f06d59ae2b0" loc="48:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f06d59ae2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a876a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f06d6a87a10"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f06d59a6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f06d59a6690" loc="49:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f06d59a6690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a876a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f06d6a87a10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f06d59a45b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d59a3020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d59a4a70"/>
        <function-ref name="overflow" scoped="" ref="0x7f06d59a34e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f06d599e020" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f06d599e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a88ac0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f06d6a87260"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f06d599a630"/>
        <function-ref name="fired" scoped="" ref="0x7f06d599da60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f06d599b920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f06d599b4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f06d5999020"/>
        <function-ref name="gett0" scoped="" ref="0x7f06d599aab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f06d599b020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f06d599ec10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f06d599a020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f06d599d110"/>
        <function-ref name="stop" scoped="" ref="0x7f06d599d5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f06d5999610" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f06d5999610"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a88ac0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f06d6a87260"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f06d59973d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f06d599f130" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f06d599f130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d599f4b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f06d596a870" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f06d596a870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a88ac0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f06d6a87260"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f06d5966090"/>
        <function-ref name="fired" scoped="" ref="0x7f06d5968090"/>
        <function-ref name="startAt" scoped="" ref="0x7f06d5968a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f06d5968550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f06d5966550"/>
        <function-ref name="start" scoped="" ref="0x7f06d59696a0"/>
        <function-ref name="stop" scoped="" ref="0x7f06d5969bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f06d596a020" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f06d596a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d596a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f06d499f260" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f06d499f260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a876a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f06d6a87a10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f06d499db30"/>
        <function-ref name="fired" scoped="" ref="0x7f06d499ea60"/>
        <function-ref name="startAt" scoped="" ref="0x7f06d499d4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f06d499d020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f06d499b020"/>
        <function-ref name="start" scoped="" ref="0x7f06d499e090"/>
        <function-ref name="stop" scoped="" ref="0x7f06d499e5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f06d49a09d0" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f06d49a09d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d49a0d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f06d4987a80" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f06d4987a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d4987e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f06d4986020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f06d49861b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f06d4986340"/>
        <function-ref name="fired" scoped="" ref="0x7f06d49864d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f06d4989020" loc="39:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f06d4989020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d49893a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f06d4989530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d49896c0"/>
        <function-ref name="get" scoped="" ref="0x7f06d4989850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d49899e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d4989b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f06d4989d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d4988020"/>
        <function-ref name="overflow" scoped="" ref="0x7f06d49881b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f06d4988340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f06d49884d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f06d4988760" loc="40:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f06d4988760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f06d4988ae0"/>
        <function-ref name="getControl" scoped="" ref="0x7f06d4988c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d4988e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f06d4987020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f06d49871b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d4987340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f06d49874d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f06d4987660"/>
        <function-ref name="setControl" scoped="" ref="0x7f06d49877f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f06d497d760" loc="49:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f06d497d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f06d497dae0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f06d497dc70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f06d497de00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f06d497c020"/>
        <function-ref name="fired" scoped="" ref="0x7f06d497c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f06d4980dd0" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f06d4980dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d497f180"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f06d497f310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d497f4a0"/>
        <function-ref name="get" scoped="" ref="0x7f06d497f630"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d497f7c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d497f950"/>
        <function-ref name="getMode" scoped="" ref="0x7f06d497fae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d497fc70"/>
        <function-ref name="overflow" scoped="" ref="0x7f06d497fe00"/>
        <function-ref name="setMode" scoped="" ref="0x7f06d497e020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f06d497e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f06d4984bf0" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f06d4984bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a876a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f06d6a87a10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f06d49804e0"/>
        <function-ref name="fired" scoped="" ref="0x7f06d49814e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f06d4981e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f06d49819a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f06d49809a0"/>
        <function-ref name="start" scoped="" ref="0x7f06d4982a80"/>
        <function-ref name="stop" scoped="" ref="0x7f06d4981020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f06d4984360" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f06d4984360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d49846e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f06d497e440" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f06d497e440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f06d497e7c0"/>
        <function-ref name="getControl" scoped="" ref="0x7f06d497e950"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f06d497eae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f06d497ec70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f06d497ee00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f06d497d020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f06d497d1b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f06d497d340"/>
        <function-ref name="setControl" scoped="" ref="0x7f06d497d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f06d5989b70" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f06d5989b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a88ac0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f06d6a87260"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f06d59869b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d5985360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d5986e70"/>
        <function-ref name="overflow" scoped="" ref="0x7f06d5985820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f06d597eb90" loc="63:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f06d597eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a876a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f06d6a87a10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f06d597d9d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d597c4e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d597c020"/>
        <function-ref name="overflow" scoped="" ref="0x7f06d597c9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f06d5981610" loc="62:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f06d5981610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a88ac0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f06d6a87260"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f06d59805b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d597e020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d5980a70"/>
        <function-ref name="overflow" scoped="" ref="0x7f06d597e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f06d49995f0" loc="61:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f06d49995f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a88ac0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f06d6a87260"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f06d4997e50"/>
        <function-ref name="fired" scoped="" ref="0x7f06d4998e00"/>
        <function-ref name="startAt" scoped="" ref="0x7f06d4997800"/>
        <function-ref name="isRunning" scoped="" ref="0x7f06d4997340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f06d4996340"/>
        <function-ref name="start" scoped="" ref="0x7f06d4998430"/>
        <function-ref name="stop" scoped="" ref="0x7f06d4998940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f06d4993d20" loc="73:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f06d4993d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a876a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f06d6a87a10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f06d4990670"/>
        <function-ref name="fired" scoped="" ref="0x7f06d4991550"/>
        <function-ref name="startAt" scoped="" ref="0x7f06d4990020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f06d4991a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f06d4990b30"/>
        <function-ref name="start" scoped="" ref="0x7f06d4992b60"/>
        <function-ref name="stop" scoped="" ref="0x7f06d4991090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f06d49969b0" loc="68:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f06d49969b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a88ac0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f06d6a87260"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f06d49957e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d49931b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d4995ca0"/>
        <function-ref name="overflow" scoped="" ref="0x7f06d4993670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f06d59359c0" loc="74:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f06d59359c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f06d5935d40"/>
        <function-ref name="runTask" scoped="" ref="0x7f06d5934020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f06d5939850" loc="49:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f06d5939850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a88ac0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f06d6a87260"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f06d5935090"/>
        <function-ref name="fired" scoped="" ref="0x7f06d5936090"/>
        <function-ref name="startAt" scoped="" ref="0x7f06d5936a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f06d5936550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f06d5935550"/>
        <function-ref name="start" scoped="" ref="0x7f06d59376a0"/>
        <function-ref name="stop" scoped="" ref="0x7f06d5937bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f06d593e2f0" loc="48:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f06d593e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a88ac0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f06d6a87260"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f06d593a870"/>
        <function-ref name="fired" scoped="" ref="0x7f06d593ce40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f06d593bc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f06d593b780"/>
        <function-ref name="getdt" scoped="" ref="0x7f06d59391e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f06d593acf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f06d593b300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f06d593c020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f06d593a260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f06d593c4f0"/>
        <function-ref name="stop" scoped="" ref="0x7f06d593c9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f06d58e3a00" loc="71:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f06d58e3a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f06d58e3d80"/>
        <function-ref name="runTask" scoped="" ref="0x7f06d58e2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f06d58e9640" loc="49:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f06d58e9640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a88ac0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f06d6a87260"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f06d58e5c40"/>
        <function-ref name="fired" scoped="" ref="0x7f06d58e61e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f06d58e5020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f06d58e6ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f06d58e3590"/>
        <function-ref name="gett0" scoped="" ref="0x7f06d58e3110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f06d58e6660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f06d58e7390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f06d58e5630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f06d58e7860"/>
        <function-ref name="stop" scoped="" ref="0x7f06d58e7d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f06d58ee150" loc="48:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f06d58ee150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a88ac0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f06d6a87260"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f06d58ea700"/>
        <function-ref name="fired" scoped="" ref="0x7f06d58edc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f06d58eca50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f06d58ec5b0"/>
        <function-ref name="getdt" scoped="" ref="0x7f06d58e9090"/>
        <function-ref name="gett0" scoped="" ref="0x7f06d58eaba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f06d58ec110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f06d58eed60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f06d58ea0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f06d58ed2a0"/>
        <function-ref name="stop" scoped="" ref="0x7f06d58ed790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f06d58e02b0" loc="48:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f06d58e02b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a88ac0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f06d6a87260"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f06d58df020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f06d58df690" loc="49:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f06d58df690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a88ac0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f06d6a87260"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f06d58de5b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d58dc020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d58dea70"/>
        <function-ref name="overflow" scoped="" ref="0x7f06d58dc4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f06d58d68c0" loc="45:/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f06d58d68c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a88ac0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f06d6a87260"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f06d58c2cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f06d58c4320"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f06d58c20d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f06d58c4c20"/>
        <function-ref name="getdt" scoped="" ref="0x7f06d58c1660"/>
        <function-ref name="gett0" scoped="" ref="0x7f06d58c11e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f06d58c47a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f06d58c54e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f06d58c26e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f06d58c59b0"/>
        <function-ref name="stop" scoped="" ref="0x7f06d58c5e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f06d58cd2c0" loc="49:/opt/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f06d58cd2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a88ac0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f06d6a87260"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f06d58c9870"/>
        <function-ref name="fired" scoped="" ref="0x7f06d58cce40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f06d58cac00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f06d58ca780"/>
        <function-ref name="getdt" scoped="" ref="0x7f06d58c81e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f06d58c9cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f06d58ca300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f06d58cc020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f06d58c9260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f06d58cc4f0"/>
        <function-ref name="stop" scoped="" ref="0x7f06d58cc9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f06d58b1c60" loc="69:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f06d58b1c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d58af210"/>
        <function-ref name="write" scoped="" ref="0x7f06d58af3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f06d58ba020" loc="47:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f06d58ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d58ba3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f06d58b4c70" loc="63:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f06d58b4c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d58b3020"/>
        <function-ref name="write" scoped="" ref="0x7f06d58b31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f06d58ae670" loc="72:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f06d58ae670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d58ae9f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d58aeb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f06d58a7e50" loc="86:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f06d58a7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d58a6210"/>
        <function-ref name="write" scoped="" ref="0x7f06d58a63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f06d58aee50" loc="73:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f06d58aee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d58ad210"/>
        <function-ref name="write" scoped="" ref="0x7f06d58ad3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f06d589a2f0" loc="108:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f06d589a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d589a670"/>
        <function-ref name="write" scoped="" ref="0x7f06d589a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f06d589d2f0" loc="104:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f06d589d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d589d670"/>
        <function-ref name="write" scoped="" ref="0x7f06d589d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f06d58b9370" loc="50:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f06d58b9370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d58b96f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f06d58a3670" loc="93:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f06d58a3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d58a39f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d58a3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f06d589e2f0" loc="102:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f06d589e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d589e670"/>
        <function-ref name="write" scoped="" ref="0x7f06d589e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f06d58b3c60" loc="65:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f06d58b3c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d58b2020"/>
        <function-ref name="write" scoped="" ref="0x7f06d58b21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f06d58b2c60" loc="67:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f06d58b2c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d58b1020"/>
        <function-ref name="write" scoped="" ref="0x7f06d58b11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f06d58a8670" loc="83:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f06d58a8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d58a89f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d58a8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f06d58abe50" loc="79:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f06d58abe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d58aa210"/>
        <function-ref name="write" scoped="" ref="0x7f06d58aa3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f06d58ad670" loc="74:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f06d58ad670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d58ad9f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d58adb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f06d58bd970" loc="42:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f06d58bd970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f06d58bdcf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f06d58bde80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f06d58bb030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f06d58b8d00" loc="54:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f06d58b8d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d58b70a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f06d58b7370" loc="55:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f06d58b7370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d58b77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f06d58a1a70" loc="95:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f06d58a1a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d58a1df0"/>
        <function-ref name="write" scoped="" ref="0x7f06d58a0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f06d58b7ac0" loc="56:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f06d58b7ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d58b7e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f06d589ead0" loc="103:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f06d589ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d589ee50"/>
        <function-ref name="write" scoped="" ref="0x7f06d589d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f06d58b8060" loc="52:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f06d58b8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d58b83e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f06d58a4e50" loc="92:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f06d58a4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d58a3210"/>
        <function-ref name="write" scoped="" ref="0x7f06d58a33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f06d58b2480" loc="66:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f06d58b2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d58b2800"/>
        <function-ref name="write" scoped="" ref="0x7f06d58b2990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f06d58b3480" loc="64:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f06d58b3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d58b3800"/>
        <function-ref name="write" scoped="" ref="0x7f06d58b3990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f06d58bb950" loc="46:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f06d58bb950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d58bbcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f06d58a5e50" loc="90:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f06d58a5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d58a4210"/>
        <function-ref name="write" scoped="" ref="0x7f06d58a43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f06d58a6670" loc="87:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f06d58a6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d58a69f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d58a6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f06d58a4670" loc="91:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f06d58a4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d58a49f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d58a4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f06d589cad0" loc="107:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f06d589cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d589ce50"/>
        <function-ref name="write" scoped="" ref="0x7f06d589a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f06d589dad0" loc="105:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f06d589dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d589de50"/>
        <function-ref name="write" scoped="" ref="0x7f06d589c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f06d58aa670" loc="80:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f06d58aa670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d58aa9f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d58aab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f06d58a6e50" loc="88:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f06d58a6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d58a5210"/>
        <function-ref name="write" scoped="" ref="0x7f06d58a53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f06d589fad0" loc="101:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f06d589fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d589fe50"/>
        <function-ref name="write" scoped="" ref="0x7f06d589e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f06d58ac670" loc="76:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f06d58ac670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d58ac9f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d58acb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f06d589aad0" loc="111:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f06d589aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f06d589ae50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f06d5899020"/>
        <function-ref name="write" scoped="" ref="0x7f06d58991b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f06d5899340"/>
        <function-ref name="readDone" scoped="" ref="0x7f06d58994d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f06d58bb300" loc="45:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f06d58bb300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d58bb680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f06d58b4490" loc="62:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f06d58b4490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d58b4810"/>
        <function-ref name="write" scoped="" ref="0x7f06d58b49a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f06d58b1480" loc="68:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f06d58b1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d58b1800"/>
        <function-ref name="write" scoped="" ref="0x7f06d58b1990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f06d58a8e50" loc="84:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f06d58a8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d58a7210"/>
        <function-ref name="write" scoped="" ref="0x7f06d58a73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f06d58ade50" loc="75:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f06d58ade50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d58ac210"/>
        <function-ref name="write" scoped="" ref="0x7f06d58ac3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f06d58a7670" loc="85:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f06d58a7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d58a79f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d58a7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f06d58af670" loc="70:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f06d58af670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d58af9f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d58afb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f06d58ba670" loc="48:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f06d58ba670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d58ba9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f06d58afe50" loc="71:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f06d58afe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d58ae210"/>
        <function-ref name="write" scoped="" ref="0x7f06d58ae3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f06d58bed00" loc="41:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f06d58bed00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d58bd0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f06d58bd230"/>
        <function-ref name="request" scoped="" ref="0x7f06d58bd3c0"/>
        <function-ref name="granted" scoped="" ref="0x7f06d58bd550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d58bd6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f06d58b5160" loc="57:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f06d58b5160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d58b54e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f06d58b5e00" loc="59:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f06d58b5e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d58b41c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f06d589f2f0" loc="100:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f06d589f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d589f670"/>
        <function-ref name="write" scoped="" ref="0x7f06d589f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f06d58a0ad0" loc="99:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f06d58a0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d58a0e50"/>
        <function-ref name="write" scoped="" ref="0x7f06d589f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f06d58b86b0" loc="53:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f06d58b86b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d58b8a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f06d58a02f0" loc="96:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f06d58a02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d58a0670"/>
        <function-ref name="write" scoped="" ref="0x7f06d58a0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f06d589c2f0" loc="106:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f06d589c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d589c670"/>
        <function-ref name="write" scoped="" ref="0x7f06d589c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f06d58aae50" loc="81:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f06d58aae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d58a8210"/>
        <function-ref name="write" scoped="" ref="0x7f06d58a83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f06d58a5670" loc="89:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f06d58a5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d58a59f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d58a5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f06d58bacc0" loc="49:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f06d58bacc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d58b90a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f06d58b99c0" loc="51:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f06d58b99c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d58b9d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f06d58ace50" loc="77:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f06d58ace50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d58ab210"/>
        <function-ref name="write" scoped="" ref="0x7f06d58ab3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f06d58b57b0" loc="58:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f06d58b57b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f06d58b5b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f06d58ab670" loc="78:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f06d58ab670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d58ab9f0"/>
        <function-ref name="write" scoped="" ref="0x7f06d58abb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f06d58a3e50" loc="94:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f06d58a3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f06d58a1610"/>
        <function-ref name="write" scoped="" ref="0x7f06d58a17a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f06d58997a0" loc="112:/opt/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f06d58997a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f06d5899b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f06d5899cb0"/>
        <function-ref name="write" scoped="" ref="0x7f06d5899e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f06d5898020"/>
        <function-ref name="readDone" scoped="" ref="0x7f06d58981b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f06d5870a20" loc="46:/opt/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f06d5870a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f06d5870da0"/>
        <function-ref name="rand32" scoped="" ref="0x7f06d586f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f06d586e920" loc="45:/opt/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f06d586e920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d5870560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f06d58749a0" loc="44:/opt/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f06d58749a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d5874d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f06d5869a20" loc="48:/opt/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f06d5869a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f06d5869da0"/>
        <function-ref name="rand32" scoped="" ref="0x7f06d5868020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f06d586a940" loc="47:/opt/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f06d586a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d5869560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f06d586a080" loc="46:/opt/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f06d586a080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d586a400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f06d5872aa0" loc="67:/opt/tinyos-main/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f06d5872aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f06d5872e20"/>
        <function-ref name="toIdle" scoped="" ref="0x7f06d586b020"/>
        <function-ref name="isState" scoped="" ref="0x7f06d586b1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f06d586b340"/>
        <function-ref name="requestState" scoped="" ref="0x7f06d586b4d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f06d586b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f06d584d020" loc="44:/opt/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f06d584d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d584d3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d584d530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d584d6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d584d850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d584d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f06d584e220" loc="40:/opt/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f06d584e220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d584e5a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d584e730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d584e8c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d584ea50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d584ebe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f06d5849e60" loc="45:/opt/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f06d5849e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d5848210"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d58483a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d5848530"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d58486c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d5848850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f06d584ca20" loc="40:/opt/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f06d584ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d584cda0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d5849020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d58491b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d5849340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d58494d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f06d58478f0" loc="47:/opt/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f06d58478f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f06d5847c70"/>
        <function-ref name="rand32" scoped="" ref="0x7f06d5847e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f06d5849750" loc="41:/opt/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f06d5849750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d5849ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f06d5846170" loc="48:/opt/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f06d5846170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f06d58464f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f06d5846680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f06d5846810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f06d5848ae0" loc="46:/opt/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f06d5848ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f06d5848e60"/>
        <function-ref name="toIdle" scoped="" ref="0x7f06d5847020"/>
        <function-ref name="isState" scoped="" ref="0x7f06d58471b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f06d5847340"/>
        <function-ref name="requestState" scoped="" ref="0x7f06d58474d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f06d5847660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f06d584a690" loc="67:/opt/tinyos-main/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f06d584a690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f06d584aa10"/>
        <function-ref name="toIdle" scoped="" ref="0x7f06d584aba0"/>
        <function-ref name="isState" scoped="" ref="0x7f06d584ad30"/>
        <function-ref name="isIdle" scoped="" ref="0x7f06d5835020"/>
        <function-ref name="requestState" scoped="" ref="0x7f06d58351b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f06d5835340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f06d582f950" loc="47:/opt/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f06d582f950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f06d582fcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f06d5832aa0" loc="42:/opt/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f06d5832aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f06d5832e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f06d582f200" loc="43:/opt/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f06d582f200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f06d582f580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f06d58293f0" loc="49:/opt/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f06d58293f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f06d5829770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f06d582ab70" loc="45:/opt/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f06d582ab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d5829020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f06d582ee30" loc="43:/opt/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f06d582ee30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f06d582a1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f06d5829a70" loc="50:/opt/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f06d5829a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f06d5829df0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f06d5827020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f06d58271b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f06d582a570" loc="44:/opt/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f06d582a570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f06d582a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f06d57fa020" loc="75:/opt/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f06d57fa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f06d57fa3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f06d57fa6b0" loc="76:/opt/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f06d57fa6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d57faa30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d57fabc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d57fad50"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d57f9020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d57f91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f06d57fe960" loc="65:/opt/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f06d57fe960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d57fece0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d57fee70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d57fd030"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d57fd1c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d57fd350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f06d57fdca0" loc="68:/opt/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f06d57fdca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d57fc0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d57fc230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d57fc3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d57fc550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d57fc6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f06d57fd5f0" loc="66:/opt/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f06d57fd5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f06d57fd970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f06d5800cb0" loc="64:/opt/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f06d5800cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d57fe0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f06d57fe230"/>
        <function-ref name="request" scoped="" ref="0x7f06d57fe3c0"/>
        <function-ref name="granted" scoped="" ref="0x7f06d57fe550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d57fe6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f06d57fca50" loc="69:/opt/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f06d57fca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f06d57fcdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f06d57fb170" loc="71:/opt/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f06d57fb170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d57fb4f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f06d57fb680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d57fb810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d57fb9a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f06d57fbb30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f06d57f0d70" loc="58:/opt/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f06d57f0d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d57ef180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d57ef310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d57ef4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d57ef630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d57ef7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f06d57efb10" loc="59:/opt/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f06d57efb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f06d57ee020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f06d57c1db0" loc="184:/opt/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7f06d57c1db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f06d57c0180"/>
        <function-ref name="runTask" scoped="" ref="0x7f06d57c0310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f06d57ee2f0" loc="60:/opt/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f06d57ee2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f06d57ee670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f06d57ee800"/>
        <function-ref name="getRssi" scoped="" ref="0x7f06d57ee990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f06d57eeb20"/>
        <function-ref name="getPower" scoped="" ref="0x7f06d57eecb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f06d57eee40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f06d57f2a20" loc="51:/opt/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f06d57f2a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d57f2da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d57f1020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d57f11b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d57f1340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d57f14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f06d57edb70" loc="62:/opt/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f06d57edb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f06d57ec020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f06d57ec1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f06d57ec340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f06d57ec4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f06d57ed170" loc="61:/opt/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f06d57ed170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f06d57ed4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f06d57ed680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f06d57ed810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f06d57f2370" loc="49:/opt/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f06d57f2370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f06d57f26f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f06d57f57b0" loc="46:/opt/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f06d57f57b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d57f5b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f06d57f5cc0"/>
        <function-ref name="request" scoped="" ref="0x7f06d57f5e50"/>
        <function-ref name="granted" scoped="" ref="0x7f06d57f4020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d57f41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f06d57f44d0" loc="48:/opt/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f06d57f44d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d57f4850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d57f49e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d57f4b70"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d57f4d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d57f2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f06d57f1840" loc="52:/opt/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f06d57f1840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f06d57f1bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f06d57f0020" loc="54:/opt/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f06d57f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d57f03a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f06d57f0530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d57f06c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d57f0850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f06d57f09e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f06d57a1dd0" loc="44:/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f06d57a1dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d57a0180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f06d57a0410" loc="45:/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f06d57a0410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f06d57a0790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f06d57a0920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f06d57a0ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f06d57a0c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f06d5794b80" loc="46:/opt/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f06d5794b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f06d5793020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f06d57931b0"/>
        <function-ref name="start" scoped="" ref="0x7f06d5793340"/>
        <function-ref name="stop" scoped="" ref="0x7f06d57934d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f06d5792860" loc="51:/opt/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f06d5792860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d5792be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d5792d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d5791020"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d57911b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d5791340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f06d5791690" loc="52:/opt/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f06d5791690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f06d5791a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f06d5798cf0" loc="43:/opt/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f06d5798cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d57950a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d5795230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d57953c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d5795550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d57956e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f06d5794080" loc="45:/opt/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f06d5794080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f06d5794400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f06d5794590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f06d5794720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f06d57948b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f06d5793800" loc="47:/opt/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f06d5793800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f06d5793b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7f06d5793d10"/>
        <function-ref name="isState" scoped="" ref="0x7f06d5792020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f06d57921b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f06d5792340"/>
        <function-ref name="forceState" scoped="" ref="0x7f06d57924d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f06d5791d90" loc="53:/opt/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f06d5791d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f06d5790180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f06d5790310"/>
        <function-ref name="start" scoped="" ref="0x7f06d57904a0"/>
        <function-ref name="stop" scoped="" ref="0x7f06d5790630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f06d5795980" loc="44:/opt/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f06d5795980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f06d5795d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f06d578d2d0" loc="41:/opt/tinyos-main/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f06d578d2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f06d578d650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f06d578d7e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f06d578d970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f06d578db00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f06d578f580" loc="67:/opt/tinyos-main/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f06d578f580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f06d578f900"/>
        <function-ref name="toIdle" scoped="" ref="0x7f06d578fa90"/>
        <function-ref name="isState" scoped="" ref="0x7f06d578fc20"/>
        <function-ref name="isIdle" scoped="" ref="0x7f06d578fdb0"/>
        <function-ref name="requestState" scoped="" ref="0x7f06d578e020"/>
        <function-ref name="forceState" scoped="" ref="0x7f06d578e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f06d5780d70" loc="45:/opt/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f06d5780d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d577f180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d577f310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d577f4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d577f630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d577f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f06d5783350" loc="40:/opt/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f06d5783350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d57836d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d5783860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d57839f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d5783b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d5783d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f06d5780020" loc="41:/opt/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f06d5780020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f06d57803a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f06d5780530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f06d57806c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f06d5780850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f06d57809e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f06d577b1c0" loc="44:/opt/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f06d577b1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f06d577b540"/>
        <function-ref name="noAck" scoped="" ref="0x7f06d577b6d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f06d577b860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f06d577e410" loc="40:/opt/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f06d577e410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f06d577e790"/>
        <function-ref name="setRetries" scoped="" ref="0x7f06d577e920"/>
        <function-ref name="getRetries" scoped="" ref="0x7f06d577eab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f06d577ec40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f06d577edd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f06d575b690" loc="59:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f06d575b690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f06d575ba10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f06d575c860" loc="58:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f06d575c860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d575cbe0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d575cd70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d575b020"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d575b1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d575b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f06d5759610" loc="62:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f06d5759610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f06d5759990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f06d5759b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f06d5759cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f06d5759e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f06d5758020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f06d57581b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f06d5758340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f06d57584d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f06d5758660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f06d57587f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f06d5758980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f06d5758b10"/>
        <function-ref name="sync" scoped="" ref="0x7f06d5758ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f06d5757020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f06d57571b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f06d575d8b0" loc="54:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f06d575d8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f06d684bca0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f06d575dc30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f06d575ddc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f06d575c020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f06d575c1b0"/>
        <function-ref name="setCca" scoped="" ref="0x7f06d575c340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f06d575c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f06d575ece0" loc="53:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f06d575ece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f06d684bca0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f06d575d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f06d57561f0" loc="64:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f06d57561f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f06d5756570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f06d5756700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f06d5756890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f06d5756a20"/>
        <function-ref name="setCca" scoped="" ref="0x7f06d5756bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f06d5756d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f06d575fa80" loc="52:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f06d575fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d575fe00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f06d575e020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d575e1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d575e340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f06d575e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f06d5763020" loc="48:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f06d5763020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f06d684bca0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d57633a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d5763530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d57636c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d5763850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d57639e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f06d5762df0" loc="50:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f06d5762df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f06d684bca0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f06d57611c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f06d575bce0" loc="60:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f06d575bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f06d575a0a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f06d575a230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f06d575a3c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f06d575a550"/>
        <function-ref name="getPower" scoped="" ref="0x7f06d575a6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f06d575a870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f06d57574d0" loc="63:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f06d57574d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f06d5757950"/>
        <function-ref name="changed" scoped="" ref="0x7f06d5757ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f06d5757c70"/>
        <function-ref name="setAddress" scoped="" ref="0x7f06d5757e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f06d575ab70" loc="61:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f06d575ab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f06d5759020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f06d57591b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f06d5759340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f06d5762210" loc="49:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f06d5762210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f06d684bca0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f06d5762590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f06d5755d30" loc="67:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f06d5755d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f06d57540e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f06d5754270"/>
        <function-ref name="led1On" scoped="" ref="0x7f06d5754400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f06d5754590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f06d5754720"/>
        <function-ref name="get" scoped="" ref="0x7f06d57548b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f06d5754a40"/>
        <function-ref name="led2Off" scoped="" ref="0x7f06d57531b0"/>
        <function-ref name="set" scoped="" ref="0x7f06d5754bd0"/>
        <function-ref name="led0On" scoped="" ref="0x7f06d5754d60"/>
        <function-ref name="led2On" scoped="" ref="0x7f06d5753020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f06d5761470" loc="51:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f06d5761470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f06d57617f0"/>
        <function-ref name="source" scoped="" ref="0x7f06d5761980"/>
        <function-ref name="address" scoped="" ref="0x7f06d5761b10"/>
        <function-ref name="destination" scoped="" ref="0x7f06d5761ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f06d5761e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f06d575f020"/>
        <function-ref name="type" scoped="" ref="0x7f06d575f1b0"/>
        <function-ref name="setType" scoped="" ref="0x7f06d575f340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f06d575f4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f06d575f660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f06d575f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7f06d57550f0" loc="66:/opt/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7f06d57550f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d5755470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f06d5755600"/>
        <function-ref name="request" scoped="" ref="0x7f06d5755790"/>
        <function-ref name="granted" scoped="" ref="0x7f06d5755920"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d5755ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SimpleSend" ref="0x7f06d5589db0" loc="4:lib/modules/SimpleSendC.nc">
      <component-ref qname="NodeC.SimpleSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SimpleSend" scoped="" ref="0x7f06d5589db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SimpleSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d5588180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SimpleSend" ref="0x7f06d48c1560" loc="15:lib/modules/SimpleSendP.nc">
      <component-ref qname="NodeC.SimpleSendC.SimpleSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SimpleSend" scoped="" ref="0x7f06d48c1560"/></type-interface>
      <instance>
        <interfacedef-ref qname="SimpleSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d48c18e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pool" ref="0x7f06d48bc7f0" loc="18:lib/modules/SimpleSendP.nc">
      <component-ref qname="NodeC.SimpleSendC.SimpleSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f06d48bc7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0x7f06d6897020"/>
            <typename><typedef-ref name="sendInfo" ref="0x7f06d6897ab0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f06d48b9950"/>
        <function-ref name="maxSize" scoped="" ref="0x7f06d48bbd80"/>
        <function-ref name="empty" scoped="" ref="0x7f06d48bb480"/>
        <function-ref name="put" scoped="" ref="0x7f06d48b9260"/>
        <function-ref name="size" scoped="" ref="0x7f06d48bb900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f06d48c1cd0" loc="17:lib/modules/SimpleSendP.nc">
      <component-ref qname="NodeC.SimpleSendC.SimpleSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f06d48c1cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0x7f06d6897020"/>
              <typename><typedef-ref name="sendInfo" ref="0x7f06d6897ab0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f06d48bfba0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f06d48bd950"/>
        <function-ref name="element" scoped="" ref="0x7f06d48bc020"/>
        <function-ref name="full" scoped="" ref="0x7f06d48c0dc0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f06d48bf720"/>
        <function-ref name="dequeue" scoped="" ref="0x7f06d48bd2a0"/>
        <function-ref name="empty" scoped="" ref="0x7f06d48c0940"/>
        <function-ref name="size" scoped="" ref="0x7f06d48bf2a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f06d48b3450" loc="22:lib/modules/SimpleSendP.nc">
      <component-ref qname="NodeC.SimpleSendC.SimpleSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f06d48b3450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d48b37d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f06d48b3960"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d48b3af0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d48b3c80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f06d48b3e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f06d48b1760" loc="24:lib/modules/SimpleSendP.nc">
      <component-ref qname="NodeC.SimpleSendC.SimpleSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f06d48b1760"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d48b1ae0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d48b1c70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d48b1e00"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d48ae020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d48ae1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f06d48ae440" loc="26:lib/modules/SimpleSendP.nc">
      <component-ref qname="NodeC.SimpleSendC.SimpleSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f06d48ae440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f06d48ae7c0"/>
        <function-ref name="rand32" scoped="" ref="0x7f06d48ae950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendBufferTask" ref="0x7f06d48aec20" loc="74:lib/modules/SimpleSendP.nc">
      <component-ref qname="NodeC.SimpleSendC.SimpleSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendBufferTask" scoped="" ref="0x7f06d48aec20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f06d48ac020"/>
        <function-ref name="runTask" scoped="" ref="0x7f06d48ac1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f06d48b20e0" loc="23:lib/modules/SimpleSendP.nc">
      <component-ref qname="NodeC.SimpleSendC.SimpleSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f06d48b20e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f06d48b2460"/>
        <function-ref name="source" scoped="" ref="0x7f06d48b25f0"/>
        <function-ref name="address" scoped="" ref="0x7f06d48b2780"/>
        <function-ref name="destination" scoped="" ref="0x7f06d48b2910"/>
        <function-ref name="setSource" scoped="" ref="0x7f06d48b2aa0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f06d48b2c30"/>
        <function-ref name="type" scoped="" ref="0x7f06d48b2dc0"/>
        <function-ref name="setType" scoped="" ref="0x7f06d48b1020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f06d48b11b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f06d48b1340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f06d48b14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTimer" ref="0x7f06d48b8220" loc="20:lib/modules/SimpleSendP.nc">
      <component-ref qname="NodeC.SimpleSendC.SimpleSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendTimer" scoped="" ref="0x7f06d48b8220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a88ac0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f06d6a87260"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f06d48b46e0"/>
        <function-ref name="fired" scoped="" ref="0x7f06d48b7c90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f06d48b5a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f06d48b55f0"/>
        <function-ref name="getdt" scoped="" ref="0x7f06d48b3020"/>
        <function-ref name="gett0" scoped="" ref="0x7f06d48b4b60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f06d48b5170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f06d48b8e10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f06d48b40d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f06d48b7340"/>
        <function-ref name="stop" scoped="" ref="0x7f06d48b7810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f06d48a9370" loc="45:/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="NodeC.SimpleSendC.sendTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f06d48a9370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a88ac0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f06d6a87260"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f06d48a6870"/>
        <function-ref name="fired" scoped="" ref="0x7f06d48a8e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f06d48a7c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f06d48a7780"/>
        <function-ref name="getdt" scoped="" ref="0x7f06d48a41e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f06d48a6cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f06d48a7300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f06d48a8020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f06d48a6260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f06d48a84f0"/>
        <function-ref name="stop" scoped="" ref="0x7f06d48a89c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f06d48a3cf0" loc="49:/opt/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="NodeC.SimpleSendC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f06d48a3cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d48a20a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d48a2230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d48a23c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d48a2550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d48a26e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f06d48a2930" loc="50:/opt/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="NodeC.SimpleSendC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f06d48a2930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d48a2cb0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f06d48a2e40"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d48a1020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d48a11b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f06d48a1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f06d48a1590" loc="51:/opt/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="NodeC.SimpleSendC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f06d48a1590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f06d48a1910"/>
        <function-ref name="source" scoped="" ref="0x7f06d48a1aa0"/>
        <function-ref name="address" scoped="" ref="0x7f06d48a1c30"/>
        <function-ref name="destination" scoped="" ref="0x7f06d48a1dc0"/>
        <function-ref name="setSource" scoped="" ref="0x7f06d48a0020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f06d48a01b0"/>
        <function-ref name="type" scoped="" ref="0x7f06d48a0340"/>
        <function-ref name="setType" scoped="" ref="0x7f06d48a04d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f06d48a0660"/>
        <function-ref name="setGroup" scoped="" ref="0x7f06d48a07f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f06d48a0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f06d48a0c10" loc="52:/opt/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="NodeC.SimpleSendC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f06d48a0c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f06d489f020"/>
        <function-ref name="noAck" scoped="" ref="0x7f06d489f1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f06d489f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f06d4868060" loc="49:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="NodeC.SimpleSendC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f06d4868060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d48683e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d4868570"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d4868700"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d4868890"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d4868a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f06d4868c70" loc="50:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="NodeC.SimpleSendC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f06d4868c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d4867020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f06d48671b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d4867340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d48674d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f06d4867660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f06d48678b0" loc="51:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="NodeC.SimpleSendC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f06d48678b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f06d4867c30"/>
        <function-ref name="source" scoped="" ref="0x7f06d4867dc0"/>
        <function-ref name="address" scoped="" ref="0x7f06d4865020"/>
        <function-ref name="destination" scoped="" ref="0x7f06d48651b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f06d4865340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f06d48654d0"/>
        <function-ref name="type" scoped="" ref="0x7f06d4865660"/>
        <function-ref name="setType" scoped="" ref="0x7f06d48657f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f06d4865980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f06d4865b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f06d4865ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f06d4864020" loc="52:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="NodeC.SimpleSendC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f06d4864020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f06d48643a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f06d4864530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f06d48646c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f06d485b9e0" loc="44:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="NodeC.SimpleSendC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f06d485b9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d485bd60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d485a020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d485a1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d485a340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d485a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f06d485a780" loc="46:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="NodeC.SimpleSendC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f06d485a780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d485ab00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d485ac90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d485ae20"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d4859020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d48591b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f06d4859400" loc="47:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="NodeC.SimpleSendC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f06d4859400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f06d4859780"/>
        <function-ref name="source" scoped="" ref="0x7f06d4859910"/>
        <function-ref name="address" scoped="" ref="0x7f06d4859aa0"/>
        <function-ref name="destination" scoped="" ref="0x7f06d4859c30"/>
        <function-ref name="setSource" scoped="" ref="0x7f06d4859dc0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f06d4858020"/>
        <function-ref name="type" scoped="" ref="0x7f06d48581b0"/>
        <function-ref name="setType" scoped="" ref="0x7f06d4858340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f06d48584d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f06d4858660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f06d48587f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f06d56402c0" loc="43:/opt/tinyos-main/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f06d56402c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d5640640"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d56407d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d5640960"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d5640af0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d5640c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f06d55f4a40" loc="48:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f06d55f4a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f06d684bca0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d55f4de0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d55f3020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d55f31b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d55f3340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d55f34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f06d55f5b00" loc="46:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f06d55f5b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d55f4020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d55f41b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d55f4340"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d55f44d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d55f4660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f06d55f2d60" loc="50:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f06d55f2d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d55f1180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f06d55f1310"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d55f14a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d55f1630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f06d55f17c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f06d55f1a90" loc="169:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f06d55f1a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f06d55f1e10"/>
        <function-ref name="runTask" scoped="" ref="0x7f06d55f0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f06d55f02f0" loc="126:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f06d55f02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f06d55f0670"/>
        <function-ref name="runTask" scoped="" ref="0x7f06d55f0800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f06d55f3720" loc="49:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f06d55f3720"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f06d55f3aa0"/>
        <function-ref name="source" scoped="" ref="0x7f06d55f3c30"/>
        <function-ref name="address" scoped="" ref="0x7f06d55f3dc0"/>
        <function-ref name="destination" scoped="" ref="0x7f06d55f2020"/>
        <function-ref name="setSource" scoped="" ref="0x7f06d55f21b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f06d55f2340"/>
        <function-ref name="type" scoped="" ref="0x7f06d55f24d0"/>
        <function-ref name="setType" scoped="" ref="0x7f06d55f2660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f06d55f27f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f06d55f2980"/>
        <function-ref name="localGroup" scoped="" ref="0x7f06d55f2b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f06d489c240" loc="42:/opt/tinyos-main/tos/system/PoolC.nc">
      <component-ref qname="NodeC.SimpleSendC.PoolC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f06d489c240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0x7f06d6897020"/>
            <typename><typedef-ref name="sendInfo" ref="0x7f06d6897ab0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f06d4899330"/>
        <function-ref name="maxSize" scoped="" ref="0x7f06d489b780"/>
        <function-ref name="empty" scoped="" ref="0x7f06d489ce30"/>
        <function-ref name="put" scoped="" ref="0x7f06d489bc00"/>
        <function-ref name="size" scoped="" ref="0x7f06d489b300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f06d48138a0" loc="56:/opt/tinyos-main/tos/system/PoolP.nc">
      <component-ref qname="NodeC.SimpleSendC.PoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f06d48138a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0x7f06d6897020"/>
            <typename><typedef-ref name="sendInfo" ref="0x7f06d6897ab0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f06d4810990"/>
        <function-ref name="maxSize" scoped="" ref="0x7f06d4811dc0"/>
        <function-ref name="empty" scoped="" ref="0x7f06d48114c0"/>
        <function-ref name="put" scoped="" ref="0x7f06d48102a0"/>
        <function-ref name="size" scoped="" ref="0x7f06d4811940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f06d48131b0" loc="55:/opt/tinyos-main/tos/system/PoolP.nc">
      <component-ref qname="NodeC.SimpleSendC.PoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f06d48131b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d4813530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f06d4897200" loc="43:/opt/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="NodeC.SimpleSendC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f06d4897200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0x7f06d6897020"/>
              <typename><typedef-ref name="sendInfo" ref="0x7f06d6897ab0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f06d4894090"/>
        <function-ref name="enqueue" scoped="" ref="0x7f06d4894df0"/>
        <function-ref name="element" scoped="" ref="0x7f06d48934e0"/>
        <function-ref name="full" scoped="" ref="0x7f06d48962a0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f06d4896ba0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f06d4894740"/>
        <function-ref name="empty" scoped="" ref="0x7f06d4897df0"/>
        <function-ref name="size" scoped="" ref="0x7f06d4896720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CommandHandler" ref="0x7f06d5587450" loc="14:lib/modules/CommandHandlerC.nc">
      <component-ref qname="CommandHandlerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CommandHandler" scoped="" ref="0x7f06d5587450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CommandHandler"/>
      </instance>
      <interface-functions>
        <function-ref name="printLinkState" scoped="" ref="0x7f06d55877d0"/>
        <function-ref name="printNeighbors" scoped="" ref="0x7f06d5587960"/>
        <function-ref name="printDistanceVector" scoped="" ref="0x7f06d5587af0"/>
        <function-ref name="setTestClient" scoped="" ref="0x7f06d5587c80"/>
        <function-ref name="setTestServer" scoped="" ref="0x7f06d5587e10"/>
        <function-ref name="setAppServer" scoped="" ref="0x7f06d5584020"/>
        <function-ref name="printRouteTable" scoped="" ref="0x7f06d55841b0"/>
        <function-ref name="ping" scoped="" ref="0x7f06d5584340"/>
        <function-ref name="setAppClient" scoped="" ref="0x7f06d55844d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pool" ref="0x7f06d557fc50" loc="16:lib/modules/CommandHandlerP.nc">
      <component-ref qname="CommandHandlerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f06d557fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
            <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f06d557dd50"/>
        <function-ref name="maxSize" scoped="" ref="0x7f06d557d1e0"/>
        <function-ref name="empty" scoped="" ref="0x7f06d557e860"/>
        <function-ref name="put" scoped="" ref="0x7f06d557d660"/>
        <function-ref name="size" scoped="" ref="0x7f06d557ece0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f06d557c6c0" loc="17:lib/modules/CommandHandlerP.nc">
      <component-ref qname="CommandHandlerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f06d557c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
              <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f06d55795f0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f06d55783a0"/>
        <function-ref name="element" scoped="" ref="0x7f06d5578a10"/>
        <function-ref name="full" scoped="" ref="0x7f06d557a810"/>
        <function-ref name="maxSize" scoped="" ref="0x7f06d5579170"/>
        <function-ref name="dequeue" scoped="" ref="0x7f06d5579ca0"/>
        <function-ref name="empty" scoped="" ref="0x7f06d557a390"/>
        <function-ref name="size" scoped="" ref="0x7f06d557ac90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f06d5576160" loc="18:lib/modules/CommandHandlerP.nc">
      <component-ref qname="CommandHandlerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f06d5576160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d55764e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f06d5576670"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d5576800"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d5576990"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f06d5576b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="processCommand" ref="0x7f06d5575920" loc="22:lib/modules/CommandHandlerP.nc">
      <component-ref qname="CommandHandlerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="processCommand" scoped="" ref="0x7f06d5575920"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f06d5575ca0"/>
        <function-ref name="runTask" scoped="" ref="0x7f06d5575e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f06d557f490" loc="15:lib/modules/CommandHandlerP.nc">
      <component-ref qname="CommandHandlerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f06d557f490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f06d557f810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CommandHandler" ref="0x7f06d5580150" loc="14:lib/modules/CommandHandlerP.nc">
      <component-ref qname="CommandHandlerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CommandHandler" scoped="" ref="0x7f06d5580150"/></type-interface>
      <instance>
        <interfacedef-ref qname="CommandHandler"/>
      </instance>
      <interface-functions>
        <function-ref name="printLinkState" scoped="" ref="0x7f06d55804d0"/>
        <function-ref name="printNeighbors" scoped="" ref="0x7f06d5580660"/>
        <function-ref name="printDistanceVector" scoped="" ref="0x7f06d55807f0"/>
        <function-ref name="setTestClient" scoped="" ref="0x7f06d5580980"/>
        <function-ref name="setTestServer" scoped="" ref="0x7f06d5580b10"/>
        <function-ref name="setAppServer" scoped="" ref="0x7f06d5580ca0"/>
        <function-ref name="printRouteTable" scoped="" ref="0x7f06d5580e30"/>
        <function-ref name="ping" scoped="" ref="0x7f06d557f020"/>
        <function-ref name="setAppClient" scoped="" ref="0x7f06d557f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f06d5565630" loc="46:/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="CommandHandlerC.CommandReceive"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f06d5565630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d55659b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f06d5565b40"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d5565cd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d5565e60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f06d5563020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f06d5565060" loc="45:/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="CommandHandlerC.CommandReceive"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f06d5565060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f06d55653e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f06d5563270" loc="47:/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="CommandHandlerC.CommandReceive"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f06d5563270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f06d55635f0"/>
        <function-ref name="source" scoped="" ref="0x7f06d5563780"/>
        <function-ref name="address" scoped="" ref="0x7f06d5563910"/>
        <function-ref name="destination" scoped="" ref="0x7f06d5563aa0"/>
        <function-ref name="setSource" scoped="" ref="0x7f06d5563c30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f06d5563dc0"/>
        <function-ref name="type" scoped="" ref="0x7f06d5562020"/>
        <function-ref name="setType" scoped="" ref="0x7f06d55621b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f06d5562340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f06d55624d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f06d5562660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f06d5560d30" loc="42:/opt/tinyos-main/tos/system/PoolC.nc">
      <component-ref qname="CommandHandlerC.PoolC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f06d5560d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
            <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f06d555ee10"/>
        <function-ref name="maxSize" scoped="" ref="0x7f06d555e2a0"/>
        <function-ref name="empty" scoped="" ref="0x7f06d555f940"/>
        <function-ref name="put" scoped="" ref="0x7f06d555e720"/>
        <function-ref name="size" scoped="" ref="0x7f06d555fdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f06d47ed0b0" loc="56:/opt/tinyos-main/tos/system/PoolP.nc">
      <component-ref qname="CommandHandlerC.PoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f06d47ed0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
            <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f06d47ea1d0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f06d47ec5f0"/>
        <function-ref name="empty" scoped="" ref="0x7f06d47edca0"/>
        <function-ref name="put" scoped="" ref="0x7f06d47eca70"/>
        <function-ref name="size" scoped="" ref="0x7f06d47ec170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f06d47ee960" loc="55:/opt/tinyos-main/tos/system/PoolP.nc">
      <component-ref qname="CommandHandlerC.PoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f06d47ee960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d47eece0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f06d555a020" loc="43:/opt/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="CommandHandlerC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f06d555a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
              <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f06d5559e50"/>
        <function-ref name="enqueue" scoped="" ref="0x7f06d5557be0"/>
        <function-ref name="element" scoped="" ref="0x7f06d5556280"/>
        <function-ref name="full" scoped="" ref="0x7f06d55590d0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f06d55599d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f06d5557530"/>
        <function-ref name="empty" scoped="" ref="0x7f06d555ac10"/>
        <function-ref name="size" scoped="" ref="0x7f06d5559550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f06d5552e10" loc="45:/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="NodeC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f06d5552e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a88ac0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f06d6a87260"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f06d554e390"/>
        <function-ref name="fired" scoped="" ref="0x7f06d5550970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f06d554f720"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f06d554f2a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f06d554ec90"/>
        <function-ref name="gett0" scoped="" ref="0x7f06d554e810"/>
        <function-ref name="isRunning" scoped="" ref="0x7f06d5550df0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f06d5551a80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f06d554fd30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f06d5550020"/>
        <function-ref name="stop" scoped="" ref="0x7f06d55504f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f06d5549420" loc="20:/opt/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f06d5549420"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a88ac0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f06d6a87260"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f06d5548090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f06d519d020" loc="49:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f06d519d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d519d3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d519d530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d519d6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d519d850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d519d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f06d519dc30" loc="50:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f06d519dc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d519c020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f06d519c1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d519c340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d519c4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f06d519c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f06d519c8b0" loc="51:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f06d519c8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f06d519cc30"/>
        <function-ref name="source" scoped="" ref="0x7f06d519cdc0"/>
        <function-ref name="address" scoped="" ref="0x7f06d519b020"/>
        <function-ref name="destination" scoped="" ref="0x7f06d519b1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f06d519b340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f06d519b4d0"/>
        <function-ref name="type" scoped="" ref="0x7f06d519b660"/>
        <function-ref name="setType" scoped="" ref="0x7f06d519b7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f06d519b980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f06d519bb10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f06d519bca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f06d519a020" loc="52:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f06d519a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f06d519a3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f06d519a530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f06d519a6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f06d47c8830" loc="44:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f06d47c8830"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d47c8bb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d47c8d40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d47c7020"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d47c71b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d47c7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f06d47c75f0" loc="46:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f06d47c75f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d47c7970"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d47c7b00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d47c7c90"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d47c7e20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d47c6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f06d47c6270" loc="47:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f06d47c6270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f06d47c65f0"/>
        <function-ref name="source" scoped="" ref="0x7f06d47c6780"/>
        <function-ref name="address" scoped="" ref="0x7f06d47c6910"/>
        <function-ref name="destination" scoped="" ref="0x7f06d47c6aa0"/>
        <function-ref name="setSource" scoped="" ref="0x7f06d47c6c30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f06d47c6dc0"/>
        <function-ref name="type" scoped="" ref="0x7f06d47c5020"/>
        <function-ref name="setType" scoped="" ref="0x7f06d47c51b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f06d47c5340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f06d47c54d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f06d47c5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f06d5536410" loc="44:/opt/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f06d5536410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d5536790"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d5536920"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d5536ab0"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d5536c40"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d5536dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f06d5533be0" loc="48:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f06d5533be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f06d684bca0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d5532020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d55321b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d5532340"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d55324d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d5532660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f06d5534dd0" loc="46:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f06d5534dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d55331c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d5533350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d55334e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d5533670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d5533800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f06d5530020" loc="50:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f06d5530020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d55303a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f06d5530530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d55306c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d5530850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f06d55309e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f06d5530cb0" loc="169:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f06d5530cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f06d552f0a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f06d552f230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f06d552f500" loc="126:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f06d552f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f06d552f880"/>
        <function-ref name="runTask" scoped="" ref="0x7f06d552fa10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f06d55328b0" loc="49:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f06d55328b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f06d5532c30"/>
        <function-ref name="source" scoped="" ref="0x7f06d5532dc0"/>
        <function-ref name="address" scoped="" ref="0x7f06d5531020"/>
        <function-ref name="destination" scoped="" ref="0x7f06d55311b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f06d5531340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f06d55314d0"/>
        <function-ref name="type" scoped="" ref="0x7f06d5531660"/>
        <function-ref name="setType" scoped="" ref="0x7f06d55317f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f06d5531980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f06d5531b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f06d5531ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f06d552caa0" loc="46:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f06d552caa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f06d552ce20"/>
        <function-ref name="stopDone" scoped="" ref="0x7f06d5529020"/>
        <function-ref name="start" scoped="" ref="0x7f06d55291b0"/>
        <function-ref name="stop" scoped="" ref="0x7f06d5529340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f06d5529b10" loc="47:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f06d5529b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f06d684bca0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d5528020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d55281b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d5528340"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d55284d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d5528660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f06d5527470" loc="49:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f06d5527470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d55277f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f06d5527980"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d5527b10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d5527ca0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f06d5527e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f06d5528e40" loc="48:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f06d5528e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f06d684bca0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f06d55271e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f06d5524300" loc="53:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f06d5524300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f06d5524680"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f06d5524810"/>
        <function-ref name="led1On" scoped="" ref="0x7f06d55249a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f06d5524b30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f06d5524cc0"/>
        <function-ref name="get" scoped="" ref="0x7f06d5524e50"/>
        <function-ref name="led1Off" scoped="" ref="0x7f06d5523020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f06d5523660"/>
        <function-ref name="set" scoped="" ref="0x7f06d55231b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f06d5523340"/>
        <function-ref name="led2On" scoped="" ref="0x7f06d55234d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f06d5525800" loc="51:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f06d5525800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f06d5525b80"/>
        <function-ref name="noAck" scoped="" ref="0x7f06d5525d10"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f06d5524020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f06d5526120" loc="50:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f06d5526120"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f06d55264a0"/>
        <function-ref name="source" scoped="" ref="0x7f06d5526630"/>
        <function-ref name="address" scoped="" ref="0x7f06d55267c0"/>
        <function-ref name="destination" scoped="" ref="0x7f06d5526950"/>
        <function-ref name="setSource" scoped="" ref="0x7f06d5526ae0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f06d5526c70"/>
        <function-ref name="type" scoped="" ref="0x7f06d5526e00"/>
        <function-ref name="setType" scoped="" ref="0x7f06d5525020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f06d55251b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f06d5525340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f06d55254d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f06d54c84a0" loc="54:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f06d54c84a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d54c8820"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d54c89b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d54c8b40"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d54c8cd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d54c8e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f06d54c7120" loc="55:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f06d54c7120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f06d54c74a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f06d5521300" loc="47:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f06d5521300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f06d684bca0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d55216a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d5521830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d55219c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d5521b50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d5521ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f06d54cbd60" loc="50:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f06d54cbd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d54ca180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f06d54ca310"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d54ca4a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d54ca630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f06d54ca7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f06d54cc0d0" loc="48:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f06d54cc0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f06d684bca0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f06d54cc470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f06d54caa10" loc="51:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f06d54caa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f06d54cad90"/>
        <function-ref name="noAck" scoped="" ref="0x7f06d54c8020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f06d54c81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f06d54cc6c0" loc="49:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f06d54cc6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f06d54cca40"/>
        <function-ref name="source" scoped="" ref="0x7f06d54ccbd0"/>
        <function-ref name="address" scoped="" ref="0x7f06d54ccd60"/>
        <function-ref name="destination" scoped="" ref="0x7f06d54cb020"/>
        <function-ref name="setSource" scoped="" ref="0x7f06d54cb1b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f06d54cb340"/>
        <function-ref name="type" scoped="" ref="0x7f06d54cb4d0"/>
        <function-ref name="setType" scoped="" ref="0x7f06d54cb660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f06d54cb7f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f06d54cb980"/>
        <function-ref name="localGroup" scoped="" ref="0x7f06d54cbb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f06d54c5ba0" loc="50:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f06d54c5ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f06d54c2020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f06d54c21b0"/>
        <function-ref name="start" scoped="" ref="0x7f06d54c2340"/>
        <function-ref name="stop" scoped="" ref="0x7f06d54c24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f06d54c1790" loc="52:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f06d54c1790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f06d68487c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d54c1b10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d54c1ca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d54c1e30"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d54c0020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d54c01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f06d54c5550" loc="49:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f06d54c5550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d54c58d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f06d54c2c60" loc="51:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f06d54c2c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f06d68487c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f06d54c1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f06d54bf2b0" loc="56:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f06d54bf2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f06d54bf630"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f06d54bf7c0"/>
        <function-ref name="led1On" scoped="" ref="0x7f06d54bf950"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f06d54bfae0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f06d54bfc70"/>
        <function-ref name="get" scoped="" ref="0x7f06d54bfe00"/>
        <function-ref name="led1Off" scoped="" ref="0x7f06d54be020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f06d54be660"/>
        <function-ref name="set" scoped="" ref="0x7f06d54be1b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f06d54be340"/>
        <function-ref name="led2On" scoped="" ref="0x7f06d54be4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7f06d54ba970" loc="55:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f06d54ba970"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f06d68487c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f06d54bacf0"/>
        <function-ref name="offset" scoped="" ref="0x7f06d54bae80"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f06d54bf030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f06d54b77c0" loc="66:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f06d54b77c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f06d54b7b40"/>
        <function-ref name="stopDone" scoped="" ref="0x7f06d54b7cd0"/>
        <function-ref name="start" scoped="" ref="0x7f06d54b7e60"/>
        <function-ref name="stop" scoped="" ref="0x7f06d54b6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7f06d54516e0" loc="332:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7f06d54516e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f06d5451a60"/>
        <function-ref name="runTask" scoped="" ref="0x7f06d5451bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f06d54a5860" loc="74:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f06d54a5860"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f06d54a5be0"/>
        <function-ref name="stop" scoped="" ref="0x7f06d54a5d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7f06d54884f0" loc="191:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7f06d54884f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f06d5488870"/>
        <function-ref name="runTask" scoped="" ref="0x7f06d5488a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f06d54b7170" loc="65:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f06d54b7170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d54b74f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7f06d54a1480" loc="75:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7f06d54a1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7f06d54a1800"/>
        <function-ref name="flush" scoped="" ref="0x7f06d54a1990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7f06d5454c70" loc="322:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7f06d5454c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f06d5453020"/>
        <function-ref name="runTask" scoped="" ref="0x7f06d54531b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7f06d54af020" loc="72:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f06d54af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f06d54af3a0"/>
        <function-ref name="resetSend" scoped="" ref="0x7f06d54af530"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f06d54af6c0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f06d54af850"/>
        <function-ref name="putData" scoped="" ref="0x7f06d54af9e0"/>
        <function-ref name="putDone" scoped="" ref="0x7f06d54afb70"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f06d54afd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f06d54a6020" loc="73:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f06d54a6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f06d54a63a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f06d54a6530"/>
        <function-ref name="led1On" scoped="" ref="0x7f06d54a66c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f06d54a6850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f06d54a69e0"/>
        <function-ref name="get" scoped="" ref="0x7f06d54a6b70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f06d54a6d00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f06d54a54d0"/>
        <function-ref name="set" scoped="" ref="0x7f06d54a5020"/>
        <function-ref name="led0On" scoped="" ref="0x7f06d54a51b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f06d54a5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7f06d544da00" loc="341:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f06d544da00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f06d544dd80"/>
        <function-ref name="runTask" scoped="" ref="0x7f06d544c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7f06d54b0720" loc="67:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f06d54b0720"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f06d54b0aa0"/>
        <function-ref name="nextByte" scoped="" ref="0x7f06d54b0c30"/>
        <function-ref name="startSend" scoped="" ref="0x7f06d54b0dc0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f06d54b5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7f06d54adc40" loc="68:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f06d54adc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f06d54b4020"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f06d54b41b0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f06d54b4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7f06d5382020" loc="275:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7f06d5382020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f06d53823a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f06d5382530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f06d5388de0" loc="51:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f06d5388de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f06d68487c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d53861c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d5386350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d53864e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d5386670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d5386800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7f06d5382800" loc="158:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7f06d5382800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f06d5382b80"/>
        <function-ref name="runTask" scoped="" ref="0x7f06d5382d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f06d53886c0" loc="50:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f06d53886c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f06d68487c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f06d5388a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7f06d5386c20" loc="54:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7f06d5386c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f06d68487c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f06d5385020"/>
        <function-ref name="offset" scoped="" ref="0x7f06d53851b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f06d5385340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f06d5384920" loc="57:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f06d5384920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f06d5384ca0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f06d5384e30"/>
        <function-ref name="led1On" scoped="" ref="0x7f06d5383020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f06d53831b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f06d5383340"/>
        <function-ref name="get" scoped="" ref="0x7f06d53834d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f06d5383660"/>
        <function-ref name="led2On" scoped="" ref="0x7f06d5383ca0"/>
        <function-ref name="set" scoped="" ref="0x7f06d5383980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f06d53837f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f06d5383b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7f06d5385e80" loc="56:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f06d5385e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f06d5384220"/>
        <function-ref name="nextByte" scoped="" ref="0x7f06d53843b0"/>
        <function-ref name="startSend" scoped="" ref="0x7f06d5384540"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f06d53846d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7f06d5385590" loc="55:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f06d5385590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f06d5385910"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f06d5385aa0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f06d5385c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7f06d5371d20" loc="50:/opt/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f06d5371d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d537a0e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f06d537a270"/>
        <function-ref name="receive" scoped="" ref="0x7f06d537a400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f06d537a590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f06d537a720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f06d537a8b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d537aa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7f06d5380e10" loc="48:/opt/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f06d5380e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f06d537c1c0"/>
        <function-ref name="resetSend" scoped="" ref="0x7f06d537c350"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f06d537c4e0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f06d537c670"/>
        <function-ref name="putData" scoped="" ref="0x7f06d537c800"/>
        <function-ref name="putDone" scoped="" ref="0x7f06d537c990"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f06d537cb20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f06d537acc0" loc="51:/opt/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f06d537acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f06d53790a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f06d5379230"/>
        <function-ref name="led1On" scoped="" ref="0x7f06d53793c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f06d5379550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f06d53796e0"/>
        <function-ref name="get" scoped="" ref="0x7f06d5379870"/>
        <function-ref name="led1Off" scoped="" ref="0x7f06d5379a00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f06d536f1b0"/>
        <function-ref name="set" scoped="" ref="0x7f06d5379b90"/>
        <function-ref name="led0On" scoped="" ref="0x7f06d5379d20"/>
        <function-ref name="led2On" scoped="" ref="0x7f06d536f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f06d534fd50" loc="6:/opt/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f06d534fd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d5352100"/>
        <function-ref name="receive" scoped="" ref="0x7f06d5352290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f06d5355890" loc="5:/opt/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f06d5355890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d5355c10"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f06d5355da0"/>
        <function-ref name="receive" scoped="" ref="0x7f06d5354020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f06d53541b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f06d5354340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f06d53544d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d5354660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f06d5355080" loc="4:/opt/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f06d5355080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f06d5355400"/>
        <function-ref name="stop" scoped="" ref="0x7f06d5355590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f06d51cd060" loc="45:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f06d51cd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f06d51cd3e0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f06d51cd570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f06d51cc8f0" loc="47:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f06d51cc8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d51ccc70"/>
        <function-ref name="receive" scoped="" ref="0x7f06d51cce00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f06d51cb0c0" loc="49:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f06d51cb0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f06d51cb440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f06d51cd800" loc="46:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f06d51cd800"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d51cdb80"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f06d51cdd10"/>
        <function-ref name="receive" scoped="" ref="0x7f06d51cc020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f06d51cc1b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f06d51cc340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f06d51cc4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d51cc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f06d51cf3c0" loc="44:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f06d51cf3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d51cf740"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f06d51cf8d0"/>
        <function-ref name="request" scoped="" ref="0x7f06d51cfa60"/>
        <function-ref name="granted" scoped="" ref="0x7f06d51cfbf0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d51cfd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f06d5343020" loc="42:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f06d5343020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f06d53433a0"/>
        <function-ref name="configure" scoped="" ref="0x7f06d5343530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f06d5340370" loc="44:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f06d5340370"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d53406f0"/>
        <function-ref name="receive" scoped="" ref="0x7f06d5340880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f06d533e450" loc="47:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f06d533e450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f06d533e7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f06d5343d70" loc="43:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f06d5343d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d5342180"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f06d5342310"/>
        <function-ref name="receive" scoped="" ref="0x7f06d53424a0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f06d5342630"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f06d53427c0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f06d5342950"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d5342ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f06d533f1d0" loc="46:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f06d533f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d533f550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f06d533f6e0"/>
        <function-ref name="request" scoped="" ref="0x7f06d533f870"/>
        <function-ref name="granted" scoped="" ref="0x7f06d533fa00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d533fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f06d5348d10" loc="41:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f06d5348d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d53440e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f06d5344270"/>
        <function-ref name="request" scoped="" ref="0x7f06d5344400"/>
        <function-ref name="granted" scoped="" ref="0x7f06d5344590"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d5344720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f06d533d1d0" loc="48:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f06d533d1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f06d533d550"/>
        <function-ref name="txDone" scoped="" ref="0x7f06d533d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f06d52d7dc0" loc="44:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f06d52d7dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f06d52d6180"/>
        <function-ref name="configure" scoped="" ref="0x7f06d52d6310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f06d52d5890" loc="46:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f06d52d5890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d52d5c30"/>
        <function-ref name="receive" scoped="" ref="0x7f06d52d5dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f06d52d3020" loc="49:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f06d52d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f06d52d33c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f06d52d3690" loc="50:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f06d52d3690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f06d52d3a10"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f06d52d3ba0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f06d52d3d30"/>
        <function-ref name="enableUart" scoped="" ref="0x7f06d52d1020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f06d52d11b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f06d52d1340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f06d52d14d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f06d52d1660"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f06d52d17f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f06d52d1980"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f06d52d1b10"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f06d52d1ca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f06d52d1e30"/>
        <function-ref name="getUbr" scoped="" ref="0x7f06d52d0120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f06d52d02b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f06d52d0440"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f06d52d05d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f06d52d0760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f06d52d08f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f06d52d0a80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f06d52d0c10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f06d52d0da0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f06d52cf020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f06d52cf1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f06d52cf340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f06d52cf6d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f06d52cf860"/>
        <function-ref name="setUbr" scoped="" ref="0x7f06d52cf9f0"/>
        <function-ref name="tx" scoped="" ref="0x7f06d52cfb80"/>
        <function-ref name="getUctl" scoped="" ref="0x7f06d52cfd10"/>
        <function-ref name="disableUart" scoped="" ref="0x7f06d52ce020"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f06d52ce1b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f06d52ce340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f06d52ce4d0"/>
        <function-ref name="rx" scoped="" ref="0x7f06d52ce660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f06d52ce7f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f06d52ce980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f06d52ceb10"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f06d52ceca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f06d52cee30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f06d52d66d0" loc="45:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f06d52d66d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d52d6a70"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f06d52d6c00"/>
        <function-ref name="receive" scoped="" ref="0x7f06d52d6d90"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f06d52d5020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f06d52d51b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f06d52d5340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d52d54d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f06d52cdc90" loc="52:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f06d52cdc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a876a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f06d6a87a10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f06d52ccac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d52cb4e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d52cb020"/>
        <function-ref name="overflow" scoped="" ref="0x7f06d52cb9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f06d52d4230" loc="48:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f06d52d4230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d52d45d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f06d52d4760"/>
        <function-ref name="request" scoped="" ref="0x7f06d52d48f0"/>
        <function-ref name="granted" scoped="" ref="0x7f06d52d4a80"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d52d4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f06d52d7020" loc="43:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f06d52d7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d52d73c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f06d52d7550"/>
        <function-ref name="request" scoped="" ref="0x7f06d52d76e0"/>
        <function-ref name="granted" scoped="" ref="0x7f06d52d7870"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d52d7a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f06d52cd290" loc="51:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f06d52cd290"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f06d52cd630"/>
        <function-ref name="txDone" scoped="" ref="0x7f06d52cd7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f06d52cbdd0" loc="53:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f06d52cbdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f06d52ca180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f06d52ca310"/>
        <function-ref name="led1On" scoped="" ref="0x7f06d52ca4a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f06d52ca630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f06d52ca7c0"/>
        <function-ref name="get" scoped="" ref="0x7f06d52ca950"/>
        <function-ref name="led1Off" scoped="" ref="0x7f06d52caae0"/>
        <function-ref name="led2On" scoped="" ref="0x7f06d52c91b0"/>
        <function-ref name="set" scoped="" ref="0x7f06d52cae00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f06d52cac70"/>
        <function-ref name="led0On" scoped="" ref="0x7f06d52c9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f06d52ba3b0" loc="78:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f06d52ba3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f06d52ba730"/>
        <function-ref name="txDone" scoped="" ref="0x7f06d52ba8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f06d52c1080" loc="76:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f06d52c1080"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f06d52c1400"/>
        <function-ref name="stop" scoped="" ref="0x7f06d52c1590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f06d52c18b0" loc="77:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f06d52c18b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f06d52c1c30"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f06d52c1dc0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f06d52c0020"/>
        <function-ref name="enableUart" scoped="" ref="0x7f06d52c01b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f06d52c0340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f06d52c04d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f06d52c0660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f06d52c07f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f06d52c0980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f06d52c0b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f06d52c0ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f06d52c0e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f06d52bd020"/>
        <function-ref name="getUbr" scoped="" ref="0x7f06d52bd2b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f06d52bd440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f06d52bd5d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f06d52bd760"/>
        <function-ref name="isUart" scoped="" ref="0x7f06d52bd8f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f06d52bda80"/>
        <function-ref name="isSpi" scoped="" ref="0x7f06d52bdc10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f06d52bdda0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f06d52bc020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f06d52bc1b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f06d52bc340"/>
        <function-ref name="getMode" scoped="" ref="0x7f06d52bc4d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f06d52bc860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f06d52bc9f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f06d52bcb80"/>
        <function-ref name="tx" scoped="" ref="0x7f06d52bcd10"/>
        <function-ref name="getUctl" scoped="" ref="0x7f06d52bb020"/>
        <function-ref name="disableUart" scoped="" ref="0x7f06d52bb1b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f06d52bb340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f06d52bb4d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f06d52bb660"/>
        <function-ref name="rx" scoped="" ref="0x7f06d52bb7f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f06d52bb980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f06d52bbb10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f06d52bbca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f06d52bbe30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f06d52ba020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f06d52ad670" loc="80:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f06d52ad670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d52ad9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d52adb80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d52add10"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d52ac020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d52ac1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d52ac340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d52ac4d0"/>
        <function-ref name="get" scoped="" ref="0x7f06d52ac660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d52ac7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d52ac980"/>
        <function-ref name="set" scoped="" ref="0x7f06d52acb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d52acca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d52ace30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d52ab120"/>
        <function-ref name="clr" scoped="" ref="0x7f06d52ab2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f06d52b2dc0" loc="76:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f06d52b2dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f06d52b1180"/>
        <function-ref name="txDone" scoped="" ref="0x7f06d52b1310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f06d52ab670" loc="81:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f06d52ab670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d52ab9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d52abb80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d52abd10"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d52aa020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d52aa1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d52aa340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d52aa4d0"/>
        <function-ref name="get" scoped="" ref="0x7f06d52aa660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d52aa7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d52aa980"/>
        <function-ref name="set" scoped="" ref="0x7f06d52aab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d52aaca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d52aae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d52a9120"/>
        <function-ref name="clr" scoped="" ref="0x7f06d52a92b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f06d52a9670" loc="82:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f06d52a9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d52a99f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d52a9b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d52a9d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d52a8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d52a81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d52a8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d52a84d0"/>
        <function-ref name="get" scoped="" ref="0x7f06d52a8660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d52a87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d52a8980"/>
        <function-ref name="set" scoped="" ref="0x7f06d52a8b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d52a8ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d52a8e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d52a7120"/>
        <function-ref name="clr" scoped="" ref="0x7f06d52a72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f06d52b6020" loc="75:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f06d52b6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f06d52b63a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f06d52b6530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f06d52b66c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f06d52b6850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f06d52b69e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f06d52b6b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f06d52b6d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f06d52b5020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f06d52b51b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f06d52b5340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f06d52b54d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f06d52b5660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f06d52b57f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f06d52b5a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f06d52b5c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f06d52b5da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f06d52b4020"/>
        <function-ref name="isUart" scoped="" ref="0x7f06d52b41b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f06d52b4340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f06d52b44d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f06d52b4660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f06d52b47f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f06d52b4980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f06d52b4b10"/>
        <function-ref name="getMode" scoped="" ref="0x7f06d52b4ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f06d52b3220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f06d52b33b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f06d52b3540"/>
        <function-ref name="tx" scoped="" ref="0x7f06d52b36d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f06d52b3860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f06d52b39f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f06d52b3b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f06d52b3d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f06d52b2020"/>
        <function-ref name="rx" scoped="" ref="0x7f06d52b21b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f06d52b2340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f06d52b24d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f06d52b2660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f06d52b27f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f06d52b2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f06d52b9710" loc="74:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f06d52b9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f06d52b9a90"/>
        <function-ref name="stop" scoped="" ref="0x7f06d52b9c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f06d52af670" loc="79:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f06d52af670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d52af9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d52afb80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d52afd10"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d52ae020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d52ae1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d52ae340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d52ae4d0"/>
        <function-ref name="get" scoped="" ref="0x7f06d52ae660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d52ae7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d52ae980"/>
        <function-ref name="set" scoped="" ref="0x7f06d52aeb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d52aeca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d52aee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d52ad120"/>
        <function-ref name="clr" scoped="" ref="0x7f06d52ad2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f06d52b16d0" loc="78:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f06d52b16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f06d52b1a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f06d52b1be0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f06d52b1d70"/>
        <function-ref name="toggle" scoped="" ref="0x7f06d52b0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f06d52b01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f06d52b0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f06d52b04d0"/>
        <function-ref name="get" scoped="" ref="0x7f06d52b0660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f06d52b07f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f06d52b0980"/>
        <function-ref name="set" scoped="" ref="0x7f06d52b0b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f06d52b0ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f06d52b0e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f06d52af120"/>
        <function-ref name="clr" scoped="" ref="0x7f06d52af2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f06d522b110" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f06d522b110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f06d6a876a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f06d6a87a10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f06d522a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f06d522a9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f06d522a4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f06d522ae60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f06d47032c0" loc="43:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f06d47032c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f06d4703640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f06d47037d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f06d46fd440" loc="48:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f06d46fd440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f06d46fd7c0"/>
        <function-ref name="configure" scoped="" ref="0x7f06d46fd950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f06d46fec10" loc="46:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f06d46fec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f06d46fd020"/>
        <function-ref name="txDone" scoped="" ref="0x7f06d46fd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f06d4704640" loc="42:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f06d4704640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d47049c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f06d4704b50"/>
        <function-ref name="request" scoped="" ref="0x7f06d4704ce0"/>
        <function-ref name="granted" scoped="" ref="0x7f06d4704e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d4703030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f06d47022b0" loc="45:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f06d47022b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f06d4702630"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f06d47027c0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f06d4702950"/>
        <function-ref name="enableUart" scoped="" ref="0x7f06d4702ae0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f06d4702c70"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f06d4702e00"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f06d4701020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f06d47011b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f06d4701340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f06d47014d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f06d4701660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f06d47017f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f06d4701980"/>
        <function-ref name="getUbr" scoped="" ref="0x7f06d4701c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f06d4701da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f06d4700020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f06d47001b0"/>
        <function-ref name="isUart" scoped="" ref="0x7f06d4700340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f06d47004d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f06d4700660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f06d47007f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f06d4700980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f06d4700b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f06d4700ca0"/>
        <function-ref name="getMode" scoped="" ref="0x7f06d4700e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f06d46ff220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f06d46ff3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f06d46ff540"/>
        <function-ref name="tx" scoped="" ref="0x7f06d46ff6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f06d46ff860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f06d46ff9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f06d46ffb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f06d46ffd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f06d46fe020"/>
        <function-ref name="rx" scoped="" ref="0x7f06d46fe1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f06d46fe340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f06d46fe4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f06d46fe660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f06d46fe7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f06d46fe980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f06d4703a60" loc="44:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f06d4703a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f06d4703de0"/>
        <function-ref name="userId" scoped="" ref="0x7f06d4702020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f06d520d2c0" loc="42:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f06d520d2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f06d520d640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f06d520d7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f06d520c8a0" loc="45:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f06d520c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f06d520cc20"/>
        <function-ref name="configure" scoped="" ref="0x7f06d520cdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f06d52101d0" loc="40:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f06d52101d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f06d5210550"/>
        <function-ref name="txDone" scoped="" ref="0x7f06d52106e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f06d520f020" loc="41:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f06d520f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d520f3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f06d520f530"/>
        <function-ref name="request" scoped="" ref="0x7f06d520f6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f06d520f850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d520f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f06d520dad0" loc="43:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f06d520dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f06d520de50"/>
        <function-ref name="userId" scoped="" ref="0x7f06d520c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f06d5209e50" loc="43:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f06d5209e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f06d5208210"/>
        <function-ref name="userId" scoped="" ref="0x7f06d52083a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f06d520a060" loc="39:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f06d520a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f06d520a400"/>
        <function-ref name="txDone" scoped="" ref="0x7f06d520a590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f06d5209840" loc="42:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f06d5209840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f06d5209bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f06d520a990" loc="40:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f06d520a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f06d520ad30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f06d5209060" loc="41:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f06d5209060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f06d52093e0"/>
        <function-ref name="txDone" scoped="" ref="0x7f06d5209570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f06d52049e0" loc="92:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f06d52049e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f06d5204d80"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f06d5203020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f06d5202770" loc="96:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f06d5202770"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f06d5202b10"/>
        <function-ref name="configure" scoped="" ref="0x7f06d5202ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f06d5203270" loc="93:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f06d5203270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d52035f0"/>
        <function-ref name="requested" scoped="" ref="0x7f06d5203780"/>
        <function-ref name="granted" scoped="" ref="0x7f06d5203910"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d5203aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f06d5203c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f06d5206b60" loc="91:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f06d5206b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d5204020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f06d52041b0"/>
        <function-ref name="request" scoped="" ref="0x7f06d5204340"/>
        <function-ref name="granted" scoped="" ref="0x7f06d52044d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d5204660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f06d5203e80" loc="94:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f06d5203e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f06d5202220"/>
        <function-ref name="userId" scoped="" ref="0x7f06d52023b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f06d469d3b0" loc="44:/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f06d469d3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d469d730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f06d469d9c0" loc="45:/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f06d469d9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f06d469dd40"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f06d469b020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f06d469b1b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f06d469b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f06d4699a60" loc="55:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f06d4699a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f06d4699e00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f06d4698020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f06d4697790" loc="60:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f06d4697790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f06d4697b30"/>
        <function-ref name="configure" scoped="" ref="0x7f06d4697cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f06d4696020" loc="61:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f06d4696020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f06d46963a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f06d4696530"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f06d46966c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f06d4696850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f06d4698270" loc="56:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f06d4698270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d46985f0"/>
        <function-ref name="requested" scoped="" ref="0x7f06d4698780"/>
        <function-ref name="granted" scoped="" ref="0x7f06d4698910"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d4698aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f06d4698c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f06d4696aa0" loc="62:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f06d4696aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f06d4696e20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f06d4694020"/>
        <function-ref name="led1On" scoped="" ref="0x7f06d46941b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f06d4694340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f06d46944d0"/>
        <function-ref name="get" scoped="" ref="0x7f06d4694660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f06d46947f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f06d4694e30"/>
        <function-ref name="set" scoped="" ref="0x7f06d4694b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f06d4694980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f06d4694ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f06d469ac80" loc="54:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f06d469ac80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d46990a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f06d4699230"/>
        <function-ref name="request" scoped="" ref="0x7f06d46993c0"/>
        <function-ref name="granted" scoped="" ref="0x7f06d4699550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d46996e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f06d4698e80" loc="57:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f06d4698e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f06d4697220"/>
        <function-ref name="userId" scoped="" ref="0x7f06d46973b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f06d4693160" loc="75:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f06d4693160"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f06d46934e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f06d4693670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f06d51e8020" loc="72:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f06d51e8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f06d51e83a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f06d51e85f0" loc="73:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f06d51e85f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d51e8970"/>
        <function-ref name="requested" scoped="" ref="0x7f06d51e8b00"/>
        <function-ref name="granted" scoped="" ref="0x7f06d51e8c90"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d51e8e20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f06d51e6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f06d51fd880" loc="70:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f06d51fd880"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f06d51fdc00"/>
        <function-ref name="stop" scoped="" ref="0x7f06d51fdd90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f06d51e6270" loc="74:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f06d51e6270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f06d51e65f0"/>
        <function-ref name="userId" scoped="" ref="0x7f06d51e6780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f06d46630e0" loc="62:/opt/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f06d46630e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f06d4663460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f06d46636b0" loc="63:/opt/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f06d46636b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d4663a30"/>
        <function-ref name="requested" scoped="" ref="0x7f06d4663bc0"/>
        <function-ref name="granted" scoped="" ref="0x7f06d4663d50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d4662020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f06d46621b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f06d4664900" loc="60:/opt/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f06d4664900"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f06d4664c80"/>
        <function-ref name="stop" scoped="" ref="0x7f06d4664e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f06d4662400" loc="64:/opt/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f06d4662400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f06d4662780"/>
        <function-ref name="userId" scoped="" ref="0x7f06d4662910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7f06d51c78e0" loc="3:/opt/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f06d51c78e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f06d51c7c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f06d51c6020" loc="4:/opt/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f06d51c6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f06d51c63a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f06d51c6530"/>
        <function-ref name="request" scoped="" ref="0x7f06d51c66c0"/>
        <function-ref name="granted" scoped="" ref="0x7f06d51c6850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f06d51c69e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f06d51c7080" loc="2:/opt/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f06d51c7080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f06d51c7400"/>
        <function-ref name="stop" scoped="" ref="0x7f06d51c7590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7f06d51b56c0" loc="47:/opt/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7f06d51b56c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f06d51b5a40"/>
        <function-ref name="offset" scoped="" ref="0x7f06d51b5bd0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f06d51b5d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f06d5198e10" loc="43:/opt/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f06d5198e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f06d5195da0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f06d5194b40"/>
        <function-ref name="element" scoped="" ref="0x7f06d5193220"/>
        <function-ref name="full" scoped="" ref="0x7f06d5195020"/>
        <function-ref name="maxSize" scoped="" ref="0x7f06d5195920"/>
        <function-ref name="dequeue" scoped="" ref="0x7f06d5194490"/>
        <function-ref name="empty" scoped="" ref="0x7f06d5196a80"/>
        <function-ref name="size" scoped="" ref="0x7f06d51954a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f06d518bbf0" loc="93:/opt/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f06d518bbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f06d518cae0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f06d5189880"/>
        <function-ref name="element" scoped="" ref="0x7f06d5188020"/>
        <function-ref name="full" scoped="" ref="0x7f06d518dce0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f06d518c660"/>
        <function-ref name="dequeue" scoped="" ref="0x7f06d51891d0"/>
        <function-ref name="empty" scoped="" ref="0x7f06d518d860"/>
        <function-ref name="size" scoped="" ref="0x7f06d518c1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f06d51886d0" loc="94:/opt/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f06d51886d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f06d5188a50"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d5188be0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d5188d70"/>
        <function-ref name="cancel" scoped="" ref="0x7f06d5187020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f06d51871b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f06d5187440" loc="95:/opt/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f06d5187440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f06d51877c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f06d5187950"/>
        <function-ref name="getPayload" scoped="" ref="0x7f06d5187ae0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f06d5187c70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f06d5187e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x7f06d51816e0" loc="114:/opt/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="retrySend" scoped="" ref="0x7f06d51816e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f06d5181a60"/>
        <function-ref name="runTask" scoped="" ref="0x7f06d5181bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f06d5191c10" loc="89:/opt/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f06d5191c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d518e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f06d51860c0" loc="96:/opt/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f06d51860c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f06d5186440"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f06d51865d0"/>
        <function-ref name="led1On" scoped="" ref="0x7f06d5186760"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f06d51868f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f06d5186a80"/>
        <function-ref name="get" scoped="" ref="0x7f06d5186c10"/>
        <function-ref name="led1Off" scoped="" ref="0x7f06d5186da0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f06d51854d0"/>
        <function-ref name="set" scoped="" ref="0x7f06d5185020"/>
        <function-ref name="led0On" scoped="" ref="0x7f06d51851b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f06d5185340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x7f06d518b370" loc="90:/opt/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f06d518b370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f06d518b6f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f06d5168020" loc="43:/opt/tinyos-main/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f06d5168020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f06d51683a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f06d5164360" loc="94:/opt/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f06d5164360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f06d51646e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f06d51649c0" loc="95:/opt/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f06d51649c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f06d5164d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f06d515d810" loc="39:/opt/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f06d515d810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f06d515db90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f06d515a020" loc="40:/opt/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f06d515a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f06d515a3a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f06d515a530"/>
        <function-ref name="start" scoped="" ref="0x7f06d515a6c0"/>
        <function-ref name="stop" scoped="" ref="0x7f06d515a850"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/opt/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f06d6a6f5e0" loc="62:/opt/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f06d6a701f0" loc="60:/opt/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f06d6a425b0" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f06d6a45870" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f06d6a43e60" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f06d6a45190" loc="42:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f06d6a43020" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f06d6a46350" loc="40:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f06d6a46a30" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f06d6a43740" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/opt/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f06d6e0cb70" loc="62:/opt/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f06d6e59c00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f06d69f02a0" loc="55:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f06d69f0020" loc="55:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f06d69f45d0" loc="42:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f06d6a3a180"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f06d6a3abd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f06d69f0b10" loc="57:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f06d69efa00" loc="59:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f06d69f1790" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f06d69ef270" loc="58:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f06d69f4d70" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f06d69f3540" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f06d69f1020" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f06d6a3a180"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f06d6a3abd0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f06d69f3d10" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f06d6a3a180"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f06d6a3abd0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f06d69e2270" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f06d69df7f0" loc="79:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f06d69df570" loc="79:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f06d69de3c0" loc="86:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f06d69de140" loc="86:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f06d69e0d80" loc="68:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f06d69e0580" loc="63:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f06d69e2c20" loc="56:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f06d69e29a0" loc="56:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f06d69ea560" loc="40:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f06d69e8020" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f06d69eac60" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f06d69e8a00" loc="42:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f06d69e8780" loc="42:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f06d69e7410" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f06d69e7190" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f06d69e7b00" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f06d69faad0" loc="52:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f06d69f7400" loc="55:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f06d69f7180" loc="55:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f06d69f9270" loc="53:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f06d6a40d50" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f06d69f99b0" loc="54:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f06d69fdc50" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f06d69fa3e0" loc="51:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f06d69fd510" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f06d69fb390" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f06d69fbca0" loc="50:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f06d69fba20" loc="50:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f06d69f7e10" loc="56:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f06d69f7b90" loc="56:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f06d69b81f0" loc="39:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f06d6ab72b0" loc="76:/opt/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f06d6cd0420" loc="52:/opt/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f06d6f12020" loc="57:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f06d6f11020" loc="72:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f06d6f12790" loc="65:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f06d6f06020" loc="67:/opt/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f06d6f06870" loc="75:/opt/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f06d6832020" loc="113:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f06d6833d30" loc="113:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f06d6831520" loc="138:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f06d68312a0" loc="138:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f06d6833350" loc="104:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f06d6832870" loc="130:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f06d68133d0" loc="53:/opt/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f06d68133d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f06d6813cf0" loc="61:/opt/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f06d682e980" loc="78:/opt/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
              <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f06d682e020" loc="78:/opt/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f06d682e370" loc="78:/opt/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f06d682e6a0" loc="78:/opt/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SimpleSend" loc="3:lib/interfaces/SimpleSend.nc">
      <function command="" provided="0" name="send" ref="0x7f06d682a640" loc="4:lib/interfaces/SimpleSend.nc">
        <interfacedef-ref qname="SimpleSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
            <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x7f06d6a7ae80"/>
              <typename><typedef-ref name="pack" ref="0x7f06d6a78390"/></typename>
            </type-tag>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f06d682a060" loc="4:lib/interfaces/SimpleSend.nc">
            <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x7f06d6a7ae80"/>
              <typename><typedef-ref name="pack" ref="0x7f06d6a78390"/></typename>
            </type-tag>
          </variable>
          <variable name="dest" ref="0x7f06d682a3b0" loc="4:lib/interfaces/SimpleSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CommandHandler" loc="1:lib/interfaces/CommandHandler.nc">
      <function event="" provided="0" name="printLinkState" ref="0x7f06d6827590" loc="6:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="printNeighbors" ref="0x7f06d6828720" loc="4:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="printDistanceVector" ref="0x7f06d6827cc0" loc="7:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setTestClient" ref="0x7f06d6825b20" loc="9:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setTestServer" ref="0x7f06d6825420" loc="8:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setAppServer" ref="0x7f06d6824270" loc="10:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="printRouteTable" ref="0x7f06d6828e30" loc="5:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="ping" ref="0x7f06d6828020" loc="3:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="destination" ref="0x7f06d682f910" loc="3:lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </variable>
          <variable name="payload" ref="0x7f06d682fcb0" loc="3:lib/interfaces/CommandHandler.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="setAppClient" ref="0x7f06d6824960" loc="11:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f06d6829740" loc="53:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f06d6829740"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f06d681b420" loc="136:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f06d681fd60" loc="83:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f06d681db10" loc="114:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f06d681d540" loc="114:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f06d681d880" loc="114:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f06d681ed60" loc="98:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f06d6819460" loc="151:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f06d681bbb0" loc="144:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f06d681e570" loc="92:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f06d68212e0" loc="64:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f06d6821060" loc="64:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f06d681caa0" loc="129:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f06d681c4d0" loc="129:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f06d681c810" loc="129:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f06d6821da0" loc="73:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f06d6821b20" loc="73:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f06d681f650" loc="78:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f06d67dd2a0" loc="65:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f06d67dd020" loc="65:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f06d67dc350" loc="78:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f06d67dc0d0" loc="78:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f06d67d9660" loc="126:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f06d67d9060" loc="126:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f06d67d9390" loc="126:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f06d67d8750" loc="106:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f06d67db7d0" loc="94:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f06d67db210" loc="94:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f06d67db540" loc="94:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f06d67c8040" loc="177:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f06d68490d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f06d67c9d90" loc="177:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f06d67d2bc0" loc="88:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f06d68494b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f06d67d2940" loc="88:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f06d67d4020" loc="68:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f06d68494b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f06d67d4ae0" loc="78:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f06d68494b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f06d67d4860" loc="78:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f06d67cf600" loc="121:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f06d68494b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f06d67cf020" loc="121:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f06d67cf370" loc="121:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f06d68494b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f06d67d3020" loc="103:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f06d68494b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f06d67d19e0" loc="103:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f06d67d1d30" loc="103:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f06d68494b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f06d67cbae0" loc="147:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f06d684bca0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f06d67cb860" loc="147:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f06d67cae60" loc="162:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f06d684bca0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f06d67ca8b0" loc="162:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f06d67cabd0" loc="162:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f06d684bca0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f06d67cd890" loc="136:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f06d67cd610" loc="136:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f06d67c7600" loc="187:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f06d68490d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f06d67c7020" loc="187:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f06d67c7370" loc="187:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f06d68490d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f06d67c6490" loc="195:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f06d68490d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f06d67be780" loc="80:/opt/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f06d68494b0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f06d67c2de0" loc="80:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f06d68494b0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f06d67be1b0" loc="80:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f06d67be4e0" loc="80:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f06d67b7020" loc="135:/opt/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f06d67b9890" loc="135:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f06d67b9bc0" loc="135:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f06d67b9020" loc="123:/opt/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f06d67bcb50" loc="96:/opt/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f06d67bc8d0" loc="96:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f06d67bd0c0" loc="110:/opt/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f06d67bba80" loc="110:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f06d67bbdd0" loc="110:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f06d67b1930" loc="35:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f06d67b1930"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f06d67b1b70" loc="35:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f06d67b1b70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f06d67a8970" loc="63:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f06d67b1b70"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f06d67a86f0" loc="63:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f06d67a7b40" loc="70:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f06d67a78c0" loc="70:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f06d67aa750" loc="49:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f06d67aa4d0" loc="49:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f06d67a9020" loc="78:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f06d67b1b70"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f06d67a58a0" loc="78:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f06d67a5c00" loc="78:/opt/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f06d67b1b70"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f06d6799030" loc="65:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f06d679a9e0" loc="65:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f06d679ad70" loc="65:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f06d67982a0" loc="71:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f06d6798020" loc="71:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f06d679a1f0" loc="57:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f06d679c7f0" loc="52:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f06d679c570" loc="52:/opt/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f06d67b2c00" loc="59:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f06d67b2980" loc="59:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f06d67aedf0" loc="71:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f06d67aeb70" loc="71:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f06d67ac020" loc="85:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f06d67afce0" loc="85:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/opt/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f06d6772720" loc="95:/opt/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/opt/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f06d67724a0" loc="95:/opt/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f06d67749d0" loc="81:/opt/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/opt/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f06d6774750" loc="81:/opt/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f06d6775110" loc="66:/opt/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/opt/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f06d6777e20" loc="66:/opt/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f06d6777580" loc="60:/opt/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/opt/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f06d6777300" loc="60:/opt/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f06d6775b40" loc="73:/opt/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/opt/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f06d67758c0" loc="73:/opt/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f06d67738a0" loc="88:/opt/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/opt/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f06d6773620" loc="88:/opt/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-main/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-main/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f06d67652b0" loc="59:/opt/tinyos-main/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-main/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f06d68494b0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f06d6770c50" loc="59:/opt/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f06d68494b0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f06d6765020" loc="59:/opt/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f06d67800c0" loc="56:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f06d6782aa0" loc="56:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f06d6782df0" loc="56:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f06d677c6d0" loc="77:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f06d677c0d0" loc="77:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f06d677c440" loc="77:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f06d6780ba0" loc="64:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f06d7872110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f06d6780920" loc="64:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f06d677e600" loc="75:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f06d677e380" loc="75:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f06d67822a0" loc="47:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f06d6782020" loc="47:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f06d677f720" loc="72:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f06d677f4a0" loc="72:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f06d6769b30" loc="65:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f06d67698b0" loc="65:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f06d676ead0" loc="46:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f06d676e4b0" loc="46:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f06d676e840" loc="46:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f06d676dad0" loc="59:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f06d676d850" loc="59:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f06d676d020" loc="53:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f06d676c8d0" loc="53:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f06d676cc60" loc="53:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f06d6768b70" loc="71:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f06d67688f0" loc="71:/opt/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f06d67790b0" loc="47:/opt/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f06d6783de0" loc="47:/opt/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f06d67582b0" loc="75:/opt/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f06d675bc60" loc="75:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f06d6758020" loc="75:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f06d6754890" loc="125:/opt/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f06d6754290" loc="125:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f06d67545c0" loc="125:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f06d67539b0" loc="112:/opt/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f06d67575f0" loc="89:/opt/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f06d6757370" loc="89:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f06d6756ac0" loc="100:/opt/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f06d67564e0" loc="100:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f06d6756830" loc="100:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f06d675c120" loc="120:/opt/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f06d675d120" loc="97:/opt/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f06d675e770" loc="88:/opt/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f06d675d910" loc="102:/opt/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f06d675cb80" loc="128:/opt/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f06d67323a0" loc="51:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f06d6736dc0" loc="51:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f06d6732110" loc="51:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f06d67306a0" loc="65:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f06d672ee70" loc="84:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f06d672e060" loc="84:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f06d672e8a0" loc="84:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f06d672ebd0" loc="84:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f06d672f840" loc="73:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f06d672f260" loc="73:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f06d672f5b0" loc="73:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f06d6732e30" loc="58:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f06d6732bb0" loc="58:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos-main/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f06d67290e0" loc="52:/opt/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f06d672c870" loc="46:/opt/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f06d673ca40" loc="95:/opt/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f06d6734270" loc="105:/opt/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f06d6719150" loc="49:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f06d671be20" loc="49:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f06d671b620" loc="42:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7f06d6886720"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f06d6883090"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f06d671b320" loc="42:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f06d6718490" loc="53:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7f06d6883b90"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f06d68814f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f06d6718190" loc="53:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f06d673a6e0" loc="71:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f06d6738840" loc="97:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f06d6738070" loc="90:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f06d673ee20" loc="51:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f06d673be80" loc="63:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f06d6739020" loc="76:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f06d6739840" loc="83:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f06d673b6c0" loc="56:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f06d6725a00" loc="61:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f06d67241f0" loc="67:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f06d67249d0" loc="72:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f06d6723940" loc="83:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f06d6720120" loc="100:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f06d6720930" loc="117:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f06d6723190" loc="77:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f06d671f4c0" loc="134:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f06d671f240" loc="134:/opt/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f06d6725270" loc="56:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f06d6721190" loc="89:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f06d6721920" loc="94:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/opt/tinyos-main/tos/interfaces/State.nc">
      <documentation loc="33:/opt/tinyos-main/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f06d6713a70" loc="71:/opt/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="68:/opt/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f06d6714070" loc="56:/opt/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="53:/opt/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f06d67132a0" loc="66:/opt/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="63:/opt/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f06d6713020" loc="66:/opt/tinyos-main/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f06d67147e0" loc="61:/opt/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="58:/opt/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f06d671dd80" loc="45:/opt/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="40:/opt/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f06d671db00" loc="45:/opt/tinyos-main/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f06d6715860" loc="51:/opt/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="47:/opt/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f06d67155e0" loc="51:/opt/tinyos-main/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f06d66b8640" loc="106:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f06d66b8060" loc="106:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f06d66b83b0" loc="106:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f06d66b9020" loc="93:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f06d66ba690" loc="87:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f06d66ba020" loc="87:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f06d66ba400" loc="87:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f06d66c0a40" loc="55:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f06d66c07c0" loc="55:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f06d66b98a0" loc="98:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f06d66bc540" loc="72:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f06d66bc2c0" loc="72:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f06d66bfb90" loc="61:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f06d66bf910" loc="61:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f06d66b68a0" loc="117:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f06d66bb6b0" loc="78:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f06d66bb430" loc="78:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f06d66b6070" loc="112:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f06d66be350" loc="66:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f06d6795670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f06d6795dd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f06d66beb40" loc="71:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f06d66c0020" loc="54:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f06d66bf1f0" loc="60:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f06d66bcce0" loc="77:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-main/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-main/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f06d66b22b0" loc="49:/opt/tinyos-main/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f06d66b22b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f06d66b2b70" loc="55:/opt/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f06d66b18f0" loc="63:/opt/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f06d66b22b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f06d66b1340" loc="63:/opt/tinyos-main/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f06d66b1660" loc="63:/opt/tinyos-main/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f06d66b22b0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f06d6682700" loc="55:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f06d68898d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f06d6682480" loc="55:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f06d66812a0" loc="63:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f06d68898d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f06d6681020" loc="63:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/opt/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/opt/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f06d66a7c60" loc="48:/opt/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/opt/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f06d6795670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f06d6795dd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f06d66a2020" loc="56:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f06d66a2020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f06d66a2260" loc="56:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f06d66a2260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f06d669fe00" loc="109:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f06d66a2260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f06d66a1e40" loc="78:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f06d669f460" loc="103:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f06d66a2260"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f06d66a2260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f06d66a0e60" loc="103:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f06d66a2260"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f06d669f1d0" loc="103:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f06d66a2260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f06d66a0640" loc="88:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f06d669d620" loc="116:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f06d66a2260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f06d66a2dc0" loc="66:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f06d66a2260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f06d66a2b40" loc="66:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f06d66a2260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f06d66a1680" loc="73:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f06d66965a0" loc="44:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f06d6696cd0" loc="45:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f06d6697760" loc="42:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f06d6695b60" loc="47:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f06d6697e60" loc="43:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f06d6695420" loc="46:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f06d669a970" loc="40:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f06d6697070" loc="41:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f06d668a1f0" loc="50:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f06d68494b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f06d6689190" loc="60:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f06d668a9d0" loc="55:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f06d68490d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f06d668c980" loc="45:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f06d68490d0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f06d68494b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f06d668c3a0" loc="45:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f06d68490d0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f06d668c6f0" loc="45:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f06d68494b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f06d667a8a0" loc="53:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f06d68898d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f06d66879a0" loc="52:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f06d68898d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f06d6690af0" loc="52:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f06d66873b0" loc="52:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f06d6687700" loc="52:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f06d6684130" loc="63:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f06d68898d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f06d66862a0" loc="63:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f06d6686b10" loc="63:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f06d6686e60" loc="63:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/opt/tinyos-main/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/opt/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f06d668e950" loc="68:/opt/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/opt/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f06d668e190" loc="61:/opt/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/opt/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f06d668f9e0" loc="54:/opt/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f06d668f120" loc="53:/opt/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f06d65784f0" loc="57:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f06d65784f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f06d6578730" loc="57:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f06d6578730"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f06d6577070" loc="64:/opt/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f06d6578730"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f06d6576190" loc="76:/opt/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f06d65778f0" loc="71:/opt/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f06d65768f0" loc="82:/opt/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f06d64df020" loc="78:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f06d64df770" loc="80:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f06d64da2e0" loc="110:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f06d64da060" loc="110:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f06d64e2770" loc="58:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f06d64de780" loc="87:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f06d64dabd0" loc="117:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f06d64de020" loc="85:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f06d64e0820" loc="73:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f06d64db020" loc="99:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f06d64e0020" loc="66:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f06d64e5880" loc="48:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f06d64dd020" loc="92:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f06d64db7c0" loc="101:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f06d64dd7e0" loc="94:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f06d64e2020" loc="53:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/opt/tinyos-main/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f06d628cbb0" loc="54:/opt/tinyos-main/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f06d628bd70" loc="66:/opt/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/opt/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f06d628b5c0" loc="61:/opt/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/opt/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f06d628b340" loc="61:/opt/tinyos-main/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f06d628c350" loc="53:/opt/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/opt/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f06d6265560" loc="52:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f06d6263020" loc="72:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f06d6266d90" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f06d62647d0" loc="67:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f06d6264550" loc="67:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f06d62665f0" loc="42:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f06d6265d60" loc="59:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/opt/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f06d6150270" loc="24:/opt/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/opt/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f06d6150ac0" loc="31:/opt/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/opt/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f06d614f350" loc="39:/opt/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/opt/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f06d6129b60" loc="62:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f06d6129580" loc="62:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f06d61298d0" loc="62:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f06d6124dd0" loc="91:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f06d6124490" loc="91:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f06d61247e0" loc="91:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f06d6124b30" loc="91:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f06d61256b0" loc="82:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f06d68898d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f06d61250d0" loc="82:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f06d6125420" loc="82:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f06d612a730" loc="51:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f06d68898d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f06d612a150" loc="51:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f06d612a4a0" loc="51:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f06d61262c0" loc="71:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f06d6127930" loc="71:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f06d6127c80" loc="71:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f06d6126020" loc="71:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/opt/tinyos-main/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/opt/tinyos-main/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f06d610acf0" loc="70:/opt/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/opt/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f06d610a380" loc="70:/opt/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f06d610a710" loc="70:/opt/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f06d610aa50" loc="70:/opt/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f06d61073c0" loc="82:/opt/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/opt/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f06d61066a0" loc="82:/opt/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f06d6106a30" loc="82:/opt/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f06d6106d70" loc="82:/opt/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f06d6107110" loc="83:/opt/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/opt/tinyos-main/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/opt/tinyos-main/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f06d610ec90" loc="45:/opt/tinyos-main/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/opt/tinyos-main/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f06d610ea10" loc="45:/opt/tinyos-main/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f06d60216f0" loc="53:/opt/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f06d6020070" loc="61:/opt/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:/opt/tinyos-main/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:/opt/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f06d6019710" loc="39:/opt/tinyos-main/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f06d605d020"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f06d605d440"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/opt/tinyos-main/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/opt/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f06d601e2a0" loc="62:/opt/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/opt/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f06d601e020" loc="62:/opt/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f06d601d680" loc="74:/opt/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/opt/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f06d601d400" loc="74:/opt/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f06d601eb10" loc="68:/opt/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/opt/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f06d601b2a0" loc="81:/opt/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/opt/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f06d601b020" loc="81:/opt/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f06d6012ca0" loc="65:/opt/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f06d6012480" loc="59:/opt/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:/opt/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f06d60092a0" loc="54:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f06d6009020" loc="54:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f06d600a780" loc="49:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:/opt/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f06d5fe6af0" loc="213:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f06d5ff1790" loc="143:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f06d5ffe610" loc="50:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f06d6079080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f06d60798c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f06d5ffe390" loc="50:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f06d6079080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f06d60798c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f06d5ff4800" loc="123:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f06d5ffba90" loc="70:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f06d6074080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f06d60748c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f06d5ffb810" loc="70:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f06d6074080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f06d60748c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f06d5febe70" loc="180:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f06d5fe7480" loc="197:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f06d5ffb070" loc="65:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f06d6077020"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f06d60777b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f06d5ffa2b0" loc="75:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f06d6074080"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f06d60748c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f06d5ff6020" loc="97:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f06d5ff7d30" loc="97:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f06d5ff7610" loc="95:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f06d5feb740" loc="179:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f06d5ffc840" loc="60:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f06d6077020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f06d60777b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f06d5ffc5c0" loc="60:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f06d6077020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f06d60777b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f06d5ff9420" loc="85:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f06d5fe95d0" loc="181:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f06d5ff9e00" loc="90:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f06d5ff9b80" loc="90:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f06d5ff58c0" loc="113:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f06d5ff4070" loc="118:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f06d5fec840" loc="177:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f06d5fef790" loc="163:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f06d5ff27a0" loc="133:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f06d5feb020" loc="178:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f06d5ff0020" loc="148:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f06d5fe9cf0" loc="182:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f06d5ff6800" loc="103:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f06d607fdf0"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f06d607b680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f06d5fe84c0" loc="187:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f06d5fe6350" loc="207:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f06d5ffac50" loc="80:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f06d5ffa9d0" loc="80:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f06d5fe44d0" loc="224:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f06d5fe4250" loc="224:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f06d5ffedf0" loc="55:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f06d6079080"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f06d60798c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f06d5ff2020" loc="128:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f06d5ff0770" loc="153:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f06d5fec020" loc="174:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f06d604ae70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f06d60492b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f06d5fedcf0" loc="174:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f06d604ae70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f06d60492b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f06d5fed2a0" loc="168:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f06d605d020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f06d605d440"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f06d5fed020" loc="168:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f06d605d020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f06d605d440"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f06d5fe4d90" loc="231:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f06d5fe8cb0" loc="192:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f06d5ff5020" loc="108:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f06d5fe7be0" loc="202:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f06d5fef020" loc="158:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f06d5ff1020" loc="138:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f06d5f7d6e0" loc="39:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:/opt/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x7f06d5f56070" loc="80:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7f06d5f69b10" loc="31:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7f06d5f5dd50" loc="62:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f06d5f5dad0" loc="62:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7f06d5f71270" loc="11:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7f06d5f5a350" loc="71:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7f06d5f63cf0" loc="49:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7f06d5f6ac50" loc="28:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7f06d5f689c0" loc="34:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f06d5f6bc00" loc="25:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f06d5f6b980" loc="25:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7f06d5f6d120" loc="21:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7f06d5f65790" loc="41:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7f06d5f5cc80" loc="66:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7f06d5f578f0" loc="78:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7f06d5f5d390" loc="61:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7f06d5f52b60" loc="91:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7f06d5f4d270" loc="100:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7f06d5f6f0e0" loc="14:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7f06d5f65020" loc="38:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7f06d5f64910" loc="45:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7f06d5f6a500" loc="27:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7f06d5f72020" loc="7:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7f06d5f5fba0" loc="58:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f06d5f5f920" loc="58:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7f06d5f757e0" loc="6:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7f06d5f5bb80" loc="69:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7f06d5f567d0" loc="81:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7f06d5f50350" loc="94:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7f06d5f4ea90" loc="97:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7f06d5f58270" loc="74:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7f06d5f54020" loc="83:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7f06d5f5c520" loc="65:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7f06d5f53bb0" loc="87:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7f06d5f6f800" loc="15:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7f06d5f60020" loc="53:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7f06d5f53020" loc="86:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7f06d5f57190" loc="77:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7f06d5f63520" loc="46:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7f06d5f632a0" loc="46:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7f06d5f50af0" loc="95:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7f06d5f5f1f0" loc="57:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7f06d5f5aac0" loc="72:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7f06d5f72aa0" loc="8:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f06d6037b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f06d6036020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f06d5f72820" loc="8:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f06d6037b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f06d6036020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7f06d5f66870" loc="37:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7f06d5f6e980" loc="19:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f06d5f6e700" loc="19:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7f06d5f64120" loc="42:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f06d5f65e70" loc="42:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7f06d5f523b0" loc="90:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7f06d5f6b270" loc="24:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7f06d5f6e020" loc="18:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7f06d5f609e0" loc="54:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7f06d5f60760" loc="54:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7f06d5f719a0" loc="12:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7f06d5f54740" loc="84:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7f06d5f589e0" loc="75:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7f06d5f5b420" loc="68:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7f06d5f61740" loc="50:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7f06d5f614c0" loc="50:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7f06d5f66120" loc="35:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7f06d5f693b0" loc="29:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7f06d5f4e2b0" loc="96:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7f06d5f6daa0" loc="22:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f06d5f6d820" loc="22:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7f06d5f51350" loc="92:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7f06d5f68270" loc="32:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7f06d5f51b10" loc="93:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f06d5e6e780" loc="90:/opt/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f06d5e6c020" loc="98:/opt/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f06d5e37900" loc="56:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f06d5e36a20" loc="73:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f06d5e37070" loc="46:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f06d5e361f0" loc="65:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f06d5e35390" loc="81:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f06d5e2bb60" loc="79:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f06d5e34b40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f06d5e2b8e0" loc="79:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f06d5e34b40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f06d5e2fb90" loc="53:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f06d5e2c6f0" loc="62:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f06d5e34b40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f06d5e2c470" loc="62:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f06d5e34b40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f06d5e2b030" loc="70:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f06d5e34b40"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:/opt/tinyos-main/tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:/opt/tinyos-main/tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f06d5c265e0" loc="13:/opt/tinyos-main/tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f06d5c26360" loc="13:/opt/tinyos-main/tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:/opt/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:/opt/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f06d5c13b00" loc="10:/opt/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7f06d5c131c0" loc="10:/opt/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f06d5c13530" loc="10:/opt/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f06d5c13860" loc="10:/opt/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f06d5c11880" loc="11:/opt/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f06d5c112c0" loc="11:/opt/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f06d5c115f0" loc="11:/opt/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/opt/tinyos-main/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f06d5bf9530" loc="59:/opt/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f06d5bf9530"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f06d5bf9770" loc="59:/opt/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f06d5bf9770"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f06d5bf82e0" loc="66:/opt/tinyos-main/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/opt/tinyos-main/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f06d5bf9770"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f06d5bf8060" loc="66:/opt/tinyos-main/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f06d5bf9770"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/opt/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f06d5b965e0" loc="43:/opt/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/opt/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f06d5b639e0" loc="63:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f06d5b63020" loc="63:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f06d5b63750" loc="63:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f06d5b647f0" loc="55:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f06d5b64020" loc="49:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f06d5b68d30" loc="49:/opt/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f06d7871920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/opt/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f06d5b7a3d0" loc="58:/opt/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/opt/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f06d5b7a150" loc="58:/opt/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f06d5b7b3d0" loc="50:/opt/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/opt/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f06d5b7b150" loc="50:/opt/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f06d5b77350" loc="72:/opt/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/opt/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f06d5b770d0" loc="72:/opt/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f06d5b78390" loc="65:/opt/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/opt/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f06d5b78110" loc="65:/opt/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f06d5871600" loc="53:/opt/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f06d5871600"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f06d586e2a0" loc="64:/opt/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f06d5871600"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f06d586e020" loc="64:/opt/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f06d5871600"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/opt/tinyos-main/tos/interfaces/Pool.nc">
      <documentation loc="33:/opt/tinyos-main/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f06d56ad020" loc="50:/opt/tinyos-main/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f06d56ad020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f06d56aa230" loc="97:/opt/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="91:/opt/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f06d56ad020"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f06d56aca10" loc="80:/opt/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="74:/opt/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f06d56ad8d0" loc="61:/opt/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="52:/opt/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x7f06d56ab4e0" loc="89:/opt/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="82:/opt/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f06d56ad020"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f06d56ab260" loc="89:/opt/tinyos-main/tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f06d56ad020"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f06d56ac190" loc="72:/opt/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="63:/opt/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/opt/tinyos-main/tos/interfaces/Queue.nc">
      <documentation loc="33:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f06d56be360" loc="43:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f06d56be360"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7f06d56baac0" loc="80:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="74:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f06d56be360"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7f06d56b6580" loc="97:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="90:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f06d56be360"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f06d56b6300" loc="97:/opt/tinyos-main/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f06d56be360"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x7f06d7877c30"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:2"><attribute-ref name="one" ref="0x7f06d7877c30"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7f06d56b4520" loc="108:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="99:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f06d56be360"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f06d56b42a0" loc="108:/opt/tinyos-main/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x7f06d56bb3b0" loc="57:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="52:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f06d56ba350" loc="72:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="67:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f06d56b5700" loc="88:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="82:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f06d56be360"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f06d56bec10" loc="50:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="45:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f06d6f16090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f06d56bbb30" loc="65:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="59:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7f06d54ba020" loc="31:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f06d54bb960" loc="31:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7f06d54bbce0" loc="31:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7f06d54bd020" loc="15:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7f06d54bb020" loc="23:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f06d54bd8b0" loc="23:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f06d683a0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f06d68396f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7f06d54bdc20" loc="23:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/opt/tinyos-main/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/opt/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7f06d54a1190" loc="54:/opt/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/opt/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f06d54a49e0" loc="49:/opt/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/opt/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7f06d54ab2b0" loc="56:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7f06d54a9720" loc="72:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7f06d54a7390" loc="94:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f06d54a7110" loc="94:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7f06d54a8020" loc="79:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7f06d54abe20" loc="65:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f06d54abba0" loc="65:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7f06d54a7bf0" loc="100:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7f06d54a88d0" loc="85:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7f06d54b3c10" loc="71:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7f06d54b1590" loc="81:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7f06d54b32a0" loc="62:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7f06d54b3020" loc="62:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7f06d54b02a0" loc="91:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f06d54b0020" loc="91:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7f06d54ae020" loc="62:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7f06d54aec40" loc="69:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f06d54ae9c0" loc="69:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7f06d54ad730" loc="80:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f06d54ad4b0" loc="80:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f06d537bdd0" loc="48:/opt/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f06d537b800" loc="48:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f06d537bb40" loc="48:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f06d5375ac0" loc="79:/opt/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f06d5375840" loc="79:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f06d5372930" loc="90:/opt/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f06d5372360" loc="90:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f06d53726a0" loc="90:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f06d5374740" loc="65:/opt/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f06d53712c0" loc="99:/opt/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f06d5370920" loc="99:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f06d5370c60" loc="99:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f06d5371020" loc="99:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f06d5375070" loc="72:/opt/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f06d5377720" loc="57:/opt/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f06d5378db0" loc="57:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f06d5377130" loc="57:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f06d7871520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f06d5377480" loc="57:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f06d53505b0" loc="46:/opt/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f06d5350330" loc="46:/opt/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f06d534f430" loc="56:/opt/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f06d5350e20" loc="56:/opt/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f06d534f1a0" loc="56:/opt/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f06d7871160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:/opt/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f06d534aa00" loc="39:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f06d604ae70"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f06d60492b0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f06d52bf390" loc="95:/opt/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f06d52bfbe0" loc="105:/opt/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f06d6f0d980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/opt/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/opt/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f06d51f92b0" loc="62:/opt/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/opt/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/opt/tinyos-main/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/opt/tinyos-main/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x7f06d518b020" loc="49:/opt/tinyos-main/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/opt/tinyos-main/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x7f06d518ed50" loc="49:/opt/tinyos-main/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
