<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="14:TestPrintfAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fce238945d0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fce23a6ea60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fce23a6ea60"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fce238a2590"/></to>
    </wire>
    <wire loc="15:TestPrintfAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fce23888770"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fce2384c640"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fce2384c640"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fce23844b60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="16:TestPrintfAppC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fce2387a500"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fce2369ec90"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fce2369ec90"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fce23835b80"/></to>
    </wire>
    <wire loc="17:TestPrintfAppC.nc">
      <from><interface-ref name="primeModule" scoped="" ref="0x7fce23884020"/></from>
      <to><interface-ref name="primeModule" scoped="" ref="0x7fce22e8e880"/></to>
    </wire>
    <wire loc="8:primeC.nc">
      <from><interface-ref name="primeModule" scoped="" ref="0x7fce22e8e880"/></from>
      <to><interface-ref name="primeModule" scoped="" ref="0x7fce22e77020"/></to>
    </wire>
    <wire loc="18:TestPrintfAppC.nc">
      <from><interface-ref name="RSAint" scoped="" ref="0x7fce2386be60"/></from>
      <to><interface-ref name="RSAinterface" scoped="" ref="0x7fce22e8b960"/></to>
    </wire>
    <wire loc="7:RSAC.nc">
      <from><interface-ref name="RSAinterface" scoped="" ref="0x7fce22e8b960"/></from>
      <to><interface-ref name="RSAinterface" scoped="" ref="0x7fce22e4f2f0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fce23a6f020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fce22e8a020"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fce23a6f020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fce22709ca0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fce23a6f020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fce2357f550"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fce23a6f020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fce22eb7a60"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fce23a6f020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fce2383d8c0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fce238a2c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fce23f5b3a0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fce23f5b3a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fce23b06140"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fce238a16c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fce23a6a020"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fce23a6a020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fce23a67280"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fce238a1dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7fce23a6f020"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7fce23a67990"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7fce23a68910"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7fce23a68910"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fce23a48850"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fce23a660c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fce23a60450"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7fce23a667a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fce23022dd0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fce23a48850"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fce23a2fc00"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fce23a3fde0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fce23a2e350"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7fce23db9080"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7fce23a2d680"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7fce239ea5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fce239276d0"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7fce239d8020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fce23920b30"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7fce239e1700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fce2392d160"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7fce239c5a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fce23906cb0"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7fce239e8aa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fce2392e480"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7fce239cb020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fce23906020"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7fce239c2a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fce238efcb0"/></to>
    </wire>
    <wire loc="154:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7fce239d25a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fce23900220"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7fce239ebb10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fce2397d9d0"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7fce239c7a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fce239152f0"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7fce239cd3e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fce23916610"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7fce239d75a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fce23917220"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7fce239e0700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fce239257a0"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7fce239c4a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fce238fe2f0"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7fce239d6be0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fce239106d0"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7fce239e7890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fce23926ac0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7fce239fb060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fce2398b540"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7fce239cbda0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fce238ff610"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7fce239f10c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fce2392f020"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7fce239d1a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fce238f86d0"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7fce239db690"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fce23935a90"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7fce239c6a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fce2390e7a0"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7fce239e3cf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fce23936de0"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7fce239cc1f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fce2390fac0"/></to>
    </wire>
    <wire loc="163:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7fce239c3a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fce238f67a0"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7fce239d30c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fce23908b30"/></to>
    </wire>
    <wire loc="120:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7fce239da6c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fce239833e0"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7fce239cab80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fce238f7ac0"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7fce239c8a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fce2391ecb0"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7fce239c9a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fce238ef020"/></to>
    </wire>
    <wire loc="127:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7fce239ce570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fce2391e020"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7fce239cf020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fce238f1b30"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fce23989450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fce2398ad80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7fce23989aa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7fce238e9a90"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7fce23987120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7fce238e6260"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fce23934930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fce2398b540"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fce23932020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fce2398ad80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fce2392c020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fce2398b540"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fce2392a7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fce2398ad80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fce23924610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fce2398b540"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fce23923c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fce2398ad80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fce239812f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fce23982bf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7fce23981940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7fce238e69f0"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7fce23980020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7fce238e5240"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fce2391db40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fce239833e0"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fce2391a2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fce23982bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fce23914160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fce239833e0"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fce239137a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fce23982bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fce2390d610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fce239833e0"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fce2390cc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fce23982bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fce23905b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fce239833e0"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fce239032f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fce23982bf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fce238fd160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fce239833e0"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fce238fc7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fce23982bf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fce238f5610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fce239833e0"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fce238f4c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fce23982bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fce238eeb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fce239833e0"/></to>
    </wire>
    <wire loc="172:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fce238ec2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fce23982bf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7fce23fca1d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fce23b04040"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7fce23b015d0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7fce23ef22d0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fce23844b60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fce2383a700"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fce2383a700"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fce236c5690"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fce2383d8c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fce23741760"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fce23835b80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fce236b7cf0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fce23741760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fce22c27e60"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7fce236c0c30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fce23715cf0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fce2370e1d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fce23740020"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fce23740020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fce22c1aa90"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fce236ab020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fce237b9b50"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fce237b9b50"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fce2379c5f0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fce22c27e60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fce22c04660"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fce22c13210"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fce22c256e0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fce22c256e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fce22c03020"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fce22c17e10"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fce237b9b50"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fce22c00190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fce22c0a340"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fce22c0a340"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fce23814990"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fce22bff770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fce22c09a80"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fce22c09a80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fce23811720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fce22bfea80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fce22c08da0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fce22c08da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fce2380f1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fce23814990"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fce239da6c0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fce23811720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7fce239d8020"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fce2380f1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7fce239ce570"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fce23814990"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fce239da6c0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fce23811720"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7fce239d6be0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fce2380f1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7fce239cc1f0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fce23814990"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fce239da6c0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fce23811720"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7fce239d30c0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fce2380f1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7fce239cb020"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fce23814990"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fce239da6c0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fce23811720"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7fce239d25a0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fce2380f1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7fce239cbda0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fce23814990"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fce239da6c0"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fce23811720"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7fce239d1a50"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fce2380f1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7fce239cab80"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fce23814990"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fce239da6c0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fce23811720"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7fce239cf020"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fce2380f1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7fce239c9a20"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fce2377f950"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fce237b8b70"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fce237b8b70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fce237b1b80"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fce237a3c50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fce239da6c0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7fce2370b490"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fce23fca1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7fce236bae80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fce23fca1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fce22eb0a20"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7fce22ee0bf0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fce22ead440"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fce22ee6540"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fce22ee6540"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fce22b7b390"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fce22eac0c0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fce22ee5270"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fce22ee5270"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fce235ef7e0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7fce22e90be0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7fce22eb01a0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fce235ef7e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fce23584d60"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fce22ee5e80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fce235ee470"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fce235ee470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fce235856c0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fce22ee35d0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fce235e9b20"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fce235e9b20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fce23583a10"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fce22b7a060"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fce2364ccf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fce22b7ac70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fce235ee470"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fce2364ccf0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fce23600580"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fce235ff400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fce235f53f0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fce235f53f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fce235da300"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fce235fd060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fce235ee470"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fce235fc720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fce235ef7e0"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7fce235fb480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fce23fca1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7fce235fbc60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fce23fca1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fce235f03b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fce2357fba0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fce2357fba0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fce2356cc40"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fce235ef1d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fce235850d0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fce2357f550"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fce2356c5f0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fce235782b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fce235db330"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fce235824a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fce2357b790"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fce23581120"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fce2357cc60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7fce23574970"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7fce22efb1e0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fce2357b790"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fce2343b830"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fce2357cc60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fce2343b110"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7fce2343a760"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7fce23574970"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fce23565430"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fce235782b0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fce23437590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fce235782b0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fce2342fcc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fce235782b0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fce234390e0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fce23569080"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7fce234399d0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7fce23566a40"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7fce2355b410"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7fce23433b70"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7fce23557530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fce23409080"/></to>
    </wire>
    <wire loc="17:/opt/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fce23409080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fce22f127a0"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fce23426d20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fce23409890"/></to>
    </wire>
    <wire loc="13:/opt/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fce23409890"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fce22f150c0"/></to>
    </wire>
    <wire loc="332:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7fce23505e40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fce23fca1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7fce2353cd50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fce23fca1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7fce23507400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fce23fca1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7fce235000c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fce23fca1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7fce23436c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fce23fca1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7fce23435480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fce23fca1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:/opt/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fce23404d50"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fce22f14060"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fce22f14060"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fce2339e850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fce22f150c0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fce233a01d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:/opt/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fce22f14800"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fce22f0f080"/></to>
    </wire>
    <wire loc="19:/opt/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fce22f0f6f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fce22f18c00"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fce22f18c00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fce233a78d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fce22f178f0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fce22ac0970"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fce22ac0970"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fce22fde2c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fce2339ba40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fce22f14800"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fce22abaa50"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fce233a1450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fce2339c690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fce22ac2cc0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fce22ac2cc0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fce22fdf020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fce23399020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fce22aba2b0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fce22aba2b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fce22fe01d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fce233a1450"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fce23317dc0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fce2339e850"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fce23315890"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fce233a01d0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fce233166d0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fce233a78d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fce23317020"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fce23313020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fce2339ba40"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fce23314230"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7fce2339c690"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fce2330d290"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7fce23399020"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7fce23313690"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fce233018b0"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fce233018b0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fce232f6020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fce2330dc90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fce230569a0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fce230569a0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fce237b8b70"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fce2330bdd0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fce23055c10"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fce23055c10"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fce2304a620"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fce232fa3b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fce232f2dc0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fce23301080"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fce232f9710"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fce232e5860"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7fce231f63f0"/></to>
    </wire>
    <wire loc="539:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7fce231f63f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce2310b100"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7fce232ef800"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7fce231f43f0"/></to>
    </wire>
    <wire loc="540:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7fce231f43f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce23107d10"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fce232e3800"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7fce231f23f0"/></to>
    </wire>
    <wire loc="541:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7fce231f23f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce23102740"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7fce232e1800"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7fce231ee3f0"/></to>
    </wire>
    <wire loc="543:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7fce231ee3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce2313c740"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7fce232df800"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7fce231f03f0"/></to>
    </wire>
    <wire loc="542:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7fce231f03f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce23141d10"/></to>
    </wire>
    <wire loc="442:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7fce23264cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce23197d10"/></to>
    </wire>
    <wire loc="455:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7fce2324fcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce23167740"/></to>
    </wire>
    <wire loc="531:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7fce232053d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce23158740"/></to>
    </wire>
    <wire loc="551:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7fce231e03e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce230ced10"/></to>
    </wire>
    <wire loc="532:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7fce232033f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce23153100"/></to>
    </wire>
    <wire loc="460:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7fce2324bcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce2315dd10"/></to>
    </wire>
    <wire loc="473:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7fce23236020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce2312d740"/></to>
    </wire>
    <wire loc="486:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7fce23221020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce230fd100"/></to>
    </wire>
    <wire loc="497:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7fce23211020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce230d7740"/></to>
    </wire>
    <wire loc="535:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7fce231fd3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce2314a740"/></to>
    </wire>
    <wire loc="545:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7fce231ec3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce230ead10"/></to>
    </wire>
    <wire loc="557:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7fce231d83f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce230c8740"/></to>
    </wire>
    <wire loc="445:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7fce2325ecc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce23189d10"/></to>
    </wire>
    <wire loc="536:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7fce231fb3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce23145100"/></to>
    </wire>
    <wire loc="450:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7fce2325acc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce2317e100"/></to>
    </wire>
    <wire loc="463:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7fce23245cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce2314fd10"/></to>
    </wire>
    <wire loc="476:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7fce23230020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce2311f740"/></to>
    </wire>
    <wire loc="489:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7fce2321b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce230ee100"/></to>
    </wire>
    <wire loc="500:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7fce2320b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce230c8740"/></to>
    </wire>
    <wire loc="440:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7fce23268cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce231a0740"/></to>
    </wire>
    <wire loc="453:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7fce23253cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce23170260"/></to>
    </wire>
    <wire loc="466:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7fce2323fcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce23141d10"/></to>
    </wire>
    <wire loc="530:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7fce232073f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce23158740"/></to>
    </wire>
    <wire loc="548:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7fce231e63e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce230dcd10"/></to>
    </wire>
    <wire loc="555:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7fce231da3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce230c8740"/></to>
    </wire>
    <wire loc="471:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7fce2323bcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce231363f0"/></to>
    </wire>
    <wire loc="484:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7fce23225020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce23107d10"/></to>
    </wire>
    <wire loc="495:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7fce23215020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce230e0100"/></to>
    </wire>
    <wire loc="549:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7fce231e43e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce230d7740"/></to>
    </wire>
    <wire loc="538:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7fce231f83e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce23110740"/></to>
    </wire>
    <wire loc="443:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7fce23262cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce23192740"/></to>
    </wire>
    <wire loc="456:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7fce2324dcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce23162100"/></to>
    </wire>
    <wire loc="493:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7fce23219020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce230ead10"/></to>
    </wire>
    <wire loc="461:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7fce23249cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce23158740"/></to>
    </wire>
    <wire loc="474:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7fce23234020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce23128100"/></to>
    </wire>
    <wire loc="487:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7fce2321f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce230f9d10"/></to>
    </wire>
    <wire loc="498:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7fce2320f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce230d2100"/></to>
    </wire>
    <wire loc="438:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7fce2326ee00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce231aa3f0"/></to>
    </wire>
    <wire loc="451:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7fce23257cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce2317ad10"/></to>
    </wire>
    <wire loc="464:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7fce23243cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce2314a740"/></to>
    </wire>
    <wire loc="477:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7fce2322e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce2311a100"/></to>
    </wire>
    <wire loc="546:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7fce231ea3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce230e5740"/></to>
    </wire>
    <wire loc="552:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7fce231de3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce230c8740"/></to>
    </wire>
    <wire loc="482:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7fce23229020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce23110740"/></to>
    </wire>
    <wire loc="441:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7fce23266cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce2319b100"/></to>
    </wire>
    <wire loc="454:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7fce23251cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce2316cd10"/></to>
    </wire>
    <wire loc="467:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7fce2323dcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce2313c740"/></to>
    </wire>
    <wire loc="550:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7fce231e23e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce230d2100"/></to>
    </wire>
    <wire loc="472:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7fce23238020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce23132e00"/></to>
    </wire>
    <wire loc="485:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7fce23223020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce23102740"/></to>
    </wire>
    <wire loc="496:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7fce23213020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce230dcd10"/></to>
    </wire>
    <wire loc="444:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7fce23260cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce2318d100"/></to>
    </wire>
    <wire loc="494:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7fce23217020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce230e5740"/></to>
    </wire>
    <wire loc="449:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7fce2325ccc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce23184740"/></to>
    </wire>
    <wire loc="462:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7fce23247cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce23153100"/></to>
    </wire>
    <wire loc="475:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7fce23232020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce23124d10"/></to>
    </wire>
    <wire loc="488:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7fce2321d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce230f4740"/></to>
    </wire>
    <wire loc="499:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7fce2320d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce230ced10"/></to>
    </wire>
    <wire loc="439:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7fce2326acc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce231a5e00"/></to>
    </wire>
    <wire loc="452:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7fce23255cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce23175740"/></to>
    </wire>
    <wire loc="465:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7fce23241cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce23145100"/></to>
    </wire>
    <wire loc="478:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7fce2322c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce23116d10"/></to>
    </wire>
    <wire loc="534:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7fce231ff3d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce2314fd10"/></to>
    </wire>
    <wire loc="547:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7fce231e83e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce230e0100"/></to>
    </wire>
    <wire loc="533:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7fce232013f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce2314fd10"/></to>
    </wire>
    <wire loc="483:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7fce23227020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce2310b100"/></to>
    </wire>
    <wire loc="554:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7fce231dc3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce230ced10"/></to>
    </wire>
    <wire loc="558:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7fce231d63f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce230ee100"/></to>
    </wire>
    <wire loc="529:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7fce23209060"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fce2315dd10"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fce23022dd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fce2304a020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fce23042b50"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7fce2304b5a0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fce2304b5a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fce2301f9e0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fce23048e30"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7fce23025830"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fce23025830"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fce2300a520"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fce23041020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7fce23024b50"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fce23024b50"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fce23005060"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fce2300ec50"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7fce23221020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fce230097a0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7fce2321f020"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fce230042f0"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7fce2321d020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fce22abf8d0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fce233018b0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fce22abf130"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fce22fdead0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fce22fdead0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fce22f4a400"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fce22fdd8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fce22abaa50"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fce22fde2c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fce22f4b020"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fce22f4b020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fce227053a0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7fce22fe01d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fce22fdab60"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fce22fdf020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fce22f4d210"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fce22f4d210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fce22706540"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fce22f4a400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fce227048b0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7fce22fd8c20"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fce232fa3b0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fce22f4acd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fce22fdd8a0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fce22fc6a90"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fce22f4a400"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fce22f309d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fce22f4b7a0"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fce22f4b7a0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fce22705b20"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fce22f45b20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fce23301080"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fce22703210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fce22f4acd0"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fce227039d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fce22708330"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fce22700c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fce23fca1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fce226d03a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fce22f45b20"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fce226d0b00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fce22f30400"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fce226cf0f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fce22f309d0"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fce226cfd00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fce22f2e720"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-main/tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x7fce22ea6500"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fce23fca1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7fce22e8a680"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7fce22e90be0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-main/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fce22e84380"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fce23a6ea60"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-main/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7fce22e84aa0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fce235f03b0"/></to>
    </wire>
    <wire loc="12:RSAC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fce22e4c460"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fce22db61e0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fce22db61e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fce23844b60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="13:RSAC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fce22e47a90"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fce2369ec90"/></to>
    </wire>
    <wire loc="14:RSAC.nc">
      <from><interface-ref name="primeModule" scoped="" ref="0x7fce22e4d4b0"/></from>
      <to><interface-ref name="primeModule" scoped="" ref="0x7fce22e8e880"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/opt/tinyos-main/tos/system/MainC.nc">
      <documentation loc="45:/opt/tinyos-main/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/opt/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/opt/tinyos-main/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/opt/tinyos-main/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/opt/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/opt/tinyos-main/tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/opt/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="TestPrintfC" loc="4:TestPrintfC.nc">
      <module/>
    </component>
    <component qname="TestPrintfAppC.TimerMilliC" loc="44(TestPrintfAppC.TimerMilliC):/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/opt/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fce23895640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fce238959b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/opt/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fce23895640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fce238959b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fce23a71e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7fce23895200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fce23895640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fce238959b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fce23a71e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7fce23895200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fce23895640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fce238959b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fce23a71e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7fce23895200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fce23a71e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7fce23895200"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fce23a71e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7fce23895200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/tinyos-main/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fce23a86210"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/opt/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/opt/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/opt/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:/opt/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:/opt/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):/opt/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):/opt/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:/opt/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/opt/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):/opt/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
          </type-int>
          <value cst="I:250">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:/opt/tinyos-main/tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:/opt/tinyos-main/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/opt/tinyos-main/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/opt/tinyos-main/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/opt/tinyos-main/tos/lib/printf/PutcharP.nc">
      <documentation loc="64:/opt/tinyos-main/tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/opt/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/lib/serial/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="primeC" loc="1:primeC.nc">
      <configuration/>
    </component>
    <component qname="primeP" loc="2:primeP.nc">
      <module/>
    </component>
    <component qname="RSAC" loc="1:RSAC.nc">
      <configuration/>
    </component>
    <component qname="RSAP" loc="9:RSAP.nc">
      <module/>
    </component>
    <component qname="RSAC.TimerMilliC" loc="44(RSAC.TimerMilliC):/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="39:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7fce239bd890" loc="40:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7fce239bdc30" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7fce239bc020" loc="42:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7fce239bc3a0" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7fce239bc720" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7fce239bca90" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7fce239bce20" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7fce239ba200" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7fce239ba5d0" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fce23f60090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7fce2397fe70" loc="40:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7fce2397c270" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fce237ef3b0" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fce237ef3b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/opt/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fce237b2c80" loc="42:/opt/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fce237b2c80"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fce2379eb70" loc="55:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fce2379eb70"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fce2379b370" loc="56:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fce2379b370"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fce2379b760" loc="57:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fce2379b760"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fce23799020" loc="58:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fce23799020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fce237993f0" loc="59:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7fce23799bf0" loc="60:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7fce23799bf0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fce23778020" loc="52:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fce23778020"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fce237787f0" loc="53:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fce237787f0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fce23778be0" loc="54:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fce23778be0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fce23777400" loc="55:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fce23777400"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fce237777d0" loc="56:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fce237394f0" loc="46:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fce237394f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fce23708d80" loc="46:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fce23708d80"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7fce23705110" loc="46:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fce236b41f0" loc="46:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fce236b41f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fce23697680" loc="47:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fce23a86210"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7fce236680d0" loc="43:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fce23a86210"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7fce236450d0" loc="45:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/opt/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7fce231d0890" loc="40:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7fce231d0c40" loc="41:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7fce231cf020" loc="42:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7fce231cf3d0" loc="43:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7fce231cf740" loc="44:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/opt/tinyos-main/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fce22fc05b0" loc="89:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7fce22fb45b0" loc="42:/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/tinyos-main/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7fce22f9bd90" loc="52:/opt/tinyos-main/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/opt/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/opt/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/opt/tinyos-main/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7fce22ee1bb0" loc="42:/opt/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7fce22ee1bb0"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7fce22ede020" loc="42:/opt/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7fce23a6f020" loc="58:/opt/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7fce23a6f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fce23a6f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fce23a6ea60" loc="57:/opt/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fce23a6ea60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fce23a6ede0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fce23a6a020" loc="42:/opt/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fce23a6a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fce23a6a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7fce23a660c0" loc="6:/opt/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7fce23a660c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fce23a66440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fce23a67280" loc="4:/opt/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fce23a67280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fce23a67600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7fce23a67990" loc="5:/opt/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7fce23a67990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fce23a67d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7fce23a667a0" loc="7:/opt/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7fce23a667a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fce23a66b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fce23a60450" loc="2:/opt/tinyos-main/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fce23a60450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fce23a607d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7fce23a68910" loc="39:/opt/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7fce23a68910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fce23a68c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7fce23a3fde0" loc="40:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fce23a3fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fce23a44c70"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fce23a44310"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fce23a444a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fce23a44630"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fce23a44180"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fce23a447c0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fce23a44950"/>
        <function-ref name="initClocks" scoped="" ref="0x7fce23a44ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fce23a48850" loc="39:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fce23a48850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fce23a48bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7fce23a2e350" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fce23a2e350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fce23a2d340"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fce23a2e860"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fce23a2e9f0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fce23a2eb80"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fce23a2e6d0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fce23a2ed10"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fce23a2d020"/>
        <function-ref name="initClocks" scoped="" ref="0x7fce23a2d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7fce23a2d680" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fce23a2d680"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fce23a2da00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fce23a2fc00" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fce23a2fc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fce23a2e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7fce239ea5a0" loc="42:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7fce239ea5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fce239ea920"/>
        <function-ref name="getControl" scoped="" ref="0x7fce239eaab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fce239eac40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fce239eadd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fce239e9020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fce239e91b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fce239e9340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fce239e94d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fce239e9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7fce239d8020" loc="51:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7fce239d8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fce239d83a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fce239d8530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fce239d86c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fce239d8850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fce239d89e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fce239d8b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fce239d8d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fce239d7020"/>
        <function-ref name="setControl" scoped="" ref="0x7fce239d71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7fce239e1700" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7fce239e1700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce239e1a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fce239e1c10"/>
        <function-ref name="captured" scoped="" ref="0x7fce239e1da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce239e0020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce239e01b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fce239e0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7fce239c5a20" loc="68:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7fce239c5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce239c5da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fce239c4020"/>
        <function-ref name="captured" scoped="" ref="0x7fce239c41b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce239c4340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce239c44d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fce239c4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7fce239e8aa0" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7fce239e8aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce239e8e20"/>
        <function-ref name="setEvent" scoped="" ref="0x7fce239e7020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fce239e71b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fce239e7340"/>
        <function-ref name="fired" scoped="" ref="0x7fce239e74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7fce239cb020" loc="61:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7fce239cb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce239cb3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fce239cb530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fce239cb6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fce239cb850"/>
        <function-ref name="fired" scoped="" ref="0x7fce239cb9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7fce239c2a20" loc="71:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7fce239c2a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce239c2da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fce239c1020"/>
        <function-ref name="captured" scoped="" ref="0x7fce239c11b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce239c1340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce239c14d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fce239c1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7fce239d25a0" loc="55:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7fce239d25a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fce239d2920"/>
        <function-ref name="getControl" scoped="" ref="0x7fce239d2ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fce239d2c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fce239d2dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fce239d1020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fce239d11b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fce239d1340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fce239d14d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fce239d1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7fce239ebb10" loc="40:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7fce239ebb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fce239f2020"/>
        <function-ref name="getControl" scoped="" ref="0x7fce239f21b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fce239f2340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fce239f24d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fce239f2660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fce239f27f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fce239f2980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fce239f2b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fce239f2ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7fce239c7a20" loc="66:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7fce239c7a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce239c7da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fce239c6020"/>
        <function-ref name="captured" scoped="" ref="0x7fce239c61b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce239c6340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce239c64d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fce239c6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7fce239cd3e0" loc="59:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7fce239cd3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce239cd760"/>
        <function-ref name="setEvent" scoped="" ref="0x7fce239cd8f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fce239cda80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fce239cdc10"/>
        <function-ref name="fired" scoped="" ref="0x7fce239cdda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7fce239d75a0" loc="52:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7fce239d75a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fce239d7a20"/>
        <function-ref name="getControl" scoped="" ref="0x7fce239d7bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fce239d7d40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fce239d6020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fce239d61b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fce239d6340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fce239d64d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fce239d6660"/>
        <function-ref name="setControl" scoped="" ref="0x7fce239d67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7fce239e0700" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7fce239e0700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce239e0a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fce239e0c10"/>
        <function-ref name="captured" scoped="" ref="0x7fce239e0da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce239da020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce239da1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fce239da340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7fce239c4a20" loc="69:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7fce239c4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce239c4da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fce239c3020"/>
        <function-ref name="captured" scoped="" ref="0x7fce239c31b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce239c3340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce239c34d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fce239c3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7fce239d6be0" loc="53:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7fce239d6be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fce239d4020"/>
        <function-ref name="getControl" scoped="" ref="0x7fce239d41b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fce239d4340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fce239d44d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fce239d4660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fce239d47f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fce239d4980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fce239d4b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fce239d4ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7fce239e7890" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7fce239e7890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce239e7c10"/>
        <function-ref name="setEvent" scoped="" ref="0x7fce239e7da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fce239e2020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fce239e21b0"/>
        <function-ref name="fired" scoped="" ref="0x7fce239e2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7fce239fb060" loc="39:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7fce239fb060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fce239fb3e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fce239fb570"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fce239fb700"/>
        <function-ref name="get" scoped="" ref="0x7fce239fb890"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fce239fba20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce239fbbb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fce239fbd40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce239fa020"/>
        <function-ref name="overflow" scoped="" ref="0x7fce239fa1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fce239fa340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fce239fa4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7fce239cbda0" loc="62:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7fce239cbda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce239ca180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fce239ca310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fce239ca4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fce239ca630"/>
        <function-ref name="fired" scoped="" ref="0x7fce239ca7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7fce239f10c0" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7fce239f10c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fce239f1440"/>
        <function-ref name="getControl" scoped="" ref="0x7fce239f15d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fce239f1760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fce239f18f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fce239f1a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fce239f1c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fce239f1da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fce239ea020"/>
        <function-ref name="setControl" scoped="" ref="0x7fce239ea1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7fce239d1a50" loc="56:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7fce239d1a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fce239d1dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7fce239d0020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fce239d01b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fce239d0340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fce239d04d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fce239d0660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fce239d07f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fce239d0980"/>
        <function-ref name="setControl" scoped="" ref="0x7fce239d0b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7fce239db690" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7fce239db690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce239dba10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fce239dbba0"/>
        <function-ref name="captured" scoped="" ref="0x7fce239dbd30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce239e1020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce239e11b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fce239e1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7fce239c6a20" loc="67:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7fce239c6a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce239c6da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fce239c5020"/>
        <function-ref name="captured" scoped="" ref="0x7fce239c51b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce239c5340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce239c54d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fce239c5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7fce239e3cf0" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7fce239e3cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce239e80a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fce239e8230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fce239e83c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fce239e8550"/>
        <function-ref name="fired" scoped="" ref="0x7fce239e86e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7fce239cc1f0" loc="60:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7fce239cc1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce239cc570"/>
        <function-ref name="setEvent" scoped="" ref="0x7fce239cc700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fce239cc890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fce239cca20"/>
        <function-ref name="fired" scoped="" ref="0x7fce239ccbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7fce239c3a20" loc="70:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7fce239c3a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce239c3da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fce239c2020"/>
        <function-ref name="captured" scoped="" ref="0x7fce239c21b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce239c2340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce239c24d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fce239c2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7fce239d30c0" loc="54:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7fce239d30c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fce239d3440"/>
        <function-ref name="getControl" scoped="" ref="0x7fce239d35d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fce239d3760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fce239d38f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fce239d3a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fce239d3c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fce239d3da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fce239d2020"/>
        <function-ref name="setControl" scoped="" ref="0x7fce239d21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7fce239da6c0" loc="50:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7fce239da6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fce239daa40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fce239dabd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fce239dad60"/>
        <function-ref name="get" scoped="" ref="0x7fce239d9020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fce239d91b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce239d9340"/>
        <function-ref name="getMode" scoped="" ref="0x7fce239d94d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce239d9660"/>
        <function-ref name="overflow" scoped="" ref="0x7fce239d97f0"/>
        <function-ref name="setMode" scoped="" ref="0x7fce239d9980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fce239d9b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7fce239cab80" loc="63:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7fce239cab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce239c9020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fce239c91b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fce239c9340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fce239c94d0"/>
        <function-ref name="fired" scoped="" ref="0x7fce239c9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7fce239c8a20" loc="65:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7fce239c8a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce239c8da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fce239c7020"/>
        <function-ref name="captured" scoped="" ref="0x7fce239c71b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce239c7340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce239c74d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fce239c7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7fce239c9a20" loc="64:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7fce239c9a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce239c8020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fce239c81b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fce239c8340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fce239c84d0"/>
        <function-ref name="fired" scoped="" ref="0x7fce239c8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7fce239ce570" loc="58:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7fce239ce570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce239ce8f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fce239cea80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fce239cec10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fce239ceda0"/>
        <function-ref name="fired" scoped="" ref="0x7fce239cd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7fce239cf020" loc="57:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7fce239cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fce239cf3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fce239cf530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fce239cf6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fce239cf850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fce239cf9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fce239cfb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fce239cfd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fce239ce020"/>
        <function-ref name="setControl" scoped="" ref="0x7fce239ce1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7fce23989aa0" loc="53:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7fce23989aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fce23989e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7fce23989450" loc="52:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fce23989450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fce239897d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7fce23987120" loc="54:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7fce23987120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fce239874a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7fce2398ad80" loc="51:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fce2398ad80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fce23989180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fce2398b540" loc="50:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fce2398b540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fce2398b8c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fce2398ba50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fce2398bbe0"/>
        <function-ref name="get" scoped="" ref="0x7fce2398bd70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fce2398a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce2398a1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fce2398a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce2398a4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fce2398a660"/>
        <function-ref name="setMode" scoped="" ref="0x7fce2398a7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fce2398a980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7fce23981940" loc="53:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7fce23981940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fce23981cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7fce239812f0" loc="52:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fce239812f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fce23981670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7fce23980020" loc="54:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7fce23980020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fce239803a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7fce23982bf0" loc="51:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fce23982bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fce23981020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fce239833e0" loc="50:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fce239833e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fce23983760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fce239838f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fce23983a80"/>
        <function-ref name="get" scoped="" ref="0x7fce23983c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fce23983da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce23982020"/>
        <function-ref name="getMode" scoped="" ref="0x7fce239821b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce23982340"/>
        <function-ref name="overflow" scoped="" ref="0x7fce239824d0"/>
        <function-ref name="setMode" scoped="" ref="0x7fce23982660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fce239827f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fce23935a90" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fce23935a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce23935e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fce23934020"/>
        <function-ref name="captured" scoped="" ref="0x7fce239341b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce23934340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce239344d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fce23934660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fce2397d9d0" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fce2397d9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fce2397dd50"/>
        <function-ref name="getControl" scoped="" ref="0x7fce23936020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fce239361b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fce23936340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fce239364d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fce23936660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fce239367f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fce23936980"/>
        <function-ref name="setControl" scoped="" ref="0x7fce23936b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fce23932020" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fce23932020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fce239323a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fce23936de0" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fce23936de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce23935180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fce23935310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fce239354a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fce23935630"/>
        <function-ref name="fired" scoped="" ref="0x7fce239357c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fce23934930" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fce23934930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fce23934cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fce23934e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fce23933020"/>
        <function-ref name="get" scoped="" ref="0x7fce239331b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fce23933340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce239334d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fce23933660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce239337f0"/>
        <function-ref name="overflow" scoped="" ref="0x7fce23933980"/>
        <function-ref name="setMode" scoped="" ref="0x7fce23933b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fce23933ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fce2392d160" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fce2392d160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce2392d4e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fce2392d670"/>
        <function-ref name="captured" scoped="" ref="0x7fce2392d800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce2392d990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce2392db20"/>
        <function-ref name="setEdge" scoped="" ref="0x7fce2392dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fce2392f020" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fce2392f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fce2392f3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fce2392f530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fce2392f6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fce2392f850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fce2392f9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fce2392fb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fce2392fd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fce2392e020"/>
        <function-ref name="setControl" scoped="" ref="0x7fce2392e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fce2392a7a0" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fce2392a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fce2392ab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fce2392e480" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fce2392e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce2392e800"/>
        <function-ref name="setEvent" scoped="" ref="0x7fce2392e990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fce2392eb20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fce2392ecb0"/>
        <function-ref name="fired" scoped="" ref="0x7fce2392ee40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fce2392c020" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fce2392c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fce2392c3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fce2392c530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fce2392c6c0"/>
        <function-ref name="get" scoped="" ref="0x7fce2392c850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fce2392c9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce2392cb70"/>
        <function-ref name="getMode" scoped="" ref="0x7fce2392cd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce2392a020"/>
        <function-ref name="overflow" scoped="" ref="0x7fce2392a1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fce2392a340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fce2392a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fce239257a0" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fce239257a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce23925b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fce23925cb0"/>
        <function-ref name="captured" scoped="" ref="0x7fce23925e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce23924020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce239241b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fce23924340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fce239276d0" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fce239276d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fce23927a50"/>
        <function-ref name="getControl" scoped="" ref="0x7fce23927be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fce23927d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fce23926020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fce239261b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fce23926340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fce239264d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fce23926660"/>
        <function-ref name="setControl" scoped="" ref="0x7fce239267f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fce23923c50" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fce23923c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fce23922020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fce23926ac0" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fce23926ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce23926e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fce23925020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fce239251b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fce23925340"/>
        <function-ref name="fired" scoped="" ref="0x7fce239254d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fce23924610" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fce23924610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fce23924990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fce23924b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fce23924cb0"/>
        <function-ref name="get" scoped="" ref="0x7fce23924e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fce23923020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce239231b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fce23923340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce239234d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fce23923660"/>
        <function-ref name="setMode" scoped="" ref="0x7fce239237f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fce23923980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fce2391ecb0" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fce2391ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce2391d0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fce2391d230"/>
        <function-ref name="captured" scoped="" ref="0x7fce2391d3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce2391d550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce2391d6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fce2391d870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fce23920b30" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fce23920b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fce2391f020"/>
        <function-ref name="getControl" scoped="" ref="0x7fce2391f1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fce2391f340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fce2391f4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fce2391f660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fce2391f7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fce2391f980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fce2391fb10"/>
        <function-ref name="setControl" scoped="" ref="0x7fce2391fca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fce2391a2f0" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fce2391a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fce2391a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fce2391e020" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fce2391e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce2391e3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fce2391e530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fce2391e6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fce2391e850"/>
        <function-ref name="fired" scoped="" ref="0x7fce2391e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fce2391db40" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fce2391db40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fce2391b020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fce2391b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fce2391b340"/>
        <function-ref name="get" scoped="" ref="0x7fce2391b4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fce2391b660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce2391b7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fce2391b980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce2391bb10"/>
        <function-ref name="overflow" scoped="" ref="0x7fce2391bca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fce2391be30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fce2391a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fce239152f0" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fce239152f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce23915670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fce23915800"/>
        <function-ref name="captured" scoped="" ref="0x7fce23915990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce23915b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce23915cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fce23915e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fce23917220" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fce23917220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fce239175a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fce23917730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fce239178c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fce23917a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fce23917be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fce23917d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fce23916020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fce239161b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fce23916340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fce239137a0" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fce239137a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fce23913b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fce23916610" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fce23916610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce23916990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fce23916b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fce23916cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fce23916e40"/>
        <function-ref name="fired" scoped="" ref="0x7fce23915020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fce23914160" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fce23914160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fce239144e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fce23914670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fce23914800"/>
        <function-ref name="get" scoped="" ref="0x7fce23914990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fce23914b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce23914cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fce23914e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce23913020"/>
        <function-ref name="overflow" scoped="" ref="0x7fce239131b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fce23913340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fce239134d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fce2390e7a0" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fce2390e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce2390eb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fce2390ecb0"/>
        <function-ref name="captured" scoped="" ref="0x7fce2390ee40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce2390d020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce2390d1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fce2390d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fce239106d0" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fce239106d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fce23910a50"/>
        <function-ref name="getControl" scoped="" ref="0x7fce23910be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fce23910d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fce2390f020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fce2390f1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fce2390f340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fce2390f4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fce2390f660"/>
        <function-ref name="setControl" scoped="" ref="0x7fce2390f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fce2390cc50" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fce2390cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fce2390a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fce2390fac0" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fce2390fac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce2390fe40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fce2390e020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fce2390e1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fce2390e340"/>
        <function-ref name="fired" scoped="" ref="0x7fce2390e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fce2390d610" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fce2390d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fce2390d990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fce2390db20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fce2390dcb0"/>
        <function-ref name="get" scoped="" ref="0x7fce2390de40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fce2390c020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce2390c1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fce2390c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce2390c4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fce2390c660"/>
        <function-ref name="setMode" scoped="" ref="0x7fce2390c7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fce2390c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fce23906cb0" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fce23906cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce239050a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fce23905230"/>
        <function-ref name="captured" scoped="" ref="0x7fce239053c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce23905550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce239056e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fce23905870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fce23908b30" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fce23908b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fce23907020"/>
        <function-ref name="getControl" scoped="" ref="0x7fce239071b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fce23907340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fce239074d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fce23907660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fce239077f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fce23907980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fce23907b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fce23907ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fce239032f0" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fce239032f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fce23903670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fce23906020" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fce23906020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce239063a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fce23906530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fce239066c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fce23906850"/>
        <function-ref name="fired" scoped="" ref="0x7fce239069e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fce23905b40" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fce23905b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fce23904020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fce239041b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fce23904340"/>
        <function-ref name="get" scoped="" ref="0x7fce239044d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fce23904660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce239047f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fce23904980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce23904b10"/>
        <function-ref name="overflow" scoped="" ref="0x7fce23904ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fce23904e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fce23903020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fce238fe2f0" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fce238fe2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce238fe670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fce238fe800"/>
        <function-ref name="captured" scoped="" ref="0x7fce238fe990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce238feb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce238fecb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fce238fee40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fce23900220" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fce23900220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fce239005a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fce23900730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fce239008c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fce23900a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fce23900be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fce23900d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fce238ff020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fce238ff1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fce238ff340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fce238fc7a0" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fce238fc7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fce238fcb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fce238ff610" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fce238ff610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce238ff990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fce238ffb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fce238ffcb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fce238ffe40"/>
        <function-ref name="fired" scoped="" ref="0x7fce238fe020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fce238fd160" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fce238fd160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fce238fd4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fce238fd670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fce238fd800"/>
        <function-ref name="get" scoped="" ref="0x7fce238fd990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fce238fdb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce238fdcb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fce238fde40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce238fc020"/>
        <function-ref name="overflow" scoped="" ref="0x7fce238fc1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fce238fc340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fce238fc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fce238f67a0" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fce238f67a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce238f6b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fce238f6cb0"/>
        <function-ref name="captured" scoped="" ref="0x7fce238f6e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce238f5020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce238f51b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fce238f5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fce238f86d0" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fce238f86d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fce238f8a50"/>
        <function-ref name="getControl" scoped="" ref="0x7fce238f8be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fce238f8d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fce238f7020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fce238f71b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fce238f7340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fce238f74d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fce238f7660"/>
        <function-ref name="setControl" scoped="" ref="0x7fce238f77f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fce238f4c50" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fce238f4c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fce238f3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fce238f7ac0" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fce238f7ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce238f7e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fce238f6020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fce238f61b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fce238f6340"/>
        <function-ref name="fired" scoped="" ref="0x7fce238f64d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fce238f5610" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fce238f5610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fce238f5990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fce238f5b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fce238f5cb0"/>
        <function-ref name="get" scoped="" ref="0x7fce238f5e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fce238f4020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce238f41b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fce238f4340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce238f44d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fce238f4660"/>
        <function-ref name="setMode" scoped="" ref="0x7fce238f47f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fce238f4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fce238efcb0" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fce238efcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce238ee0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fce238ee230"/>
        <function-ref name="captured" scoped="" ref="0x7fce238ee3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce238ee550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce238ee6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fce238ee870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fce238f1b30" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fce238f1b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fce238f0020"/>
        <function-ref name="getControl" scoped="" ref="0x7fce238f01b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fce238f0340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fce238f04d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fce238f0660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fce238f07f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fce238f0980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fce238f0b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fce238f0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fce238ec2f0" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fce238ec2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fce238ec670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fce238ef020" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fce238ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce238ef3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fce238ef530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fce238ef6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fce238ef850"/>
        <function-ref name="fired" scoped="" ref="0x7fce238ef9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fce238eeb40" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fce238eeb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fce238ed020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fce238ed1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fce238ed340"/>
        <function-ref name="get" scoped="" ref="0x7fce238ed4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fce238ed660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce238ed7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fce238ed980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce238edb10"/>
        <function-ref name="overflow" scoped="" ref="0x7fce238edca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fce238ede30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fce238ec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7fce238e5240" loc="7:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7fce238e5240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fce238e55c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7fce238e9a90" loc="4:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7fce238e9a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fce238e9e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7fce238e6260" loc="5:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7fce238e6260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fce238e65e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7fce238e69f0" loc="6:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7fce238e69f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fce238e6d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7fce23db9080" loc="55:/opt/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fce23db9080"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fce23db9400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7fce23ef22d0" loc="51:/opt/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7fce23ef22d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7fce23ef2650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7fce23d1a7d0" loc="52:/opt/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7fce23d1a7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fce23d1ab50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7fce23a46b50" loc="39:/opt/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fce23a46b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fce238aeb10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fce238ae1b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fce238ae340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fce238ae4d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fce238ae020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fce238ae660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fce238ae7f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7fce238ae980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7fce238a1dc0" loc="60:/opt/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7fce238a1dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fce238a0180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fce238a2590" loc="57:/opt/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fce238a2590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fce238a2910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7fce238a16c0" loc="59:/opt/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7fce238a16c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fce238a1a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7fce238a2c00" loc="58:/opt/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fce238a2c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fce238a1020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fce238a11b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fce238a1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fce23fca1d0" loc="48:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7fce23fca1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fce23fca550"/>
        <function-ref name="runTask" scoped="" ref="0x7fce23fca6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fce23f5b3a0" loc="47:/opt/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fce23f5b3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fce23f5b720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fce23f5b8b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fce23f5ba40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fce23b04040" loc="56:/opt/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7fce23b04040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fce23b043c0"/>
        <function-ref name="runTask" scoped="" ref="0x7fce23b04550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7fce23b015d0" loc="57:/opt/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7fce23b015d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7fce23b01950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fce23b06140" loc="55:/opt/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fce23b06140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fce23b064c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fce23b06650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fce23b067e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fce238945d0" loc="6:TestPrintfC.nc">
      <component-ref qname="TestPrintfC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fce238945d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fce23894950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x7fce2387a500" loc="9:TestPrintfC.nc">
      <component-ref qname="TestPrintfC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fce2387a500"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fce23a71e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7fce23895200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fce2387d170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSAint" ref="0x7fce2386be60" loc="10:TestPrintfC.nc">
      <component-ref qname="TestPrintfC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSAint" scoped="" ref="0x7fce2386be60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RSAinterface"/>
      </instance>
      <interface-functions>
        <function-ref name="encrypt_shared_key" scoped="" ref="0x7fce2387c210"/>
        <function-ref name="get_modulus" scoped="" ref="0x7fce2387c3a0"/>
        <function-ref name="test_key_gen" scoped="" ref="0x7fce2387c530"/>
        <function-ref name="rsa_test_key" scoped="" ref="0x7fce2387c6c0"/>
        <function-ref name="decrypt_shared_key" scoped="" ref="0x7fce2387c850"/>
        <function-ref name="checkKey" scoped="" ref="0x7fce2387c9e0"/>
        <function-ref name="gen_key" scoped="" ref="0x7fce2387cb70"/>
        <function-ref name="RSAtest" scoped="" ref="0x7fce2387cd00"/>
        <function-ref name="gen_shared_key" scoped="" ref="0x7fce23879020"/>
        <function-ref name="print_time" scoped="" ref="0x7fce238791b0"/>
        <function-ref name="rsa_gen_prime" scoped="" ref="0x7fce23879340"/>
        <function-ref name="rsa_encrypt" scoped="" ref="0x7fce238794d0"/>
        <function-ref name="gen_val_key" scoped="" ref="0x7fce23879660"/>
        <function-ref name="rsa_decrypt" scoped="" ref="0x7fce238798f0"/>
        <function-ref name="get_private" scoped="" ref="0x7fce23879a80"/>
        <function-ref name="rsa_test_prime" scoped="" ref="0x7fce23879c10"/>
        <function-ref name="get_exponent" scoped="" ref="0x7fce23879da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="primeModule" ref="0x7fce23884020" loc="8:TestPrintfC.nc">
      <component-ref qname="TestPrintfC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="primeModule" scoped="" ref="0x7fce23884020"/></type-interface>
      <instance>
        <interfacedef-ref qname="primeModule"/>
      </instance>
      <interface-functions>
        <function-ref name="genSharedPrime" scoped="" ref="0x7fce238843a0"/>
        <function-ref name="isPrime" scoped="" ref="0x7fce23884530"/>
        <function-ref name="genLargeNum" scoped="" ref="0x7fce238846c0"/>
        <function-ref name="power" scoped="" ref="0x7fce23884850"/>
        <function-ref name="gcd" scoped="" ref="0x7fce238849e0"/>
        <function-ref name="genLargePrime" scoped="" ref="0x7fce23884b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fce23888770" loc="7:TestPrintfC.nc">
      <component-ref qname="TestPrintfC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fce23888770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fce23a71e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7fce23895200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fce23886c40"/>
        <function-ref name="fired" scoped="" ref="0x7fce238921e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fce23886020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fce23892ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fce23885590"/>
        <function-ref name="gett0" scoped="" ref="0x7fce23885110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fce23892660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fce23893390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fce23886630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fce23893860"/>
        <function-ref name="stop" scoped="" ref="0x7fce23893d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fce2384c640" loc="45:/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="TestPrintfAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fce2384c640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fce23a71e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7fce23895200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fce236a0c40"/>
        <function-ref name="fired" scoped="" ref="0x7fce236a11e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fce236a0020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fce236a1ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fce2369f590"/>
        <function-ref name="gett0" scoped="" ref="0x7fce2369f110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fce236a1660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fce236a3390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fce236a0630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fce236a3860"/>
        <function-ref name="stop" scoped="" ref="0x7fce236a3d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fce23844b60" loc="49:/opt/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7fce23844b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fce23a71e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7fce23895200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fce2383f110"/>
        <function-ref name="fired" scoped="" ref="0x7fce238425f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fce238404a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fce23840020"/>
        <function-ref name="getdt" scoped="" ref="0x7fce2383fa10"/>
        <function-ref name="gett0" scoped="" ref="0x7fce2383f590"/>
        <function-ref name="isRunning" scoped="" ref="0x7fce23842a70"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fce23843790"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fce23840ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fce23843c60"/>
        <function-ref name="stop" scoped="" ref="0x7fce23842170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fce2383a700" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7fce2383a700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fce23a71e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7fce23895200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fce23837c40"/>
        <function-ref name="fired" scoped="" ref="0x7fce238381e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fce23837020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fce23838ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fce23835590"/>
        <function-ref name="gett0" scoped="" ref="0x7fce23835110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fce23838660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fce23839390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fce23837630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fce23839860"/>
        <function-ref name="stop" scoped="" ref="0x7fce23839d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fce23835b80" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fce23835b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fce23a71e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7fce23895200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fce238347d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fce2383d8c0" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fce2383d8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fce2383dc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fce23740020" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fce23740020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fce23a71e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7fce23895200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fce2373d870"/>
        <function-ref name="fired" scoped="" ref="0x7fce2373f840"/>
        <function-ref name="startAt" scoped="" ref="0x7fce2373d220"/>
        <function-ref name="isRunning" scoped="" ref="0x7fce2373fd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fce2373dd30"/>
        <function-ref name="start" scoped="" ref="0x7fce23740e30"/>
        <function-ref name="stop" scoped="" ref="0x7fce2373f380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fce23741760" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fce23741760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fce23741ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fce22c256e0" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fce22c256e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fce23895640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fce238959b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fce22c21020"/>
        <function-ref name="fired" scoped="" ref="0x7fce22c23020"/>
        <function-ref name="startAt" scoped="" ref="0x7fce22c239a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fce22c234e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fce22c214e0"/>
        <function-ref name="start" scoped="" ref="0x7fce22c245b0"/>
        <function-ref name="stop" scoped="" ref="0x7fce22c24ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fce22c27e60" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fce22c27e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fce22c25210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fce22c08da0" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fce22c08da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce22c06180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fce22c06310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fce22c064a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fce22c06630"/>
        <function-ref name="fired" scoped="" ref="0x7fce22c067c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fce22c0a340" loc="39:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fce22c0a340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fce22c0a6c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fce22c0a850"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fce22c0a9e0"/>
        <function-ref name="get" scoped="" ref="0x7fce22c0ab70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fce22c0ad00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce22c09020"/>
        <function-ref name="getMode" scoped="" ref="0x7fce22c091b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce22c09340"/>
        <function-ref name="overflow" scoped="" ref="0x7fce22c094d0"/>
        <function-ref name="setMode" scoped="" ref="0x7fce22c09660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fce22c097f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fce22c09a80" loc="40:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fce22c09a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fce22c09e00"/>
        <function-ref name="getControl" scoped="" ref="0x7fce22c08020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fce22c081b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fce22c08340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fce22c084d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fce22c08660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fce22c087f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fce22c08980"/>
        <function-ref name="setControl" scoped="" ref="0x7fce22c08b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fce2380f1d0" loc="52:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fce2380f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce2380f550"/>
        <function-ref name="setEvent" scoped="" ref="0x7fce2380f6e0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fce2380f870"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fce2380fa00"/>
        <function-ref name="fired" scoped="" ref="0x7fce2380fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fce23814990" loc="50:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fce23814990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fce23814d10"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fce23813020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fce238131b0"/>
        <function-ref name="get" scoped="" ref="0x7fce23813340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fce238134d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce23813660"/>
        <function-ref name="getMode" scoped="" ref="0x7fce238137f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce23813980"/>
        <function-ref name="overflow" scoped="" ref="0x7fce23813b10"/>
        <function-ref name="setMode" scoped="" ref="0x7fce23813ca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fce23813e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fce23811720" loc="51:/opt/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fce23811720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fce23811aa0"/>
        <function-ref name="getControl" scoped="" ref="0x7fce23811c30"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fce23811dc0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fce23810020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fce238101b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fce23810340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fce238104d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fce23810660"/>
        <function-ref name="setControl" scoped="" ref="0x7fce238107f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fce22bfea80" loc="49:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fce22bfea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fce22bfee00"/>
        <function-ref name="setEvent" scoped="" ref="0x7fce22bfc020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fce22bfc1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fce22bfc340"/>
        <function-ref name="fired" scoped="" ref="0x7fce22bfc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fce22c00190" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fce22c00190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fce22c00510"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fce22c006a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fce22c00830"/>
        <function-ref name="get" scoped="" ref="0x7fce22c009c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fce22c00b50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce22c00ce0"/>
        <function-ref name="getMode" scoped="" ref="0x7fce22c00e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce22bff030"/>
        <function-ref name="overflow" scoped="" ref="0x7fce22bff1c0"/>
        <function-ref name="setMode" scoped="" ref="0x7fce22bff350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fce22bff4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fce22c03020" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fce22c03020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fce23895640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fce238959b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fce22c01870"/>
        <function-ref name="fired" scoped="" ref="0x7fce22c02840"/>
        <function-ref name="startAt" scoped="" ref="0x7fce22c01220"/>
        <function-ref name="isRunning" scoped="" ref="0x7fce22c02d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fce22c01d30"/>
        <function-ref name="start" scoped="" ref="0x7fce22c03e30"/>
        <function-ref name="stop" scoped="" ref="0x7fce22c02380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fce22c04660" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fce22c04660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fce22c049e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fce22bff770" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fce22bff770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fce22bffaf0"/>
        <function-ref name="getControl" scoped="" ref="0x7fce22bffc80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fce22bffe10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fce22bfe020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fce22bfe1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fce22bfe340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fce22bfe4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fce22bfe660"/>
        <function-ref name="setControl" scoped="" ref="0x7fce22bfe7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fce237b9b50" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fce237b9b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fce23a71e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7fce23895200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fce237be9b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce237bd360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce237bee70"/>
        <function-ref name="overflow" scoped="" ref="0x7fce237bd820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7fce237b8b70" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fce237b8b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fce23895640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fce238959b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fce237b59b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce237b3360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce237b5e70"/>
        <function-ref name="overflow" scoped="" ref="0x7fce237b3820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fce237a3c50" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fce237a3c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fce237a1020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fce237a11b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fce237a1340"/>
        <function-ref name="get" scoped="" ref="0x7fce237a14d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fce237a1660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce237a17f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fce237a1980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce237a1b10"/>
        <function-ref name="overflow" scoped="" ref="0x7fce237a1ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fce237a1e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fce237a0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fce237b1b80" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fce237b1b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fce23895640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fce238959b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fce237b09b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce237a3360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce237b0e70"/>
        <function-ref name="overflow" scoped="" ref="0x7fce237a3820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fce2377f950" loc="63:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7fce2377f950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fce23895640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fce238959b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fce2377e780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce2377d150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce2377ec40"/>
        <function-ref name="overflow" scoped="" ref="0x7fce2377d610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fce2379c5f0" loc="62:/opt/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fce2379c5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fce23a71e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7fce23895200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fce23781430"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce23781db0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce237818f0"/>
        <function-ref name="overflow" scoped="" ref="0x7fce2377f2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fce22c1aa90" loc="61:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fce22c1aa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fce23a71e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7fce23895200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fce22c172e0"/>
        <function-ref name="fired" scoped="" ref="0x7fce22c182e0"/>
        <function-ref name="startAt" scoped="" ref="0x7fce22c18c60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fce22c187a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fce22c177a0"/>
        <function-ref name="start" scoped="" ref="0x7fce22c198d0"/>
        <function-ref name="stop" scoped="" ref="0x7fce22c19de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fce22c13210" loc="73:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fce22c13210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fce23895640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fce238959b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fce22c11b30"/>
        <function-ref name="fired" scoped="" ref="0x7fce22c12a60"/>
        <function-ref name="startAt" scoped="" ref="0x7fce22c114e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fce22c11020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fce22c10020"/>
        <function-ref name="start" scoped="" ref="0x7fce22c12090"/>
        <function-ref name="stop" scoped="" ref="0x7fce22c125a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fce22c17e10" loc="68:/opt/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fce22c17e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fce23a71e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7fce23895200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fce22c15ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce22c14670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce22c141b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fce22c14b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7fce2370b490" loc="74:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7fce2370b490"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fce2370b810"/>
        <function-ref name="runTask" scoped="" ref="0x7fce2370b9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fce2370e1d0" loc="49:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fce2370e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fce23a71e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7fce23895200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fce2370cb30"/>
        <function-ref name="fired" scoped="" ref="0x7fce2370d9f0"/>
        <function-ref name="startAt" scoped="" ref="0x7fce2370c4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fce2370c020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fce2370b020"/>
        <function-ref name="start" scoped="" ref="0x7fce2370d020"/>
        <function-ref name="stop" scoped="" ref="0x7fce2370d530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fce23715cf0" loc="48:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fce23715cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fce23a71e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7fce23895200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fce23710220"/>
        <function-ref name="fired" scoped="" ref="0x7fce237127c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fce23711590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fce23711110"/>
        <function-ref name="getdt" scoped="" ref="0x7fce23710b20"/>
        <function-ref name="gett0" scoped="" ref="0x7fce237106a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fce23712c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fce23713940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fce23711ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fce23713e10"/>
        <function-ref name="stop" scoped="" ref="0x7fce23712340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7fce236bae80" loc="71:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7fce236bae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fce236b9220"/>
        <function-ref name="runTask" scoped="" ref="0x7fce236b93b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7fce236c0c30" loc="49:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7fce236c0c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fce23a71e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7fce23895200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fce236ba110"/>
        <function-ref name="fired" scoped="" ref="0x7fce236bd6a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fce236bc4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fce236bc020"/>
        <function-ref name="getdt" scoped="" ref="0x7fce236baa10"/>
        <function-ref name="gett0" scoped="" ref="0x7fce236ba590"/>
        <function-ref name="isRunning" scoped="" ref="0x7fce236bdb20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fce236be860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fce236bcab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fce236bed30"/>
        <function-ref name="stop" scoped="" ref="0x7fce236bd220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fce236c5690" loc="48:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fce236c5690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fce23a71e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7fce23895200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fce236c1cf0"/>
        <function-ref name="fired" scoped="" ref="0x7fce236c3260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fce236c1090"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fce236c3ba0"/>
        <function-ref name="getdt" scoped="" ref="0x7fce236c0680"/>
        <function-ref name="gett0" scoped="" ref="0x7fce236c01e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fce236c3700"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fce236c4390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fce236c16c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fce236c4880"/>
        <function-ref name="stop" scoped="" ref="0x7fce236c4d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fce236b7cf0" loc="48:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fce236b7cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fce23a71e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7fce23895200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fce236b5980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fce236ab020" loc="49:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fce236ab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fce23a71e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7fce23895200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fce236abe30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce236aa800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce236aa340"/>
        <function-ref name="overflow" scoped="" ref="0x7fce236aacc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fce2369ec90" loc="20:/opt/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fce2369ec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fce23a71e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7fce23895200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fce2369b8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fce22ee6540" loc="49:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fce22ee6540"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fce22ee68c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fce22ee6a50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fce22ee6be0"/>
        <function-ref name="cancel" scoped="" ref="0x7fce22ee6d70"/>
        <function-ref name="sendDone" scoped="" ref="0x7fce22ee5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fce22ee5270" loc="50:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fce22ee5270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fce22ee55f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fce22ee5780"/>
        <function-ref name="getPayload" scoped="" ref="0x7fce22ee5910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fce22ee5aa0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fce22ee5c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fce22ee5e80" loc="51:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fce22ee5e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fce22ee4220"/>
        <function-ref name="source" scoped="" ref="0x7fce22ee43b0"/>
        <function-ref name="address" scoped="" ref="0x7fce22ee4540"/>
        <function-ref name="destination" scoped="" ref="0x7fce22ee46d0"/>
        <function-ref name="setSource" scoped="" ref="0x7fce22ee4860"/>
        <function-ref name="setDestination" scoped="" ref="0x7fce22ee49f0"/>
        <function-ref name="type" scoped="" ref="0x7fce22ee4b80"/>
        <function-ref name="setType" scoped="" ref="0x7fce22ee4d10"/>
        <function-ref name="isForMe" scoped="" ref="0x7fce22ee3020"/>
        <function-ref name="setGroup" scoped="" ref="0x7fce22ee31b0"/>
        <function-ref name="localGroup" scoped="" ref="0x7fce22ee3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fce22ee35d0" loc="52:/opt/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fce22ee35d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fce22ee3950"/>
        <function-ref name="noAck" scoped="" ref="0x7fce22ee3ae0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fce22ee3c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fce22b7b390" loc="44:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fce22b7b390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fce22b7b710"/>
        <function-ref name="getPayload" scoped="" ref="0x7fce22b7b8a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fce22b7ba30"/>
        <function-ref name="cancel" scoped="" ref="0x7fce22b7bbc0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fce22b7bd50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7fce22b7a060" loc="46:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fce22b7a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fce22b7a3e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fce22b7a570"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fce22b7a700"/>
        <function-ref name="cancel" scoped="" ref="0x7fce22b7a890"/>
        <function-ref name="sendDone" scoped="" ref="0x7fce22b7aa20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fce22b7ac70" loc="47:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fce22b7ac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fce22b79020"/>
        <function-ref name="source" scoped="" ref="0x7fce22b791b0"/>
        <function-ref name="address" scoped="" ref="0x7fce22b79340"/>
        <function-ref name="destination" scoped="" ref="0x7fce22b794d0"/>
        <function-ref name="setSource" scoped="" ref="0x7fce22b79660"/>
        <function-ref name="setDestination" scoped="" ref="0x7fce22b797f0"/>
        <function-ref name="type" scoped="" ref="0x7fce22b79980"/>
        <function-ref name="setType" scoped="" ref="0x7fce22b79b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7fce22b79ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fce22b79e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7fce22b78020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fce2364ccf0" loc="44:/opt/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fce2364ccf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fce236490a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fce23649230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fce236493c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fce23649550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fce236496e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fce235ff400" loc="48:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fce235ff400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fce23a86210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fce235ff7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fce235ff930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fce235ffac0"/>
        <function-ref name="cancel" scoped="" ref="0x7fce235ffc50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fce235ffde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fce23600580" loc="46:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fce23600580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fce23600920"/>
        <function-ref name="getPayload" scoped="" ref="0x7fce23600ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fce23600c40"/>
        <function-ref name="cancel" scoped="" ref="0x7fce23600dd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fce235ff020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fce235fc720" loc="50:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fce235fc720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fce235fcaa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fce235fcc30"/>
        <function-ref name="getPayload" scoped="" ref="0x7fce235fcdc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fce235fb020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fce235fb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7fce235fb480" loc="169:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7fce235fb480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fce235fb800"/>
        <function-ref name="runTask" scoped="" ref="0x7fce235fb990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7fce235fbc60" loc="126:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7fce235fbc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fce235fa020"/>
        <function-ref name="runTask" scoped="" ref="0x7fce235fa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fce235fd060" loc="49:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fce235fd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fce235fd3e0"/>
        <function-ref name="source" scoped="" ref="0x7fce235fd570"/>
        <function-ref name="address" scoped="" ref="0x7fce235fd700"/>
        <function-ref name="destination" scoped="" ref="0x7fce235fd890"/>
        <function-ref name="setSource" scoped="" ref="0x7fce235fda20"/>
        <function-ref name="setDestination" scoped="" ref="0x7fce235fdbb0"/>
        <function-ref name="type" scoped="" ref="0x7fce235fdd40"/>
        <function-ref name="setType" scoped="" ref="0x7fce235fc020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fce235fc1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fce235fc340"/>
        <function-ref name="localGroup" scoped="" ref="0x7fce235fc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fce235f03b0" loc="46:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fce235f03b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fce235f0730"/>
        <function-ref name="stopDone" scoped="" ref="0x7fce235f08c0"/>
        <function-ref name="start" scoped="" ref="0x7fce235f0a50"/>
        <function-ref name="stop" scoped="" ref="0x7fce235f0be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fce235f53f0" loc="47:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fce235f53f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fce23a86210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fce235f5770"/>
        <function-ref name="getPayload" scoped="" ref="0x7fce235f5900"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fce235f5a90"/>
        <function-ref name="cancel" scoped="" ref="0x7fce235f5c20"/>
        <function-ref name="sendDone" scoped="" ref="0x7fce235f5db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fce235ef7e0" loc="49:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fce235ef7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fce235efb60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fce235efcf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fce235efe80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fce235ee030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fce235ee1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fce235ef1d0" loc="48:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fce235ef1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fce23a86210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fce235ef550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fce235db330" loc="53:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fce235db330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fce235db6b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fce235db840"/>
        <function-ref name="led1On" scoped="" ref="0x7fce235db9d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fce235dbb60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fce235dbcf0"/>
        <function-ref name="get" scoped="" ref="0x7fce235dbe80"/>
        <function-ref name="led1Off" scoped="" ref="0x7fce235e7030"/>
        <function-ref name="led2Off" scoped="" ref="0x7fce235e7670"/>
        <function-ref name="set" scoped="" ref="0x7fce235e71c0"/>
        <function-ref name="led0On" scoped="" ref="0x7fce235e7350"/>
        <function-ref name="led2On" scoped="" ref="0x7fce235e74e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fce235e9b20" loc="51:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fce235e9b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fce235e8020"/>
        <function-ref name="noAck" scoped="" ref="0x7fce235e81b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fce235e8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fce235ee470" loc="50:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fce235ee470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fce235ee7f0"/>
        <function-ref name="source" scoped="" ref="0x7fce235ee980"/>
        <function-ref name="address" scoped="" ref="0x7fce235eeb10"/>
        <function-ref name="destination" scoped="" ref="0x7fce235eeca0"/>
        <function-ref name="setSource" scoped="" ref="0x7fce235eee30"/>
        <function-ref name="setDestination" scoped="" ref="0x7fce235e9020"/>
        <function-ref name="type" scoped="" ref="0x7fce235e91b0"/>
        <function-ref name="setType" scoped="" ref="0x7fce235e9340"/>
        <function-ref name="isForMe" scoped="" ref="0x7fce235e94d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fce235e9660"/>
        <function-ref name="localGroup" scoped="" ref="0x7fce235e97f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fce235824a0" loc="54:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fce235824a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fce23582820"/>
        <function-ref name="getPayload" scoped="" ref="0x7fce235829b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fce23582b40"/>
        <function-ref name="cancel" scoped="" ref="0x7fce23582cd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fce23582e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fce23581120" loc="55:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fce23581120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fce235814a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fce235da300" loc="47:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fce235da300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fce23a86210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fce235da6a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fce235da830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fce235da9c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fce235dab50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fce235dace0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fce23584d60" loc="50:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fce23584d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fce23583180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fce23583310"/>
        <function-ref name="getPayload" scoped="" ref="0x7fce235834a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fce23583630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fce235837c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fce235850d0" loc="48:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fce235850d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fce23a86210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fce23585470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fce23583a10" loc="51:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fce23583a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fce23583d90"/>
        <function-ref name="noAck" scoped="" ref="0x7fce23582020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fce235821b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fce235856c0" loc="49:/opt/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fce235856c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fce23585a40"/>
        <function-ref name="source" scoped="" ref="0x7fce23585bd0"/>
        <function-ref name="address" scoped="" ref="0x7fce23585d60"/>
        <function-ref name="destination" scoped="" ref="0x7fce23584020"/>
        <function-ref name="setSource" scoped="" ref="0x7fce235841b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fce23584340"/>
        <function-ref name="type" scoped="" ref="0x7fce235844d0"/>
        <function-ref name="setType" scoped="" ref="0x7fce23584660"/>
        <function-ref name="isForMe" scoped="" ref="0x7fce235847f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fce23584980"/>
        <function-ref name="localGroup" scoped="" ref="0x7fce23584b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fce2357fba0" loc="50:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fce2357fba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fce2357c020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fce2357c1b0"/>
        <function-ref name="start" scoped="" ref="0x7fce2357c340"/>
        <function-ref name="stop" scoped="" ref="0x7fce2357c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fce2357b790" loc="52:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fce2357b790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fce23a85d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fce2357bb10"/>
        <function-ref name="getPayload" scoped="" ref="0x7fce2357bca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fce2357be30"/>
        <function-ref name="cancel" scoped="" ref="0x7fce2357a020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fce2357a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fce2357f550" loc="49:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fce2357f550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fce2357f8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fce2357cc60" loc="51:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fce2357cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fce23a85d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fce2357b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fce235782b0" loc="56:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fce235782b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fce23578630"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fce235787c0"/>
        <function-ref name="led1On" scoped="" ref="0x7fce23578950"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fce23578ae0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fce23578c70"/>
        <function-ref name="get" scoped="" ref="0x7fce23578e00"/>
        <function-ref name="led1Off" scoped="" ref="0x7fce23573020"/>
        <function-ref name="led2Off" scoped="" ref="0x7fce23573660"/>
        <function-ref name="set" scoped="" ref="0x7fce235731b0"/>
        <function-ref name="led0On" scoped="" ref="0x7fce23573340"/>
        <function-ref name="led2On" scoped="" ref="0x7fce235734d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7fce23574970" loc="55:/opt/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7fce23574970"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fce23a85d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7fce23574cf0"/>
        <function-ref name="offset" scoped="" ref="0x7fce23574e80"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7fce23578030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fce2356cc40" loc="66:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fce2356cc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fce2356b020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fce2356b1b0"/>
        <function-ref name="start" scoped="" ref="0x7fce2356b340"/>
        <function-ref name="stop" scoped="" ref="0x7fce2356b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7fce23505e40" loc="332:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7fce23505e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fce235041e0"/>
        <function-ref name="runTask" scoped="" ref="0x7fce23504370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7fce23557530" loc="74:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7fce23557530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fce235578b0"/>
        <function-ref name="stop" scoped="" ref="0x7fce23557a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7fce2353cd50" loc="191:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7fce2353cd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fce2353b100"/>
        <function-ref name="runTask" scoped="" ref="0x7fce2353b290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fce2356c5f0" loc="65:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fce2356c5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fce2356c970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7fce23554130" loc="75:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7fce23554130"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7fce235544b0"/>
        <function-ref name="flush" scoped="" ref="0x7fce23554640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7fce23507400" loc="322:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7fce23507400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fce23507780"/>
        <function-ref name="runTask" scoped="" ref="0x7fce23507910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7fce2355b410" loc="72:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7fce2355b410"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7fce2355b790"/>
        <function-ref name="resetSend" scoped="" ref="0x7fce2355b920"/>
        <function-ref name="dataReceived" scoped="" ref="0x7fce2355bab0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7fce2355bc40"/>
        <function-ref name="putData" scoped="" ref="0x7fce2355bdd0"/>
        <function-ref name="putDone" scoped="" ref="0x7fce23565020"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7fce235651b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fce23565430" loc="73:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fce23565430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fce235657b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fce23565940"/>
        <function-ref name="led1On" scoped="" ref="0x7fce23565ad0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fce23565c60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fce23565df0"/>
        <function-ref name="get" scoped="" ref="0x7fce23561020"/>
        <function-ref name="led1Off" scoped="" ref="0x7fce235611b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fce235617f0"/>
        <function-ref name="set" scoped="" ref="0x7fce23561340"/>
        <function-ref name="led0On" scoped="" ref="0x7fce235614d0"/>
        <function-ref name="led2On" scoped="" ref="0x7fce23561660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7fce235000c0" loc="341:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7fce235000c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fce23500440"/>
        <function-ref name="runTask" scoped="" ref="0x7fce235005d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7fce23566a40" loc="67:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7fce23566a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7fce23566dc0"/>
        <function-ref name="nextByte" scoped="" ref="0x7fce2356a020"/>
        <function-ref name="startSend" scoped="" ref="0x7fce2356a1b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7fce2356a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7fce23569080" loc="68:/opt/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fce23569080"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7fce23569400"/>
        <function-ref name="byteReceived" scoped="" ref="0x7fce23569590"/>
        <function-ref name="endPacket" scoped="" ref="0x7fce23569720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7fce23436c50" loc="275:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7fce23436c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fce23435020"/>
        <function-ref name="runTask" scoped="" ref="0x7fce234351b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fce2343b830" loc="51:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fce2343b830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fce23a85d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fce2343bbd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fce2343bd60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fce2343a020"/>
        <function-ref name="cancel" scoped="" ref="0x7fce2343a1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fce2343a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7fce23435480" loc="158:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7fce23435480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fce23435800"/>
        <function-ref name="runTask" scoped="" ref="0x7fce23435990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fce2343b110" loc="50:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fce2343b110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fce23a85d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fce2343b4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7fce2343a760" loc="54:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7fce2343a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fce23a85d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7fce2343ab00"/>
        <function-ref name="offset" scoped="" ref="0x7fce2343ac90"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7fce2343ae20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fce23437590" loc="57:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fce23437590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fce23437910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fce23437aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7fce23437c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fce23437dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fce23436020"/>
        <function-ref name="get" scoped="" ref="0x7fce234361b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fce23436340"/>
        <function-ref name="led2On" scoped="" ref="0x7fce23436980"/>
        <function-ref name="set" scoped="" ref="0x7fce23436660"/>
        <function-ref name="led2Off" scoped="" ref="0x7fce234364d0"/>
        <function-ref name="led0On" scoped="" ref="0x7fce234367f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7fce234399d0" loc="56:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7fce234399d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7fce23439d50"/>
        <function-ref name="nextByte" scoped="" ref="0x7fce23437020"/>
        <function-ref name="startSend" scoped="" ref="0x7fce234371b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7fce23437340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7fce234390e0" loc="55:/opt/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fce234390e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7fce23439460"/>
        <function-ref name="byteReceived" scoped="" ref="0x7fce234395f0"/>
        <function-ref name="endPacket" scoped="" ref="0x7fce23439780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7fce23426d20" loc="50:/opt/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fce23426d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fce2342f0e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fce2342f270"/>
        <function-ref name="receive" scoped="" ref="0x7fce2342f400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fce2342f590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fce2342f720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fce2342f8b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fce2342fa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7fce23433b70" loc="48:/opt/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7fce23433b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7fce23430020"/>
        <function-ref name="resetSend" scoped="" ref="0x7fce234301b0"/>
        <function-ref name="dataReceived" scoped="" ref="0x7fce23430340"/>
        <function-ref name="resetReceive" scoped="" ref="0x7fce234304d0"/>
        <function-ref name="putData" scoped="" ref="0x7fce23430660"/>
        <function-ref name="putDone" scoped="" ref="0x7fce234307f0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7fce23430980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fce2342fcc0" loc="51:/opt/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fce2342fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fce2342e0a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fce2342e230"/>
        <function-ref name="led1On" scoped="" ref="0x7fce2342e3c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fce2342e550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fce2342e6e0"/>
        <function-ref name="get" scoped="" ref="0x7fce2342e870"/>
        <function-ref name="led1Off" scoped="" ref="0x7fce2342ea00"/>
        <function-ref name="led2Off" scoped="" ref="0x7fce234231b0"/>
        <function-ref name="set" scoped="" ref="0x7fce2342eb90"/>
        <function-ref name="led0On" scoped="" ref="0x7fce2342ed20"/>
        <function-ref name="led2On" scoped="" ref="0x7fce23423020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fce23404d50" loc="6:/opt/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fce23404d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fce23407100"/>
        <function-ref name="receive" scoped="" ref="0x7fce23407290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fce23409890" loc="5:/opt/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fce23409890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fce23409c10"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fce23409da0"/>
        <function-ref name="receive" scoped="" ref="0x7fce23408020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fce234081b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fce23408340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fce234084d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fce23408660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fce23409080" loc="4:/opt/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fce23409080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fce23409400"/>
        <function-ref name="stop" scoped="" ref="0x7fce23409590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fce22f178f0" loc="45:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fce22f178f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fce22f17c70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fce22f17e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fce22f14060" loc="47:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fce22f14060"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fce22f143e0"/>
        <function-ref name="receive" scoped="" ref="0x7fce22f14570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7fce22f14800" loc="49:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fce22f14800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fce22f14b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fce22f150c0" loc="46:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fce22f150c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fce22f15440"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fce22f155d0"/>
        <function-ref name="receive" scoped="" ref="0x7fce22f15760"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fce22f158f0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fce22f15a80"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fce22f15c10"/>
        <function-ref name="sendDone" scoped="" ref="0x7fce22f15da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fce22f18c00" loc="44:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fce22f18c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fce22f17020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fce22f171b0"/>
        <function-ref name="request" scoped="" ref="0x7fce22f17340"/>
        <function-ref name="granted" scoped="" ref="0x7fce22f174d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fce22f17660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fce233a1450" loc="42:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fce233a1450"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fce233a17d0"/>
        <function-ref name="configure" scoped="" ref="0x7fce233a1960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fce2339e850" loc="44:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fce2339e850"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fce2339ebd0"/>
        <function-ref name="receive" scoped="" ref="0x7fce2339ed60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7fce2339ba40" loc="47:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fce2339ba40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fce2339bdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fce233a01d0" loc="43:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fce233a01d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fce233a0550"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fce233a06e0"/>
        <function-ref name="receive" scoped="" ref="0x7fce233a0870"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fce233a0a00"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fce233a0b90"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fce233a0d20"/>
        <function-ref name="sendDone" scoped="" ref="0x7fce2339e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fce2339c690" loc="46:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fce2339c690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fce2339ca10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fce2339cba0"/>
        <function-ref name="request" scoped="" ref="0x7fce2339cd30"/>
        <function-ref name="granted" scoped="" ref="0x7fce2339b020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fce2339b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fce233a78d0" loc="41:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fce233a78d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fce233a7c50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fce233a7de0"/>
        <function-ref name="request" scoped="" ref="0x7fce233a3020"/>
        <function-ref name="granted" scoped="" ref="0x7fce233a31b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fce233a3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fce23399020" loc="48:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fce23399020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fce233993a0"/>
        <function-ref name="txDone" scoped="" ref="0x7fce23399530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fce23317dc0" loc="44:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fce23317dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fce23316180"/>
        <function-ref name="configure" scoped="" ref="0x7fce23316310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fce23315890" loc="46:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fce23315890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fce23315c30"/>
        <function-ref name="receive" scoped="" ref="0x7fce23315dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7fce23313020" loc="49:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fce23313020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fce233133c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7fce23313690" loc="50:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fce23313690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fce23313a10"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fce23313ba0"/>
        <function-ref name="setUctl" scoped="" ref="0x7fce23313d30"/>
        <function-ref name="enableUart" scoped="" ref="0x7fce23311020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fce233111b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fce23311340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fce233114d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fce23311660"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fce233117f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fce23311980"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fce23311b10"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fce23311ca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fce23311e30"/>
        <function-ref name="getUbr" scoped="" ref="0x7fce23310120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fce233102b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fce23310440"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fce233105d0"/>
        <function-ref name="isUart" scoped="" ref="0x7fce23310760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fce233108f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fce23310a80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fce23310c10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fce23310da0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fce2330f020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fce2330f1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fce2330f340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fce2330f6d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fce2330f860"/>
        <function-ref name="setUbr" scoped="" ref="0x7fce2330f9f0"/>
        <function-ref name="tx" scoped="" ref="0x7fce2330fb80"/>
        <function-ref name="getUctl" scoped="" ref="0x7fce2330fd10"/>
        <function-ref name="disableUart" scoped="" ref="0x7fce2330e020"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fce2330e1b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fce2330e340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fce2330e4d0"/>
        <function-ref name="rx" scoped="" ref="0x7fce2330e660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fce2330e7f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fce2330e980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fce2330eb10"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fce2330eca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fce2330ee30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fce233166d0" loc="45:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fce233166d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fce23316a70"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fce23316c00"/>
        <function-ref name="receive" scoped="" ref="0x7fce23316d90"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fce23315020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fce233151b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fce23315340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fce233154d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fce2330dc90" loc="52:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fce2330dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fce23895640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fce238959b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fce2330cac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce2330b4e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce2330b020"/>
        <function-ref name="overflow" scoped="" ref="0x7fce2330b9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fce23314230" loc="48:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fce23314230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fce233145d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fce23314760"/>
        <function-ref name="request" scoped="" ref="0x7fce233148f0"/>
        <function-ref name="granted" scoped="" ref="0x7fce23314a80"/>
        <function-ref name="isOwner" scoped="" ref="0x7fce23314c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fce23317020" loc="43:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fce23317020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fce233173c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fce23317550"/>
        <function-ref name="request" scoped="" ref="0x7fce233176e0"/>
        <function-ref name="granted" scoped="" ref="0x7fce23317870"/>
        <function-ref name="isOwner" scoped="" ref="0x7fce23317a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fce2330d290" loc="51:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fce2330d290"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fce2330d630"/>
        <function-ref name="txDone" scoped="" ref="0x7fce2330d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fce2330bdd0" loc="53:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fce2330bdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fce2330a180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fce2330a310"/>
        <function-ref name="led1On" scoped="" ref="0x7fce2330a4a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fce2330a630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fce2330a7c0"/>
        <function-ref name="get" scoped="" ref="0x7fce2330a950"/>
        <function-ref name="led1Off" scoped="" ref="0x7fce2330aae0"/>
        <function-ref name="led2On" scoped="" ref="0x7fce233091b0"/>
        <function-ref name="set" scoped="" ref="0x7fce2330ae00"/>
        <function-ref name="led2Off" scoped="" ref="0x7fce2330ac70"/>
        <function-ref name="led0On" scoped="" ref="0x7fce23309020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fce232fa3b0" loc="78:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fce232fa3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fce232fa730"/>
        <function-ref name="txDone" scoped="" ref="0x7fce232fa8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fce23301080" loc="76:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fce23301080"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fce23301400"/>
        <function-ref name="stop" scoped="" ref="0x7fce23301590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fce233018b0" loc="77:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fce233018b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fce23301c30"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fce23301dc0"/>
        <function-ref name="setUctl" scoped="" ref="0x7fce23300020"/>
        <function-ref name="enableUart" scoped="" ref="0x7fce233001b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fce23300340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fce233004d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fce23300660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fce233007f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fce23300980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fce23300b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fce23300ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fce23300e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fce232fd020"/>
        <function-ref name="getUbr" scoped="" ref="0x7fce232fd2b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fce232fd440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fce232fd5d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fce232fd760"/>
        <function-ref name="isUart" scoped="" ref="0x7fce232fd8f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fce232fda80"/>
        <function-ref name="isSpi" scoped="" ref="0x7fce232fdc10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fce232fdda0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fce232fc020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fce232fc1b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fce232fc340"/>
        <function-ref name="getMode" scoped="" ref="0x7fce232fc4d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fce232fc860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fce232fc9f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fce232fcb80"/>
        <function-ref name="tx" scoped="" ref="0x7fce232fcd10"/>
        <function-ref name="getUctl" scoped="" ref="0x7fce232fb020"/>
        <function-ref name="disableUart" scoped="" ref="0x7fce232fb1b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fce232fb340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fce232fb4d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fce232fb660"/>
        <function-ref name="rx" scoped="" ref="0x7fce232fb7f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fce232fb980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fce232fbb10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fce232fbca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fce232fbe30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fce232fa020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fce232e3800" loc="80:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fce232e3800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce232e3b80"/>
        <function-ref name="isInput" scoped="" ref="0x7fce232e3d10"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce232e2020"/>
        <function-ref name="toggle" scoped="" ref="0x7fce232e21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce232e2340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce232e24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce232e2660"/>
        <function-ref name="get" scoped="" ref="0x7fce232e27f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce232e2980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce232e2b10"/>
        <function-ref name="set" scoped="" ref="0x7fce232e2ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce232e2e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce232e1020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce232e12b0"/>
        <function-ref name="clr" scoped="" ref="0x7fce232e1440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fce232f2dc0" loc="76:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fce232f2dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fce232f1180"/>
        <function-ref name="txDone" scoped="" ref="0x7fce232f1310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7fce232e1800" loc="81:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7fce232e1800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce232e1b80"/>
        <function-ref name="isInput" scoped="" ref="0x7fce232e1d10"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce232e0020"/>
        <function-ref name="toggle" scoped="" ref="0x7fce232e01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce232e0340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce232e04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce232e0660"/>
        <function-ref name="get" scoped="" ref="0x7fce232e07f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce232e0980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce232e0b10"/>
        <function-ref name="set" scoped="" ref="0x7fce232e0ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce232e0e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce232df020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce232df2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fce232df440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7fce232df800" loc="82:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7fce232df800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce232dfb80"/>
        <function-ref name="isInput" scoped="" ref="0x7fce232dfd10"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce232de020"/>
        <function-ref name="toggle" scoped="" ref="0x7fce232de1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce232de340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce232de4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce232de660"/>
        <function-ref name="get" scoped="" ref="0x7fce232de7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce232de980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce232deb10"/>
        <function-ref name="set" scoped="" ref="0x7fce232deca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce232dee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce232dd020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce232dd2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fce232dd440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7fce232f6020" loc="75:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fce232f6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fce232f63a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fce232f6530"/>
        <function-ref name="setUctl" scoped="" ref="0x7fce232f66c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fce232f6850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fce232f69e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fce232f6b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fce232f6d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fce232f5020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fce232f51b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fce232f5340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fce232f54d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fce232f5660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fce232f57f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fce232f5a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fce232f5c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fce232f5da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fce232f4020"/>
        <function-ref name="isUart" scoped="" ref="0x7fce232f41b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fce232f4340"/>
        <function-ref name="isSpi" scoped="" ref="0x7fce232f44d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fce232f4660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fce232f47f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fce232f4980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fce232f4b10"/>
        <function-ref name="getMode" scoped="" ref="0x7fce232f4ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fce232f3220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fce232f33b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fce232f3540"/>
        <function-ref name="tx" scoped="" ref="0x7fce232f36d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fce232f3860"/>
        <function-ref name="disableUart" scoped="" ref="0x7fce232f39f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fce232f3b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fce232f3d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fce232f2020"/>
        <function-ref name="rx" scoped="" ref="0x7fce232f21b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fce232f2340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fce232f24d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fce232f2660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fce232f27f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fce232f2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fce232f9710" loc="74:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fce232f9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fce232f9a90"/>
        <function-ref name="stop" scoped="" ref="0x7fce232f9c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7fce232ef800" loc="79:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7fce232ef800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce232efb80"/>
        <function-ref name="isInput" scoped="" ref="0x7fce232efd10"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce232e4020"/>
        <function-ref name="toggle" scoped="" ref="0x7fce232e41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce232e4340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce232e44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce232e4660"/>
        <function-ref name="get" scoped="" ref="0x7fce232e47f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce232e4980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce232e4b10"/>
        <function-ref name="set" scoped="" ref="0x7fce232e4ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce232e4e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce232e3020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce232e32b0"/>
        <function-ref name="clr" scoped="" ref="0x7fce232e3440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fce232e5860" loc="78:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fce232e5860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce232e5be0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce232e5d70"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce232f0020"/>
        <function-ref name="toggle" scoped="" ref="0x7fce232f01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce232f0340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce232f04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce232f0660"/>
        <function-ref name="get" scoped="" ref="0x7fce232f07f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce232f0980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce232f0b10"/>
        <function-ref name="set" scoped="" ref="0x7fce232f0ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce232f0e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce232ef020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce232ef2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fce232ef440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fce23264cc0" loc="53:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fce23264cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce232630a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23263230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce232633c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23263550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce232636e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23263870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23263a00"/>
        <function-ref name="get" scoped="" ref="0x7fce23263b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce23263d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23262020"/>
        <function-ref name="set" scoped="" ref="0x7fce232621b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23262340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce232624d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23262760"/>
        <function-ref name="clr" scoped="" ref="0x7fce232628f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fce2324fcc0" loc="66:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fce2324fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce2324e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce2324e230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce2324e3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce2324e550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce2324e6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce2324e870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce2324ea00"/>
        <function-ref name="get" scoped="" ref="0x7fce2324eb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce2324ed20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce2324d020"/>
        <function-ref name="set" scoped="" ref="0x7fce2324d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce2324d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce2324d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce2324d760"/>
        <function-ref name="clr" scoped="" ref="0x7fce2324d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7fce232053d0" loc="145:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7fce232053d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce23205750"/>
        <function-ref name="isInput" scoped="" ref="0x7fce232058e0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce23205a70"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23205c00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce23205d90"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23204020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce232041b0"/>
        <function-ref name="get" scoped="" ref="0x7fce23204340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce232044d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23204660"/>
        <function-ref name="set" scoped="" ref="0x7fce232047f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23204980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce23204b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23204da0"/>
        <function-ref name="clr" scoped="" ref="0x7fce23203020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7fce231e03e0" loc="165:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7fce231e03e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce231e0760"/>
        <function-ref name="isInput" scoped="" ref="0x7fce231e08f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce231e0a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fce231e0c10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce231e0da0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce231df020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce231df1b0"/>
        <function-ref name="get" scoped="" ref="0x7fce231df340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce231df4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce231df660"/>
        <function-ref name="set" scoped="" ref="0x7fce231df7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce231df980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce231dfb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce231dfda0"/>
        <function-ref name="clr" scoped="" ref="0x7fce231de020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7fce232033f0" loc="146:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7fce232033f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce23203770"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23203900"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce23203a90"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23203c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce23203db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23202020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce232021b0"/>
        <function-ref name="get" scoped="" ref="0x7fce23202340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce232024d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23202660"/>
        <function-ref name="set" scoped="" ref="0x7fce232027f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23202980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce23202b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23202da0"/>
        <function-ref name="clr" scoped="" ref="0x7fce23201020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7fce2324bcc0" loc="71:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7fce2324bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce2324a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce2324a230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce2324a3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce2324a550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce2324a6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce2324a870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce2324aa00"/>
        <function-ref name="get" scoped="" ref="0x7fce2324ab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce2324ad20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23249020"/>
        <function-ref name="set" scoped="" ref="0x7fce232491b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23249340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce232494d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23249760"/>
        <function-ref name="clr" scoped="" ref="0x7fce232498f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7fce23236020" loc="84:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7fce23236020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce232363a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23236530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce232366c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23236850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce232369e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23236b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23236d00"/>
        <function-ref name="get" scoped="" ref="0x7fce23235020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce232351b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23235340"/>
        <function-ref name="set" scoped="" ref="0x7fce232354d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23235660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce232357f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23235a80"/>
        <function-ref name="clr" scoped="" ref="0x7fce23235c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7fce23221020" loc="97:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7fce23221020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce232213a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23221530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce232216c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23221850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce232219e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23221b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23221d00"/>
        <function-ref name="get" scoped="" ref="0x7fce23220020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce232201b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23220340"/>
        <function-ref name="set" scoped="" ref="0x7fce232204d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23220660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce232207f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23220a80"/>
        <function-ref name="clr" scoped="" ref="0x7fce23220c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7fce23211020" loc="108:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7fce23211020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce232113a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23211530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce232116c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23211850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce232119e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23211b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23211d00"/>
        <function-ref name="get" scoped="" ref="0x7fce23210020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce232101b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23210340"/>
        <function-ref name="set" scoped="" ref="0x7fce232104d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23210660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce232107f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23210a80"/>
        <function-ref name="clr" scoped="" ref="0x7fce23210c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7fce231fd3f0" loc="149:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7fce231fd3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce231fd770"/>
        <function-ref name="isInput" scoped="" ref="0x7fce231fd900"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce231fda90"/>
        <function-ref name="toggle" scoped="" ref="0x7fce231fdc20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce231fddb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce231fc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce231fc1b0"/>
        <function-ref name="get" scoped="" ref="0x7fce231fc340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce231fc4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce231fc660"/>
        <function-ref name="set" scoped="" ref="0x7fce231fc7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce231fc980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce231fcb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce231fcda0"/>
        <function-ref name="clr" scoped="" ref="0x7fce231fb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7fce231ec3e0" loc="159:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7fce231ec3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce231ec760"/>
        <function-ref name="isInput" scoped="" ref="0x7fce231ec8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce231eca80"/>
        <function-ref name="toggle" scoped="" ref="0x7fce231ecc10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce231ecda0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce231eb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce231eb1b0"/>
        <function-ref name="get" scoped="" ref="0x7fce231eb340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce231eb4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce231eb660"/>
        <function-ref name="set" scoped="" ref="0x7fce231eb7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce231eb980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce231ebb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce231ebda0"/>
        <function-ref name="clr" scoped="" ref="0x7fce231ea020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7fce231d83f0" loc="171:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7fce231d83f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce231d8770"/>
        <function-ref name="isInput" scoped="" ref="0x7fce231d8900"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce231d8a90"/>
        <function-ref name="toggle" scoped="" ref="0x7fce231d8c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce231d8db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce231d7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce231d71b0"/>
        <function-ref name="get" scoped="" ref="0x7fce231d7340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce231d74d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce231d7660"/>
        <function-ref name="set" scoped="" ref="0x7fce231d77f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce231d7980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce231d7b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce231d7da0"/>
        <function-ref name="clr" scoped="" ref="0x7fce231d6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fce2325ecc0" loc="56:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fce2325ecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce2325d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce2325d230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce2325d3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce2325d550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce2325d6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce2325d870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce2325da00"/>
        <function-ref name="get" scoped="" ref="0x7fce2325db90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce2325dd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce2325c020"/>
        <function-ref name="set" scoped="" ref="0x7fce2325c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce2325c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce2325c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce2325c760"/>
        <function-ref name="clr" scoped="" ref="0x7fce2325c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7fce231fb3f0" loc="150:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7fce231fb3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce231fb770"/>
        <function-ref name="isInput" scoped="" ref="0x7fce231fb900"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce231fba90"/>
        <function-ref name="toggle" scoped="" ref="0x7fce231fbc20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce231fbdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce231f9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce231f91b0"/>
        <function-ref name="get" scoped="" ref="0x7fce231f9340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce231f94d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce231f9660"/>
        <function-ref name="set" scoped="" ref="0x7fce231f97f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce231f9980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce231f9b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce231f9da0"/>
        <function-ref name="clr" scoped="" ref="0x7fce231f8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fce2325acc0" loc="61:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fce2325acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce232580a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23258230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce232583c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23258550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce232586e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23258870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23258a00"/>
        <function-ref name="get" scoped="" ref="0x7fce23258b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce23258d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23257020"/>
        <function-ref name="set" scoped="" ref="0x7fce232571b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23257340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce232574d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23257760"/>
        <function-ref name="clr" scoped="" ref="0x7fce232578f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7fce23245cc0" loc="74:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7fce23245cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce232440a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23244230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce232443c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23244550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce232446e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23244870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23244a00"/>
        <function-ref name="get" scoped="" ref="0x7fce23244b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce23244d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23243020"/>
        <function-ref name="set" scoped="" ref="0x7fce232431b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23243340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce232434d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23243760"/>
        <function-ref name="clr" scoped="" ref="0x7fce232438f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7fce23230020" loc="87:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7fce23230020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce232303a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23230530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce232306c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23230850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce232309e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23230b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23230d00"/>
        <function-ref name="get" scoped="" ref="0x7fce2322f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce2322f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce2322f340"/>
        <function-ref name="set" scoped="" ref="0x7fce2322f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce2322f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce2322f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce2322fa80"/>
        <function-ref name="clr" scoped="" ref="0x7fce2322fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7fce2321b020" loc="100:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7fce2321b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce2321b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce2321b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce2321b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce2321b850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce2321b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce2321bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce2321bd00"/>
        <function-ref name="get" scoped="" ref="0x7fce2321a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce2321a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce2321a340"/>
        <function-ref name="set" scoped="" ref="0x7fce2321a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce2321a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce2321a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce2321aa80"/>
        <function-ref name="clr" scoped="" ref="0x7fce2321ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7fce2320b020" loc="111:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7fce2320b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce2320b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce2320b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce2320b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce2320b850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce2320b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce2320bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce2320bd00"/>
        <function-ref name="get" scoped="" ref="0x7fce2320a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce2320a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce2320a340"/>
        <function-ref name="set" scoped="" ref="0x7fce2320a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce2320a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce2320a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce2320aa80"/>
        <function-ref name="clr" scoped="" ref="0x7fce2320ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fce23268cc0" loc="51:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fce23268cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce232670a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23267230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce232673c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23267550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce232676e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23267870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23267a00"/>
        <function-ref name="get" scoped="" ref="0x7fce23267b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce23267d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23266020"/>
        <function-ref name="set" scoped="" ref="0x7fce232661b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23266340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce232664d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23266760"/>
        <function-ref name="clr" scoped="" ref="0x7fce232668f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fce23253cc0" loc="64:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fce23253cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce23252180"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23252310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce232524a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23252630"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce232527c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23252950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23252ae0"/>
        <function-ref name="get" scoped="" ref="0x7fce23252c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce23252e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23251020"/>
        <function-ref name="set" scoped="" ref="0x7fce232511b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23251340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce232514d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23251760"/>
        <function-ref name="clr" scoped="" ref="0x7fce232518f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7fce2323fcc0" loc="77:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7fce2323fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce2323e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce2323e230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce2323e3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce2323e550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce2323e6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce2323e870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce2323ea00"/>
        <function-ref name="get" scoped="" ref="0x7fce2323eb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce2323ed20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce2323d020"/>
        <function-ref name="set" scoped="" ref="0x7fce2323d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce2323d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce2323d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce2323d760"/>
        <function-ref name="clr" scoped="" ref="0x7fce2323d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7fce232073f0" loc="144:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7fce232073f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce23207770"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23207900"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce23207a90"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23207c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce23207db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23206020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce232061b0"/>
        <function-ref name="get" scoped="" ref="0x7fce23206340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce232064d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23206660"/>
        <function-ref name="set" scoped="" ref="0x7fce232067f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23206980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce23206b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23206da0"/>
        <function-ref name="clr" scoped="" ref="0x7fce23205020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7fce231e63e0" loc="162:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7fce231e63e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce231e6760"/>
        <function-ref name="isInput" scoped="" ref="0x7fce231e68f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce231e6a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fce231e6c10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce231e6da0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce231e5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce231e51b0"/>
        <function-ref name="get" scoped="" ref="0x7fce231e5340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce231e54d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce231e5660"/>
        <function-ref name="set" scoped="" ref="0x7fce231e57f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce231e5980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce231e5b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce231e5da0"/>
        <function-ref name="clr" scoped="" ref="0x7fce231e4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7fce231da3e0" loc="169:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7fce231da3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce231da760"/>
        <function-ref name="isInput" scoped="" ref="0x7fce231da8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce231daa80"/>
        <function-ref name="toggle" scoped="" ref="0x7fce231dac10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce231dada0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce231d9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce231d91b0"/>
        <function-ref name="get" scoped="" ref="0x7fce231d9340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce231d94d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce231d9660"/>
        <function-ref name="set" scoped="" ref="0x7fce231d97f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce231d9980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce231d9b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce231d9da0"/>
        <function-ref name="clr" scoped="" ref="0x7fce231d8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7fce231f23f0" loc="155:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7fce231f23f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce231f2770"/>
        <function-ref name="isInput" scoped="" ref="0x7fce231f2900"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce231f2a90"/>
        <function-ref name="toggle" scoped="" ref="0x7fce231f2c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce231f2db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce231f1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce231f11b0"/>
        <function-ref name="get" scoped="" ref="0x7fce231f1340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce231f14d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce231f1660"/>
        <function-ref name="set" scoped="" ref="0x7fce231f17f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce231f1980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce231f1b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce231f1da0"/>
        <function-ref name="clr" scoped="" ref="0x7fce231f0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7fce2323bcc0" loc="82:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7fce2323bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce2323a410"/>
        <function-ref name="isInput" scoped="" ref="0x7fce2323a5a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce2323a730"/>
        <function-ref name="toggle" scoped="" ref="0x7fce2323a8c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce2323aa50"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce2323abe0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce2323ad70"/>
        <function-ref name="get" scoped="" ref="0x7fce23239020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce232391b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23239340"/>
        <function-ref name="set" scoped="" ref="0x7fce232394d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23239660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce232397f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23239a80"/>
        <function-ref name="clr" scoped="" ref="0x7fce23239c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7fce23225020" loc="95:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7fce23225020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce232253a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23225530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce232256c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23225850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce232259e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23225b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23225d00"/>
        <function-ref name="get" scoped="" ref="0x7fce23224020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce232241b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23224340"/>
        <function-ref name="set" scoped="" ref="0x7fce232244d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23224660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce232247f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23224a80"/>
        <function-ref name="clr" scoped="" ref="0x7fce23224c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7fce23215020" loc="106:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7fce23215020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce232153a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23215530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce232156c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23215850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce232159e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23215b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23215d00"/>
        <function-ref name="get" scoped="" ref="0x7fce23214020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce232141b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23214340"/>
        <function-ref name="set" scoped="" ref="0x7fce232144d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23214660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce232147f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23214a80"/>
        <function-ref name="clr" scoped="" ref="0x7fce23214c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7fce231e43e0" loc="163:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7fce231e43e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce231e4760"/>
        <function-ref name="isInput" scoped="" ref="0x7fce231e48f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce231e4a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fce231e4c10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce231e4da0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce231e3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce231e31b0"/>
        <function-ref name="get" scoped="" ref="0x7fce231e3340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce231e34d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce231e3660"/>
        <function-ref name="set" scoped="" ref="0x7fce231e37f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce231e3980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce231e3b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce231e3da0"/>
        <function-ref name="clr" scoped="" ref="0x7fce231e2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7fce231f83e0" loc="152:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7fce231f83e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce231f8760"/>
        <function-ref name="isInput" scoped="" ref="0x7fce231f88f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce231f8a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fce231f8c10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce231f8da0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce231f7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce231f71b0"/>
        <function-ref name="get" scoped="" ref="0x7fce231f7340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce231f74d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce231f7660"/>
        <function-ref name="set" scoped="" ref="0x7fce231f77f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce231f7980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce231f7b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce231f7da0"/>
        <function-ref name="clr" scoped="" ref="0x7fce231f6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fce23262cc0" loc="54:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fce23262cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce232610a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23261230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce232613c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23261550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce232616e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23261870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23261a00"/>
        <function-ref name="get" scoped="" ref="0x7fce23261b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce23261d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23260020"/>
        <function-ref name="set" scoped="" ref="0x7fce232601b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23260340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce232604d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23260760"/>
        <function-ref name="clr" scoped="" ref="0x7fce232608f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fce2324dcc0" loc="67:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fce2324dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce2324c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce2324c230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce2324c3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce2324c550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce2324c6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce2324c870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce2324ca00"/>
        <function-ref name="get" scoped="" ref="0x7fce2324cb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce2324cd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce2324b020"/>
        <function-ref name="set" scoped="" ref="0x7fce2324b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce2324b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce2324b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce2324b760"/>
        <function-ref name="clr" scoped="" ref="0x7fce2324b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7fce23219020" loc="104:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7fce23219020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce232193a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23219530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce232196c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23219850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce232199e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23219b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23219d00"/>
        <function-ref name="get" scoped="" ref="0x7fce23218020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce232181b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23218340"/>
        <function-ref name="set" scoped="" ref="0x7fce232184d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23218660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce232187f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23218a80"/>
        <function-ref name="clr" scoped="" ref="0x7fce23218c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7fce23249cc0" loc="72:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7fce23249cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce232480a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23248230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce232483c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23248550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce232486e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23248870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23248a00"/>
        <function-ref name="get" scoped="" ref="0x7fce23248b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce23248d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23247020"/>
        <function-ref name="set" scoped="" ref="0x7fce232471b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23247340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce232474d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23247760"/>
        <function-ref name="clr" scoped="" ref="0x7fce232478f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7fce23234020" loc="85:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7fce23234020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce232343a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23234530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce232346c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23234850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce232349e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23234b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23234d00"/>
        <function-ref name="get" scoped="" ref="0x7fce23233020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce232331b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23233340"/>
        <function-ref name="set" scoped="" ref="0x7fce232334d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23233660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce232337f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23233a80"/>
        <function-ref name="clr" scoped="" ref="0x7fce23233c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7fce2321f020" loc="98:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7fce2321f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce2321f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce2321f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce2321f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce2321f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce2321f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce2321fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce2321fd00"/>
        <function-ref name="get" scoped="" ref="0x7fce2321e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce2321e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce2321e340"/>
        <function-ref name="set" scoped="" ref="0x7fce2321e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce2321e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce2321e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce2321ea80"/>
        <function-ref name="clr" scoped="" ref="0x7fce2321ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7fce2320f020" loc="109:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7fce2320f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce2320f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce2320f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce2320f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce2320f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce2320f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce2320fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce2320fd00"/>
        <function-ref name="get" scoped="" ref="0x7fce2320e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce2320e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce2320e340"/>
        <function-ref name="set" scoped="" ref="0x7fce2320e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce2320e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce2320e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce2320ea80"/>
        <function-ref name="clr" scoped="" ref="0x7fce2320ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7fce231f43f0" loc="154:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7fce231f43f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce231f4770"/>
        <function-ref name="isInput" scoped="" ref="0x7fce231f4900"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce231f4a90"/>
        <function-ref name="toggle" scoped="" ref="0x7fce231f4c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce231f4db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce231f3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce231f31b0"/>
        <function-ref name="get" scoped="" ref="0x7fce231f3340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce231f34d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce231f3660"/>
        <function-ref name="set" scoped="" ref="0x7fce231f37f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce231f3980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce231f3b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce231f3da0"/>
        <function-ref name="clr" scoped="" ref="0x7fce231f2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fce2326ee00" loc="49:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fce2326ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce2326b1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce2326b350"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce2326b4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce2326b670"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce2326b800"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce2326b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce2326bb20"/>
        <function-ref name="get" scoped="" ref="0x7fce2326bcb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce2326be40"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce2326a020"/>
        <function-ref name="set" scoped="" ref="0x7fce2326a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce2326a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce2326a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce2326a760"/>
        <function-ref name="clr" scoped="" ref="0x7fce2326a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fce23257cc0" loc="62:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fce23257cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce232560a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23256230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce232563c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23256550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce232566e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23256870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23256a00"/>
        <function-ref name="get" scoped="" ref="0x7fce23256b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce23256d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23255020"/>
        <function-ref name="set" scoped="" ref="0x7fce232551b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23255340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce232554d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23255760"/>
        <function-ref name="clr" scoped="" ref="0x7fce232558f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7fce23243cc0" loc="75:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7fce23243cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce232420a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23242230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce232423c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23242550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce232426e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23242870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23242a00"/>
        <function-ref name="get" scoped="" ref="0x7fce23242b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce23242d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23241020"/>
        <function-ref name="set" scoped="" ref="0x7fce232411b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23241340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce232414d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23241760"/>
        <function-ref name="clr" scoped="" ref="0x7fce232418f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7fce2322e020" loc="88:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7fce2322e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce2322e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce2322e530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce2322e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce2322e850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce2322e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce2322eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce2322ed00"/>
        <function-ref name="get" scoped="" ref="0x7fce2322d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce2322d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce2322d340"/>
        <function-ref name="set" scoped="" ref="0x7fce2322d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce2322d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce2322d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce2322da80"/>
        <function-ref name="clr" scoped="" ref="0x7fce2322dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7fce231f03f0" loc="156:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7fce231f03f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce231f0770"/>
        <function-ref name="isInput" scoped="" ref="0x7fce231f0900"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce231f0a90"/>
        <function-ref name="toggle" scoped="" ref="0x7fce231f0c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce231f0db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce231ef020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce231ef1b0"/>
        <function-ref name="get" scoped="" ref="0x7fce231ef340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce231ef4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce231ef660"/>
        <function-ref name="set" scoped="" ref="0x7fce231ef7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce231ef980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce231efb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce231efda0"/>
        <function-ref name="clr" scoped="" ref="0x7fce231ee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7fce231ea3e0" loc="160:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7fce231ea3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce231ea760"/>
        <function-ref name="isInput" scoped="" ref="0x7fce231ea8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce231eaa80"/>
        <function-ref name="toggle" scoped="" ref="0x7fce231eac10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce231eada0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce231e9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce231e91b0"/>
        <function-ref name="get" scoped="" ref="0x7fce231e9340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce231e94d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce231e9660"/>
        <function-ref name="set" scoped="" ref="0x7fce231e97f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce231e9980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce231e9b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce231e9da0"/>
        <function-ref name="clr" scoped="" ref="0x7fce231e8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7fce231de3e0" loc="166:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7fce231de3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce231de760"/>
        <function-ref name="isInput" scoped="" ref="0x7fce231de8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce231dea80"/>
        <function-ref name="toggle" scoped="" ref="0x7fce231dec10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce231deda0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce231dd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce231dd1b0"/>
        <function-ref name="get" scoped="" ref="0x7fce231dd340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce231dd4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce231dd660"/>
        <function-ref name="set" scoped="" ref="0x7fce231dd7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce231dd980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce231ddb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce231ddda0"/>
        <function-ref name="clr" scoped="" ref="0x7fce231dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7fce23229020" loc="93:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7fce23229020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce232293a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23229530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce232296c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23229850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce232299e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23229b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23229d00"/>
        <function-ref name="get" scoped="" ref="0x7fce23228020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce232281b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23228340"/>
        <function-ref name="set" scoped="" ref="0x7fce232284d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23228660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce232287f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23228a80"/>
        <function-ref name="clr" scoped="" ref="0x7fce23228c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7fce231ee3f0" loc="157:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7fce231ee3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce231ee770"/>
        <function-ref name="isInput" scoped="" ref="0x7fce231ee900"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce231eea90"/>
        <function-ref name="toggle" scoped="" ref="0x7fce231eec20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce231eedb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce231ed020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce231ed1b0"/>
        <function-ref name="get" scoped="" ref="0x7fce231ed340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce231ed4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce231ed660"/>
        <function-ref name="set" scoped="" ref="0x7fce231ed7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce231ed980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce231edb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce231edda0"/>
        <function-ref name="clr" scoped="" ref="0x7fce231ec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fce23266cc0" loc="52:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fce23266cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce232650a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23265230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce232653c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23265550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce232656e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23265870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23265a00"/>
        <function-ref name="get" scoped="" ref="0x7fce23265b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce23265d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23264020"/>
        <function-ref name="set" scoped="" ref="0x7fce232641b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23264340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce232644d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23264760"/>
        <function-ref name="clr" scoped="" ref="0x7fce232648f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fce23251cc0" loc="65:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fce23251cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce232500a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23250230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce232503c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23250550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce232506e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23250870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23250a00"/>
        <function-ref name="get" scoped="" ref="0x7fce23250b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce23250d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce2324f020"/>
        <function-ref name="set" scoped="" ref="0x7fce2324f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce2324f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce2324f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce2324f760"/>
        <function-ref name="clr" scoped="" ref="0x7fce2324f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7fce2323dcc0" loc="78:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7fce2323dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce2323c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce2323c230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce2323c3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce2323c550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce2323c6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce2323c870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce2323ca00"/>
        <function-ref name="get" scoped="" ref="0x7fce2323cb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce2323cd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce2323b020"/>
        <function-ref name="set" scoped="" ref="0x7fce2323b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce2323b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce2323b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce2323b760"/>
        <function-ref name="clr" scoped="" ref="0x7fce2323b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7fce231f63f0" loc="153:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7fce231f63f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce231f6770"/>
        <function-ref name="isInput" scoped="" ref="0x7fce231f6900"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce231f6a90"/>
        <function-ref name="toggle" scoped="" ref="0x7fce231f6c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce231f6db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce231f5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce231f51b0"/>
        <function-ref name="get" scoped="" ref="0x7fce231f5340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce231f54d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce231f5660"/>
        <function-ref name="set" scoped="" ref="0x7fce231f57f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce231f5980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce231f5b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce231f5da0"/>
        <function-ref name="clr" scoped="" ref="0x7fce231f4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7fce231e23e0" loc="164:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7fce231e23e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce231e2760"/>
        <function-ref name="isInput" scoped="" ref="0x7fce231e28f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce231e2a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fce231e2c10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce231e2da0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce231e1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce231e11b0"/>
        <function-ref name="get" scoped="" ref="0x7fce231e1340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce231e14d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce231e1660"/>
        <function-ref name="set" scoped="" ref="0x7fce231e17f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce231e1980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce231e1b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce231e1da0"/>
        <function-ref name="clr" scoped="" ref="0x7fce231e0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7fce23238020" loc="83:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7fce23238020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce232383a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23238530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce232386c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23238850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce232389e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23238b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23238d00"/>
        <function-ref name="get" scoped="" ref="0x7fce23237020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce232371b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23237340"/>
        <function-ref name="set" scoped="" ref="0x7fce232374d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23237660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce232377f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23237a80"/>
        <function-ref name="clr" scoped="" ref="0x7fce23237c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7fce23223020" loc="96:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7fce23223020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce232233a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23223530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce232236c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23223850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce232239e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23223b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23223d00"/>
        <function-ref name="get" scoped="" ref="0x7fce23222020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce232221b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23222340"/>
        <function-ref name="set" scoped="" ref="0x7fce232224d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23222660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce232227f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23222a80"/>
        <function-ref name="clr" scoped="" ref="0x7fce23222c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7fce23213020" loc="107:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7fce23213020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce232133a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23213530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce232136c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23213850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce232139e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23213b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23213d00"/>
        <function-ref name="get" scoped="" ref="0x7fce23212020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce232121b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23212340"/>
        <function-ref name="set" scoped="" ref="0x7fce232124d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23212660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce232127f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23212a80"/>
        <function-ref name="clr" scoped="" ref="0x7fce23212c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fce23260cc0" loc="55:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fce23260cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce2325f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce2325f230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce2325f3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce2325f550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce2325f6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce2325f870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce2325fa00"/>
        <function-ref name="get" scoped="" ref="0x7fce2325fb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce2325fd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce2325e020"/>
        <function-ref name="set" scoped="" ref="0x7fce2325e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce2325e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce2325e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce2325e760"/>
        <function-ref name="clr" scoped="" ref="0x7fce2325e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7fce23217020" loc="105:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7fce23217020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce232173a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23217530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce232176c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23217850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce232179e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23217b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23217d00"/>
        <function-ref name="get" scoped="" ref="0x7fce23216020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce232161b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23216340"/>
        <function-ref name="set" scoped="" ref="0x7fce232164d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23216660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce232167f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23216a80"/>
        <function-ref name="clr" scoped="" ref="0x7fce23216c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fce2325ccc0" loc="60:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fce2325ccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce2325b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce2325b230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce2325b3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce2325b550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce2325b6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce2325b870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce2325ba00"/>
        <function-ref name="get" scoped="" ref="0x7fce2325bb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce2325bd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce2325a020"/>
        <function-ref name="set" scoped="" ref="0x7fce2325a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce2325a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce2325a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce2325a760"/>
        <function-ref name="clr" scoped="" ref="0x7fce2325a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7fce23247cc0" loc="73:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7fce23247cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce232460a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23246230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce232463c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23246550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce232466e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23246870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23246a00"/>
        <function-ref name="get" scoped="" ref="0x7fce23246b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce23246d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23245020"/>
        <function-ref name="set" scoped="" ref="0x7fce232451b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23245340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce232454d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23245760"/>
        <function-ref name="clr" scoped="" ref="0x7fce232458f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7fce23232020" loc="86:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7fce23232020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce232323a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23232530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce232326c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23232850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce232329e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23232b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23232d00"/>
        <function-ref name="get" scoped="" ref="0x7fce23231020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce232311b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23231340"/>
        <function-ref name="set" scoped="" ref="0x7fce232314d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23231660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce232317f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23231a80"/>
        <function-ref name="clr" scoped="" ref="0x7fce23231c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7fce2321d020" loc="99:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7fce2321d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce2321d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce2321d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce2321d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce2321d850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce2321d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce2321db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce2321dd00"/>
        <function-ref name="get" scoped="" ref="0x7fce2321c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce2321c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce2321c340"/>
        <function-ref name="set" scoped="" ref="0x7fce2321c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce2321c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce2321c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce2321ca80"/>
        <function-ref name="clr" scoped="" ref="0x7fce2321cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7fce2320d020" loc="110:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7fce2320d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce2320d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce2320d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce2320d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce2320d850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce2320d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce2320db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce2320dd00"/>
        <function-ref name="get" scoped="" ref="0x7fce2320c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce2320c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce2320c340"/>
        <function-ref name="set" scoped="" ref="0x7fce2320c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce2320c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce2320c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce2320ca80"/>
        <function-ref name="clr" scoped="" ref="0x7fce2320cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fce2326acc0" loc="50:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fce2326acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce232690a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23269230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce232693c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23269550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce232696e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23269870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23269a00"/>
        <function-ref name="get" scoped="" ref="0x7fce23269b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce23269d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23268020"/>
        <function-ref name="set" scoped="" ref="0x7fce232681b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23268340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce232684d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23268760"/>
        <function-ref name="clr" scoped="" ref="0x7fce232688f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fce23255cc0" loc="63:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fce23255cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce232540a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23254230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce232543c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23254550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce232546e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23254870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23254a00"/>
        <function-ref name="get" scoped="" ref="0x7fce23254b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce23254d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23253020"/>
        <function-ref name="set" scoped="" ref="0x7fce232531b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23253340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce232534d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23253760"/>
        <function-ref name="clr" scoped="" ref="0x7fce232538f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7fce23241cc0" loc="76:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7fce23241cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce232400a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23240230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce232403c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23240550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce232406e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23240870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23240a00"/>
        <function-ref name="get" scoped="" ref="0x7fce23240b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce23240d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce2323f020"/>
        <function-ref name="set" scoped="" ref="0x7fce2323f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce2323f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce2323f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce2323f760"/>
        <function-ref name="clr" scoped="" ref="0x7fce2323f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7fce2322c020" loc="89:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7fce2322c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce2322c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce2322c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce2322c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce2322c850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce2322c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce2322cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce2322cd00"/>
        <function-ref name="get" scoped="" ref="0x7fce2322b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce2322b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce2322b340"/>
        <function-ref name="set" scoped="" ref="0x7fce2322b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce2322b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce2322b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce2322ba80"/>
        <function-ref name="clr" scoped="" ref="0x7fce2322bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7fce231ff3d0" loc="148:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7fce231ff3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce231ff750"/>
        <function-ref name="isInput" scoped="" ref="0x7fce231ff8e0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce231ffa70"/>
        <function-ref name="toggle" scoped="" ref="0x7fce231ffc00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce231ffd90"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce231fe020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce231fe1b0"/>
        <function-ref name="get" scoped="" ref="0x7fce231fe340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce231fe4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce231fe660"/>
        <function-ref name="set" scoped="" ref="0x7fce231fe7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce231fe980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce231feb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce231feda0"/>
        <function-ref name="clr" scoped="" ref="0x7fce231fd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7fce231e83e0" loc="161:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7fce231e83e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce231e8760"/>
        <function-ref name="isInput" scoped="" ref="0x7fce231e88f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce231e8a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fce231e8c10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce231e8da0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce231e7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce231e71b0"/>
        <function-ref name="get" scoped="" ref="0x7fce231e7340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce231e74d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce231e7660"/>
        <function-ref name="set" scoped="" ref="0x7fce231e77f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce231e7980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce231e7b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce231e7da0"/>
        <function-ref name="clr" scoped="" ref="0x7fce231e6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7fce232013f0" loc="147:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7fce232013f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce23201770"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23201900"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce23201a90"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23201c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce23201db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23200020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce232001b0"/>
        <function-ref name="get" scoped="" ref="0x7fce23200340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce232004d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23200660"/>
        <function-ref name="set" scoped="" ref="0x7fce232007f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23200980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce23200b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23200da0"/>
        <function-ref name="clr" scoped="" ref="0x7fce231ff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7fce23227020" loc="94:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7fce23227020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce232273a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23227530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce232276c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23227850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce232279e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23227b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23227d00"/>
        <function-ref name="get" scoped="" ref="0x7fce23226020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce232261b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23226340"/>
        <function-ref name="set" scoped="" ref="0x7fce232264d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23226660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce232267f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23226a80"/>
        <function-ref name="clr" scoped="" ref="0x7fce23226c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7fce231dc3e0" loc="168:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7fce231dc3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce231dc760"/>
        <function-ref name="isInput" scoped="" ref="0x7fce231dc8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce231dca80"/>
        <function-ref name="toggle" scoped="" ref="0x7fce231dcc10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce231dcda0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce231db020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce231db1b0"/>
        <function-ref name="get" scoped="" ref="0x7fce231db340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce231db4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce231db660"/>
        <function-ref name="set" scoped="" ref="0x7fce231db7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce231db980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce231dbb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce231dbda0"/>
        <function-ref name="clr" scoped="" ref="0x7fce231da020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7fce231d63f0" loc="172:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7fce231d63f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce231d6770"/>
        <function-ref name="isInput" scoped="" ref="0x7fce231d6900"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce231d6a90"/>
        <function-ref name="toggle" scoped="" ref="0x7fce231d6c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce231d6db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce231d5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce231d51b0"/>
        <function-ref name="get" scoped="" ref="0x7fce231d5340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce231d54d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce231d5660"/>
        <function-ref name="set" scoped="" ref="0x7fce231d57f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce231d5980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce231d5b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce231d5da0"/>
        <function-ref name="clr" scoped="" ref="0x7fce231d4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7fce23209060" loc="143:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7fce23209060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce232097e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23209970"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce23209b00"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23209c90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce23209e20"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23208020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce232081b0"/>
        <function-ref name="get" scoped="" ref="0x7fce23208340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce232084d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23208660"/>
        <function-ref name="set" scoped="" ref="0x7fce232087f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23208980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce23208b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23208da0"/>
        <function-ref name="clr" scoped="" ref="0x7fce23207020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce231aa3f0" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce231aa3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce231aa770"/>
        <function-ref name="isInput" scoped="" ref="0x7fce231aa900"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce231aaa90"/>
        <function-ref name="toggle" scoped="" ref="0x7fce231aac20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce231aadb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce231a8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce231a81b0"/>
        <function-ref name="get" scoped="" ref="0x7fce231a8340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce231a84d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce231a8660"/>
        <function-ref name="set" scoped="" ref="0x7fce231a87f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce231a8980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce231a8b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce231a8da0"/>
        <function-ref name="clr" scoped="" ref="0x7fce231a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce231a5e00" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce231a5e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce231a41c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce231a4350"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce231a44e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce231a4670"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce231a4800"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce231a4990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce231a4b20"/>
        <function-ref name="get" scoped="" ref="0x7fce231a4cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce231a4e40"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce231a3020"/>
        <function-ref name="set" scoped="" ref="0x7fce231a31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce231a3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce231a34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce231a3760"/>
        <function-ref name="clr" scoped="" ref="0x7fce231a38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce231a0740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce231a0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce231a0ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce231a0c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce231a0de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce2319f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce2319f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce2319f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce2319f4d0"/>
        <function-ref name="get" scoped="" ref="0x7fce2319f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce2319f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce2319f980"/>
        <function-ref name="set" scoped="" ref="0x7fce2319fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce2319fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce2319fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce2319e120"/>
        <function-ref name="clr" scoped="" ref="0x7fce2319e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce2319b100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce2319b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce2319b480"/>
        <function-ref name="isInput" scoped="" ref="0x7fce2319b610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce2319b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce2319b930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce2319bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce2319bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce2319bde0"/>
        <function-ref name="get" scoped="" ref="0x7fce2319a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce2319a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce2319a340"/>
        <function-ref name="set" scoped="" ref="0x7fce2319a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce2319a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce2319a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce2319aa80"/>
        <function-ref name="clr" scoped="" ref="0x7fce2319ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce23197d10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce23197d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce231960e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23196270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce23196400"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23196590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce23196720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce231968b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23196a40"/>
        <function-ref name="get" scoped="" ref="0x7fce23196bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce23196d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23195020"/>
        <function-ref name="set" scoped="" ref="0x7fce231951b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23195340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce231954d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23195760"/>
        <function-ref name="clr" scoped="" ref="0x7fce231958f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce23192740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce23192740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce23192ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23192c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce23192de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23191020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce231911b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23191340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce231914d0"/>
        <function-ref name="get" scoped="" ref="0x7fce23191660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce231917f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23191980"/>
        <function-ref name="set" scoped="" ref="0x7fce23191b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23191ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce23191e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23190120"/>
        <function-ref name="clr" scoped="" ref="0x7fce231902b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce2318d100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce2318d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce2318d480"/>
        <function-ref name="isInput" scoped="" ref="0x7fce2318d610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce2318d7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce2318d930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce2318dac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce2318dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce2318dde0"/>
        <function-ref name="get" scoped="" ref="0x7fce2318c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce2318c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce2318c340"/>
        <function-ref name="set" scoped="" ref="0x7fce2318c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce2318c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce2318c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce2318ca80"/>
        <function-ref name="clr" scoped="" ref="0x7fce2318cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce23189d10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce23189d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce231880e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23188270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce23188400"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23188590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce23188720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce231888b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23188a40"/>
        <function-ref name="get" scoped="" ref="0x7fce23188bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce23188d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23187020"/>
        <function-ref name="set" scoped="" ref="0x7fce231871b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23187340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce231874d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23187760"/>
        <function-ref name="clr" scoped="" ref="0x7fce231878f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce23184740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce23184740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce23184ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23184c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce23184de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23182020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce231821b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23182340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce231824d0"/>
        <function-ref name="get" scoped="" ref="0x7fce23182660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce231827f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23182980"/>
        <function-ref name="set" scoped="" ref="0x7fce23182b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23182ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce23182e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23181120"/>
        <function-ref name="clr" scoped="" ref="0x7fce231812b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce2317e100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce2317e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce2317e480"/>
        <function-ref name="isInput" scoped="" ref="0x7fce2317e610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce2317e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce2317e930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce2317eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce2317ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce2317ede0"/>
        <function-ref name="get" scoped="" ref="0x7fce2317d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce2317d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce2317d340"/>
        <function-ref name="set" scoped="" ref="0x7fce2317d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce2317d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce2317d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce2317da80"/>
        <function-ref name="clr" scoped="" ref="0x7fce2317dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce2317ad10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce2317ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce231790e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23179270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce23179400"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23179590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce23179720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce231798b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23179a40"/>
        <function-ref name="get" scoped="" ref="0x7fce23179bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce23179d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23178020"/>
        <function-ref name="set" scoped="" ref="0x7fce231781b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23178340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce231784d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23178760"/>
        <function-ref name="clr" scoped="" ref="0x7fce231788f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce23175740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce23175740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce23175ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23175c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce23175de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23174020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce231741b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23174340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce231744d0"/>
        <function-ref name="get" scoped="" ref="0x7fce23174660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce231747f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23174980"/>
        <function-ref name="set" scoped="" ref="0x7fce23174b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23174ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce23174e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23173120"/>
        <function-ref name="clr" scoped="" ref="0x7fce231732b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce23170260" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce23170260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce231705e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23170770"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce23170900"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23170a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce23170c20"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23170db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce2316f020"/>
        <function-ref name="get" scoped="" ref="0x7fce2316f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce2316f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce2316f4d0"/>
        <function-ref name="set" scoped="" ref="0x7fce2316f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce2316f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce2316f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce2316fc10"/>
        <function-ref name="clr" scoped="" ref="0x7fce2316fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce2316cd10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce2316cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce2316b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce2316b270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce2316b400"/>
        <function-ref name="toggle" scoped="" ref="0x7fce2316b590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce2316b720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce2316b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce2316ba40"/>
        <function-ref name="get" scoped="" ref="0x7fce2316bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce2316bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce2316a020"/>
        <function-ref name="set" scoped="" ref="0x7fce2316a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce2316a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce2316a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce2316a760"/>
        <function-ref name="clr" scoped="" ref="0x7fce2316a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce23167740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce23167740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce23167ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23167c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce23167de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23166020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce231661b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23166340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce231664d0"/>
        <function-ref name="get" scoped="" ref="0x7fce23166660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce231667f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23166980"/>
        <function-ref name="set" scoped="" ref="0x7fce23166b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23166ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce23166e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23165120"/>
        <function-ref name="clr" scoped="" ref="0x7fce231652b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce23162100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce23162100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce23162480"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23162610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce231627a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23162930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce23162ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23162c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23162de0"/>
        <function-ref name="get" scoped="" ref="0x7fce23161020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce231611b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23161340"/>
        <function-ref name="set" scoped="" ref="0x7fce231614d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23161660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce231617f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23161a80"/>
        <function-ref name="clr" scoped="" ref="0x7fce23161c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce2315dd10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce2315dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce2315c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce2315c270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce2315c400"/>
        <function-ref name="toggle" scoped="" ref="0x7fce2315c590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce2315c720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce2315c8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce2315ca40"/>
        <function-ref name="get" scoped="" ref="0x7fce2315cbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce2315cd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce2315b020"/>
        <function-ref name="set" scoped="" ref="0x7fce2315b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce2315b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce2315b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce2315b760"/>
        <function-ref name="clr" scoped="" ref="0x7fce2315b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce23158740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce23158740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce23158ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23158c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce23158de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23157020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce231571b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23157340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce231574d0"/>
        <function-ref name="get" scoped="" ref="0x7fce23157660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce231577f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23157980"/>
        <function-ref name="set" scoped="" ref="0x7fce23157b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23157ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce23157e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23156120"/>
        <function-ref name="clr" scoped="" ref="0x7fce231562b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce23153100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce23153100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce23153480"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23153610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce231537a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23153930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce23153ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23153c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23153de0"/>
        <function-ref name="get" scoped="" ref="0x7fce23152020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce231521b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23152340"/>
        <function-ref name="set" scoped="" ref="0x7fce231524d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23152660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce231527f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23152a80"/>
        <function-ref name="clr" scoped="" ref="0x7fce23152c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce2314fd10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce2314fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce2314e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce2314e270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce2314e400"/>
        <function-ref name="toggle" scoped="" ref="0x7fce2314e590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce2314e720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce2314e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce2314ea40"/>
        <function-ref name="get" scoped="" ref="0x7fce2314ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce2314ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce2314d020"/>
        <function-ref name="set" scoped="" ref="0x7fce2314d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce2314d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce2314d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce2314d760"/>
        <function-ref name="clr" scoped="" ref="0x7fce2314d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce2314a740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce2314a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce2314aac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce2314ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce2314ade0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23149020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce231491b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23149340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce231494d0"/>
        <function-ref name="get" scoped="" ref="0x7fce23149660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce231497f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23149980"/>
        <function-ref name="set" scoped="" ref="0x7fce23149b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23149ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce23149e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23148120"/>
        <function-ref name="clr" scoped="" ref="0x7fce231482b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce23145100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce23145100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce23145480"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23145610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce231457a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23145930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce23145ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23145c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23145de0"/>
        <function-ref name="get" scoped="" ref="0x7fce23144020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce231441b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23144340"/>
        <function-ref name="set" scoped="" ref="0x7fce231444d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23144660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce231447f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23144a80"/>
        <function-ref name="clr" scoped="" ref="0x7fce23144c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce23141d10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce23141d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce231400e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23140270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce23140400"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23140590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce23140720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce231408b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23140a40"/>
        <function-ref name="get" scoped="" ref="0x7fce23140bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce23140d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce2313f020"/>
        <function-ref name="set" scoped="" ref="0x7fce2313f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce2313f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce2313f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce2313f760"/>
        <function-ref name="clr" scoped="" ref="0x7fce2313f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce2313c740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce2313c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce2313cac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce2313cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce2313cde0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce2313a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce2313a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce2313a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce2313a4d0"/>
        <function-ref name="get" scoped="" ref="0x7fce2313a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce2313a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce2313a980"/>
        <function-ref name="set" scoped="" ref="0x7fce2313ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce2313aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce2313ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23139120"/>
        <function-ref name="clr" scoped="" ref="0x7fce231392b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce231363f0" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce231363f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce23136770"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23136900"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce23136a90"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23136c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce23136db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23135020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce231351b0"/>
        <function-ref name="get" scoped="" ref="0x7fce23135340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce231354d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23135660"/>
        <function-ref name="set" scoped="" ref="0x7fce231357f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23135980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce23135b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23135da0"/>
        <function-ref name="clr" scoped="" ref="0x7fce23134020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce23132e00" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce23132e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce231311c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23131350"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce231314e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23131670"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce23131800"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23131990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23131b20"/>
        <function-ref name="get" scoped="" ref="0x7fce23131cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce23131e40"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23130020"/>
        <function-ref name="set" scoped="" ref="0x7fce231301b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23130340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce231304d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23130760"/>
        <function-ref name="clr" scoped="" ref="0x7fce231308f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce2312d740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce2312d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce2312dac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce2312dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce2312dde0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce2312c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce2312c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce2312c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce2312c4d0"/>
        <function-ref name="get" scoped="" ref="0x7fce2312c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce2312c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce2312c980"/>
        <function-ref name="set" scoped="" ref="0x7fce2312cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce2312cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce2312ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce2312b120"/>
        <function-ref name="clr" scoped="" ref="0x7fce2312b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce23128100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce23128100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce23128480"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23128610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce231287a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23128930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce23128ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23128c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23128de0"/>
        <function-ref name="get" scoped="" ref="0x7fce23127020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce231271b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23127340"/>
        <function-ref name="set" scoped="" ref="0x7fce231274d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23127660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce231277f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23127a80"/>
        <function-ref name="clr" scoped="" ref="0x7fce23127c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce23124d10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce23124d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce231230e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23123270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce23123400"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23123590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce23123720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce231238b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23123a40"/>
        <function-ref name="get" scoped="" ref="0x7fce23123bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce23123d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23122020"/>
        <function-ref name="set" scoped="" ref="0x7fce231221b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23122340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce231224d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23122760"/>
        <function-ref name="clr" scoped="" ref="0x7fce231228f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce2311f740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce2311f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce2311fac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce2311fc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce2311fde0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce2311e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce2311e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce2311e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce2311e4d0"/>
        <function-ref name="get" scoped="" ref="0x7fce2311e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce2311e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce2311e980"/>
        <function-ref name="set" scoped="" ref="0x7fce2311eb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce2311eca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce2311ee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce2311d120"/>
        <function-ref name="clr" scoped="" ref="0x7fce2311d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce2311a100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce2311a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce2311a480"/>
        <function-ref name="isInput" scoped="" ref="0x7fce2311a610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce2311a7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce2311a930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce2311aac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce2311ac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce2311ade0"/>
        <function-ref name="get" scoped="" ref="0x7fce23119020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce231191b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23119340"/>
        <function-ref name="set" scoped="" ref="0x7fce231194d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23119660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce231197f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23119a80"/>
        <function-ref name="clr" scoped="" ref="0x7fce23119c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce23116d10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce23116d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce231140e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23114270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce23114400"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23114590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce23114720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce231148b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23114a40"/>
        <function-ref name="get" scoped="" ref="0x7fce23114bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce23114d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23113020"/>
        <function-ref name="set" scoped="" ref="0x7fce231131b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23113340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce231134d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23113760"/>
        <function-ref name="clr" scoped="" ref="0x7fce231138f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce23110740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce23110740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce23110ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23110c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce23110de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce2310f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce2310f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce2310f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce2310f4d0"/>
        <function-ref name="get" scoped="" ref="0x7fce2310f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce2310f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce2310f980"/>
        <function-ref name="set" scoped="" ref="0x7fce2310fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce2310fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce2310fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce2310e120"/>
        <function-ref name="clr" scoped="" ref="0x7fce2310e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce2310b100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce2310b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce2310b480"/>
        <function-ref name="isInput" scoped="" ref="0x7fce2310b610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce2310b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce2310b930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce2310bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce2310bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce2310bde0"/>
        <function-ref name="get" scoped="" ref="0x7fce2310a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce2310a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce2310a340"/>
        <function-ref name="set" scoped="" ref="0x7fce2310a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce2310a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce2310a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce2310aa80"/>
        <function-ref name="clr" scoped="" ref="0x7fce2310ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce23107d10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce23107d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce231060e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23106270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce23106400"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23106590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce23106720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce231068b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23106a40"/>
        <function-ref name="get" scoped="" ref="0x7fce23106bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce23106d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23105020"/>
        <function-ref name="set" scoped="" ref="0x7fce231051b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23105340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce231054d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23105760"/>
        <function-ref name="clr" scoped="" ref="0x7fce231058f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce23102740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce23102740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce23102ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23102c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce23102de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23101020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce231011b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23101340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce231014d0"/>
        <function-ref name="get" scoped="" ref="0x7fce23101660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce231017f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23101980"/>
        <function-ref name="set" scoped="" ref="0x7fce23101b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23101ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce23101e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23100120"/>
        <function-ref name="clr" scoped="" ref="0x7fce231002b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce230fd100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce230fd100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce230fd480"/>
        <function-ref name="isInput" scoped="" ref="0x7fce230fd610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce230fd7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce230fd930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce230fdac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce230fdc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce230fdde0"/>
        <function-ref name="get" scoped="" ref="0x7fce230fc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce230fc1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce230fc340"/>
        <function-ref name="set" scoped="" ref="0x7fce230fc4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce230fc660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce230fc7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce230fca80"/>
        <function-ref name="clr" scoped="" ref="0x7fce230fcc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce230f9d10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce230f9d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce230f80e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce230f8270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce230f8400"/>
        <function-ref name="toggle" scoped="" ref="0x7fce230f8590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce230f8720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce230f88b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce230f8a40"/>
        <function-ref name="get" scoped="" ref="0x7fce230f8bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce230f8d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce230f7020"/>
        <function-ref name="set" scoped="" ref="0x7fce230f71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce230f7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce230f74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce230f7760"/>
        <function-ref name="clr" scoped="" ref="0x7fce230f78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce230f4740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce230f4740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce230f4ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce230f4c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce230f4de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce230f3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce230f31b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce230f3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce230f34d0"/>
        <function-ref name="get" scoped="" ref="0x7fce230f3660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce230f37f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce230f3980"/>
        <function-ref name="set" scoped="" ref="0x7fce230f3b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce230f3ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce230f3e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce230f2120"/>
        <function-ref name="clr" scoped="" ref="0x7fce230f22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce230ee100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce230ee100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce230ee480"/>
        <function-ref name="isInput" scoped="" ref="0x7fce230ee610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce230ee7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce230ee930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce230eeac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce230eec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce230eede0"/>
        <function-ref name="get" scoped="" ref="0x7fce230ed020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce230ed1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce230ed340"/>
        <function-ref name="set" scoped="" ref="0x7fce230ed4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce230ed660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce230ed7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce230eda80"/>
        <function-ref name="clr" scoped="" ref="0x7fce230edc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce230ead10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce230ead10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce230e90e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce230e9270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce230e9400"/>
        <function-ref name="toggle" scoped="" ref="0x7fce230e9590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce230e9720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce230e98b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce230e9a40"/>
        <function-ref name="get" scoped="" ref="0x7fce230e9bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce230e9d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce230e8020"/>
        <function-ref name="set" scoped="" ref="0x7fce230e81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce230e8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce230e84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce230e8760"/>
        <function-ref name="clr" scoped="" ref="0x7fce230e88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce230e5740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce230e5740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce230e5ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce230e5c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce230e5de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce230e4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce230e41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce230e4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce230e44d0"/>
        <function-ref name="get" scoped="" ref="0x7fce230e4660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce230e47f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce230e4980"/>
        <function-ref name="set" scoped="" ref="0x7fce230e4b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce230e4ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce230e4e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce230e3120"/>
        <function-ref name="clr" scoped="" ref="0x7fce230e32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce230e0100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce230e0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce230e0480"/>
        <function-ref name="isInput" scoped="" ref="0x7fce230e0610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce230e07a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce230e0930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce230e0ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce230e0c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce230e0de0"/>
        <function-ref name="get" scoped="" ref="0x7fce230df020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce230df1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce230df340"/>
        <function-ref name="set" scoped="" ref="0x7fce230df4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce230df660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce230df7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce230dfa80"/>
        <function-ref name="clr" scoped="" ref="0x7fce230dfc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce230dcd10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce230dcd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce230db0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce230db270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce230db400"/>
        <function-ref name="toggle" scoped="" ref="0x7fce230db590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce230db720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce230db8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce230dba40"/>
        <function-ref name="get" scoped="" ref="0x7fce230dbbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce230dbd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce230da020"/>
        <function-ref name="set" scoped="" ref="0x7fce230da1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce230da340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce230da4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce230da760"/>
        <function-ref name="clr" scoped="" ref="0x7fce230da8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce230d7740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce230d7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce230d7ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce230d7c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce230d7de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce230d6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce230d61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce230d6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce230d64d0"/>
        <function-ref name="get" scoped="" ref="0x7fce230d6660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce230d67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce230d6980"/>
        <function-ref name="set" scoped="" ref="0x7fce230d6b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce230d6ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce230d6e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce230d5120"/>
        <function-ref name="clr" scoped="" ref="0x7fce230d52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce230d2100" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce230d2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce230d2480"/>
        <function-ref name="isInput" scoped="" ref="0x7fce230d2610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce230d27a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce230d2930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce230d2ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce230d2c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce230d2de0"/>
        <function-ref name="get" scoped="" ref="0x7fce230d1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce230d11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce230d1340"/>
        <function-ref name="set" scoped="" ref="0x7fce230d14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce230d1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce230d17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce230d1a80"/>
        <function-ref name="clr" scoped="" ref="0x7fce230d1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce230ced10" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce230ced10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce230cc0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce230cc270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce230cc400"/>
        <function-ref name="toggle" scoped="" ref="0x7fce230cc590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce230cc720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce230cc8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce230cca40"/>
        <function-ref name="get" scoped="" ref="0x7fce230ccbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce230ccd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce230cb020"/>
        <function-ref name="set" scoped="" ref="0x7fce230cb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce230cb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce230cb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce230cb760"/>
        <function-ref name="clr" scoped="" ref="0x7fce230cb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fce230c8740" loc="47:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fce230c8740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce230c8ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce230c8c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce230c8de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce230c7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce230c71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce230c7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce230c74d0"/>
        <function-ref name="get" scoped="" ref="0x7fce230c7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce230c77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce230c7980"/>
        <function-ref name="set" scoped="" ref="0x7fce230c7b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce230c7ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce230c7e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce230c6120"/>
        <function-ref name="clr" scoped="" ref="0x7fce230c62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fce230569a0" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fce230569a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fce23895640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fce238959b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fce230537e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fce230521b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fce23053ca0"/>
        <function-ref name="overflow" scoped="" ref="0x7fce23052670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fce23055c10" loc="46:/opt/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fce23055c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fce2304e020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fce2304e1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7fce2304e340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fce2304e4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fce2304e660"/>
        <function-ref name="get" scoped="" ref="0x7fce2304e7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fce2304e980"/>
        <function-ref name="led2Off" scoped="" ref="0x7fce2304d020"/>
        <function-ref name="set" scoped="" ref="0x7fce2304eb10"/>
        <function-ref name="led0On" scoped="" ref="0x7fce2304eca0"/>
        <function-ref name="led2On" scoped="" ref="0x7fce2304ee30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7fce23042b50" loc="50:/opt/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7fce23042b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce23048020"/>
        <function-ref name="isInput" scoped="" ref="0x7fce230481b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23048340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce230484d0"/>
        <function-ref name="get" scoped="" ref="0x7fce23048660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce230487f0"/>
        <function-ref name="set" scoped="" ref="0x7fce23048980"/>
        <function-ref name="clr" scoped="" ref="0x7fce23048b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fce2304a020" loc="46:/opt/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fce2304a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fce2304a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7fce23048e30" loc="51:/opt/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7fce23048e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce230471e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23047370"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23047500"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce23047690"/>
        <function-ref name="get" scoped="" ref="0x7fce23047820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce230479b0"/>
        <function-ref name="set" scoped="" ref="0x7fce23047b40"/>
        <function-ref name="clr" scoped="" ref="0x7fce23047cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fce2304a620" loc="47:/opt/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fce2304a620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fce2304a9a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fce2304ab30"/>
        <function-ref name="led1On" scoped="" ref="0x7fce2304acc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fce2304ae50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fce23049020"/>
        <function-ref name="get" scoped="" ref="0x7fce230491b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fce23049340"/>
        <function-ref name="led2Off" scoped="" ref="0x7fce23049980"/>
        <function-ref name="set" scoped="" ref="0x7fce230494d0"/>
        <function-ref name="led0On" scoped="" ref="0x7fce23049660"/>
        <function-ref name="led2On" scoped="" ref="0x7fce230497f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7fce23041020" loc="52:/opt/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7fce23041020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce230413a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23041530"/>
        <function-ref name="toggle" scoped="" ref="0x7fce230416c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce23041850"/>
        <function-ref name="get" scoped="" ref="0x7fce230419e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23041b70"/>
        <function-ref name="set" scoped="" ref="0x7fce23041d00"/>
        <function-ref name="clr" scoped="" ref="0x7fce23040020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7fce2304b5a0" loc="41:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7fce2304b5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce2304b920"/>
        <function-ref name="isInput" scoped="" ref="0x7fce2304bab0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce2304bc40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce2304bdd0"/>
        <function-ref name="get" scoped="" ref="0x7fce23025020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce230251b0"/>
        <function-ref name="set" scoped="" ref="0x7fce23025340"/>
        <function-ref name="clr" scoped="" ref="0x7fce230254d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7fce23025830" loc="42:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7fce23025830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce23025bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23025d40"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23024020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce230241b0"/>
        <function-ref name="get" scoped="" ref="0x7fce23024340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce230244d0"/>
        <function-ref name="set" scoped="" ref="0x7fce23024660"/>
        <function-ref name="clr" scoped="" ref="0x7fce230247f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7fce23022dd0" loc="44:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fce23022dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fce23021180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7fce23024b50" loc="43:/opt/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7fce23024b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce23022020"/>
        <function-ref name="isInput" scoped="" ref="0x7fce230221b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23022340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce230224d0"/>
        <function-ref name="get" scoped="" ref="0x7fce23022660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce230227f0"/>
        <function-ref name="set" scoped="" ref="0x7fce23022980"/>
        <function-ref name="clr" scoped="" ref="0x7fce23022b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fce2300ec50" loc="44:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fce2300ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce2300d020"/>
        <function-ref name="isInput" scoped="" ref="0x7fce2300d1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce2300d340"/>
        <function-ref name="toggle" scoped="" ref="0x7fce2300d4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce2300d660"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce2300d7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce2300d980"/>
        <function-ref name="get" scoped="" ref="0x7fce2300db10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce2300dca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce2300de30"/>
        <function-ref name="set" scoped="" ref="0x7fce2300c020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce2300c1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce2300c340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce2300c5d0"/>
        <function-ref name="clr" scoped="" ref="0x7fce2300c760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fce2301f9e0" loc="43:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fce2301f9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce2301fd60"/>
        <function-ref name="isInput" scoped="" ref="0x7fce2300e020"/>
        <function-ref name="toggle" scoped="" ref="0x7fce2300e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce2300e340"/>
        <function-ref name="get" scoped="" ref="0x7fce2300e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce2300e660"/>
        <function-ref name="set" scoped="" ref="0x7fce2300e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fce2300e980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fce230097a0" loc="44:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fce230097a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce23009b20"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23009cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce23009e40"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23008020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce230081b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23008340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce230084d0"/>
        <function-ref name="get" scoped="" ref="0x7fce23008660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce230087f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce23008980"/>
        <function-ref name="set" scoped="" ref="0x7fce23008b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce23008ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce23008e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23007120"/>
        <function-ref name="clr" scoped="" ref="0x7fce230072b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fce2300a520" loc="43:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fce2300a520"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce2300a8a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce2300aa30"/>
        <function-ref name="toggle" scoped="" ref="0x7fce2300abc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce2300ad50"/>
        <function-ref name="get" scoped="" ref="0x7fce23009020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce230091b0"/>
        <function-ref name="set" scoped="" ref="0x7fce23009340"/>
        <function-ref name="clr" scoped="" ref="0x7fce230094d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fce230042f0" loc="44:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fce230042f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce23004670"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23004800"/>
        <function-ref name="setResistor" scoped="" ref="0x7fce23004990"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23004b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce23004cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fce23004e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23003020"/>
        <function-ref name="get" scoped="" ref="0x7fce230031b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fce23003340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fce230034d0"/>
        <function-ref name="set" scoped="" ref="0x7fce23003660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fce230037f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fce23003980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fce23003c10"/>
        <function-ref name="clr" scoped="" ref="0x7fce23003da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fce23005060" loc="43:/opt/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fce23005060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fce230053e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fce23005570"/>
        <function-ref name="toggle" scoped="" ref="0x7fce23005700"/>
        <function-ref name="isOutput" scoped="" ref="0x7fce23005890"/>
        <function-ref name="get" scoped="" ref="0x7fce23005a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fce23005bb0"/>
        <function-ref name="set" scoped="" ref="0x7fce23005d40"/>
        <function-ref name="clr" scoped="" ref="0x7fce23004020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fce22ac0970" loc="43:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fce22ac0970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fce22ac0cf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fce22ac0e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fce22abaa50" loc="48:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fce22abaa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fce22abadd0"/>
        <function-ref name="configure" scoped="" ref="0x7fce22ab9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fce22aba2b0" loc="46:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fce22aba2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fce22aba630"/>
        <function-ref name="txDone" scoped="" ref="0x7fce22aba7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fce22ac2cc0" loc="42:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fce22ac2cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fce22ac00a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fce22ac0230"/>
        <function-ref name="request" scoped="" ref="0x7fce22ac03c0"/>
        <function-ref name="granted" scoped="" ref="0x7fce22ac0550"/>
        <function-ref name="isOwner" scoped="" ref="0x7fce22ac06e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fce22abf8d0" loc="45:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fce22abf8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fce22abfc50"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fce22abfde0"/>
        <function-ref name="setUctl" scoped="" ref="0x7fce22abe020"/>
        <function-ref name="enableUart" scoped="" ref="0x7fce22abe1b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fce22abe340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fce22abe4d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fce22abe660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fce22abe7f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fce22abe980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fce22abeb10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fce22abeca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fce22abee30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fce22abd020"/>
        <function-ref name="getUbr" scoped="" ref="0x7fce22abd2b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fce22abd440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fce22abd5d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fce22abd760"/>
        <function-ref name="isUart" scoped="" ref="0x7fce22abd8f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fce22abda80"/>
        <function-ref name="isSpi" scoped="" ref="0x7fce22abdc10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fce22abdda0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fce22abc020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fce22abc1b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fce22abc340"/>
        <function-ref name="getMode" scoped="" ref="0x7fce22abc4d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fce22abc860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fce22abc9f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fce22abcb80"/>
        <function-ref name="tx" scoped="" ref="0x7fce22abcd10"/>
        <function-ref name="getUctl" scoped="" ref="0x7fce22abb020"/>
        <function-ref name="disableUart" scoped="" ref="0x7fce22abb1b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fce22abb340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fce22abb4d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fce22abb660"/>
        <function-ref name="rx" scoped="" ref="0x7fce22abb7f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fce22abb980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fce22abbb10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fce22abbca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fce22abbe30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fce22aba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fce22abf130" loc="44:/opt/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fce22abf130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fce22abf4b0"/>
        <function-ref name="userId" scoped="" ref="0x7fce22abf640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fce22fde2c0" loc="42:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fce22fde2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fce22fde640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fce22fde7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fce22fdd8a0" loc="45:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fce22fdd8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fce22fddc20"/>
        <function-ref name="configure" scoped="" ref="0x7fce22fdddb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fce22fe01d0" loc="40:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fce22fe01d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fce22fe0550"/>
        <function-ref name="txDone" scoped="" ref="0x7fce22fe06e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fce22fdf020" loc="41:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fce22fdf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fce22fdf3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fce22fdf530"/>
        <function-ref name="request" scoped="" ref="0x7fce22fdf6c0"/>
        <function-ref name="granted" scoped="" ref="0x7fce22fdf850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fce22fdf9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fce22fdead0" loc="43:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fce22fdead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fce22fdee50"/>
        <function-ref name="userId" scoped="" ref="0x7fce22fdd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fce22fc6a90" loc="43:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fce22fc6a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fce22fc6e10"/>
        <function-ref name="userId" scoped="" ref="0x7fce22fc5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fce22fdab60" loc="39:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fce22fdab60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fce22fd8020"/>
        <function-ref name="txDone" scoped="" ref="0x7fce22fd81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7fce22fc6480" loc="42:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fce22fc6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fce22fc6800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fce22fd85b0" loc="40:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fce22fd85b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fce22fd8950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7fce22fd8c20" loc="41:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7fce22fd8c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fce22fc6020"/>
        <function-ref name="txDone" scoped="" ref="0x7fce22fc61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fce22f4b020" loc="92:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fce22f4b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fce22f4b3c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fce22f4b550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fce22f4acd0" loc="96:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fce22f4acd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fce22f490a0"/>
        <function-ref name="configure" scoped="" ref="0x7fce22f49230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fce22f4b7a0" loc="93:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fce22f4b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fce22f4bb20"/>
        <function-ref name="requested" scoped="" ref="0x7fce22f4bcb0"/>
        <function-ref name="granted" scoped="" ref="0x7fce22f4be40"/>
        <function-ref name="isOwner" scoped="" ref="0x7fce22f4a020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fce22f4a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fce22f4d210" loc="91:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fce22f4d210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fce22f4d5b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fce22f4d740"/>
        <function-ref name="request" scoped="" ref="0x7fce22f4d8d0"/>
        <function-ref name="granted" scoped="" ref="0x7fce22f4da60"/>
        <function-ref name="isOwner" scoped="" ref="0x7fce22f4dbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fce22f4a400" loc="94:/opt/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fce22f4a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fce22f4a780"/>
        <function-ref name="userId" scoped="" ref="0x7fce22f4a910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fce22709ca0" loc="44:/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fce22709ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fce227080a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fce22708330" loc="45:/opt/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fce22708330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fce227086b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fce22708840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fce227089d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fce22708b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fce227053a0" loc="55:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fce227053a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fce22705740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fce227058d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fce22703210" loc="60:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fce22703210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fce227035b0"/>
        <function-ref name="configure" scoped="" ref="0x7fce22703740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fce227039d0" loc="61:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fce227039d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fce22703d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fce22701020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fce227011b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fce22701340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fce22705b20" loc="56:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fce22705b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fce22704020"/>
        <function-ref name="requested" scoped="" ref="0x7fce227041b0"/>
        <function-ref name="granted" scoped="" ref="0x7fce22704340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fce227044d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fce22704660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fce22701590" loc="62:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fce22701590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fce22701910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fce22701aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7fce22701c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fce22701dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fce22700020"/>
        <function-ref name="get" scoped="" ref="0x7fce227001b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fce22700340"/>
        <function-ref name="led0On" scoped="" ref="0x7fce22700980"/>
        <function-ref name="set" scoped="" ref="0x7fce22700660"/>
        <function-ref name="led2On" scoped="" ref="0x7fce227004d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fce227007f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fce22706540" loc="54:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fce22706540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fce227068e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fce22706a70"/>
        <function-ref name="request" scoped="" ref="0x7fce22706c00"/>
        <function-ref name="granted" scoped="" ref="0x7fce22706d90"/>
        <function-ref name="isOwner" scoped="" ref="0x7fce22705020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fce227048b0" loc="57:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fce227048b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fce22704c30"/>
        <function-ref name="userId" scoped="" ref="0x7fce22704dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fce22700c50" loc="75:/opt/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7fce22700c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fce226ff020"/>
        <function-ref name="runTask" scoped="" ref="0x7fce226ff1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fce22f30400" loc="72:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fce22f30400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fce22f30780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fce22f309d0" loc="73:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fce22f309d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fce22f30d50"/>
        <function-ref name="requested" scoped="" ref="0x7fce22f2e020"/>
        <function-ref name="granted" scoped="" ref="0x7fce22f2e1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fce22f2e340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fce22f2e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fce22f45b20" loc="70:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fce22f45b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fce22f30020"/>
        <function-ref name="stop" scoped="" ref="0x7fce22f301b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fce22f2e720" loc="74:/opt/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fce22f2e720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fce22f2eaa0"/>
        <function-ref name="userId" scoped="" ref="0x7fce22f2ec30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fce226d0b00" loc="62:/opt/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fce226d0b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fce226d0e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fce226cf0f0" loc="63:/opt/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fce226cf0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fce226cf470"/>
        <function-ref name="requested" scoped="" ref="0x7fce226cf600"/>
        <function-ref name="granted" scoped="" ref="0x7fce226cf790"/>
        <function-ref name="isOwner" scoped="" ref="0x7fce226cf920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fce226cfab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fce226d03a0" loc="60:/opt/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fce226d03a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fce226d0720"/>
        <function-ref name="stop" scoped="" ref="0x7fce226d08b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fce226cfd00" loc="64:/opt/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fce226cfd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fce226ce0a0"/>
        <function-ref name="userId" scoped="" ref="0x7fce226ce230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7fce22f0f080" loc="3:/opt/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fce22f0f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fce22f0f400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fce22f0f6f0" loc="4:/opt/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fce22f0f6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fce22f0fa70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fce22f0fc00"/>
        <function-ref name="request" scoped="" ref="0x7fce22f0fd90"/>
        <function-ref name="granted" scoped="" ref="0x7fce22f0e020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fce22f0e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fce22f127a0" loc="2:/opt/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fce22f127a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fce22f12b20"/>
        <function-ref name="stop" scoped="" ref="0x7fce22f12cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7fce22efb1e0" loc="47:/opt/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7fce22efb1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7fce22efb560"/>
        <function-ref name="offset" scoped="" ref="0x7fce22efb6f0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7fce22efb880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7fce22ee0bf0" loc="43:/opt/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fce22ee0bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7fce22ebbae0"/>
        <function-ref name="enqueue" scoped="" ref="0x7fce22eb9880"/>
        <function-ref name="element" scoped="" ref="0x7fce22eb8020"/>
        <function-ref name="full" scoped="" ref="0x7fce22edfce0"/>
        <function-ref name="maxSize" scoped="" ref="0x7fce22ebb660"/>
        <function-ref name="dequeue" scoped="" ref="0x7fce22eb91d0"/>
        <function-ref name="empty" scoped="" ref="0x7fce22edf860"/>
        <function-ref name="size" scoped="" ref="0x7fce22ebb1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fce22eb0a20" loc="93:/opt/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fce22eb0a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7fce22eb2920"/>
        <function-ref name="enqueue" scoped="" ref="0x7fce22eaf6d0"/>
        <function-ref name="element" scoped="" ref="0x7fce22eafd40"/>
        <function-ref name="full" scoped="" ref="0x7fce22eb3af0"/>
        <function-ref name="maxSize" scoped="" ref="0x7fce22eb24a0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fce22eaf020"/>
        <function-ref name="empty" scoped="" ref="0x7fce22eb3670"/>
        <function-ref name="size" scoped="" ref="0x7fce22eb2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fce22ead440" loc="94:/opt/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fce22ead440"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fce22ead7c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fce22ead950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fce22eadae0"/>
        <function-ref name="cancel" scoped="" ref="0x7fce22eadc70"/>
        <function-ref name="sendDone" scoped="" ref="0x7fce22eade00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fce22eac0c0" loc="95:/opt/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fce22eac0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fce22eac440"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fce22eac5d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fce22eac760"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fce22eac8f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fce22eaca80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x7fce22ea6500" loc="114:/opt/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="retrySend" scoped="" ref="0x7fce22ea6500"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fce22ea6880"/>
        <function-ref name="runTask" scoped="" ref="0x7fce22ea6a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fce22eb7a60" loc="89:/opt/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fce22eb7a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fce22eb7de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fce22eacd00" loc="96:/opt/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fce22eacd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fce22eab0a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fce22eab230"/>
        <function-ref name="led1On" scoped="" ref="0x7fce22eab3c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fce22eab550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fce22eab6e0"/>
        <function-ref name="get" scoped="" ref="0x7fce22eab870"/>
        <function-ref name="led1Off" scoped="" ref="0x7fce22eaba00"/>
        <function-ref name="led2Off" scoped="" ref="0x7fce22eaa1b0"/>
        <function-ref name="set" scoped="" ref="0x7fce22eabb90"/>
        <function-ref name="led0On" scoped="" ref="0x7fce22eabd20"/>
        <function-ref name="led2On" scoped="" ref="0x7fce22eaa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x7fce22eb01a0" loc="90:/opt/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7fce22eb01a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7fce22eb0520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7fce22e90be0" loc="43:/opt/tinyos-main/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7fce22e90be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7fce22e8d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fce22e8a020" loc="94:/opt/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fce22e8a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fce22e8a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7fce22e8a680" loc="95:/opt/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7fce22e8a680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7fce22e8aa00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fce22e84380" loc="39:/opt/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fce22e84380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fce22e84700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7fce22e84aa0" loc="40:/opt/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7fce22e84aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fce22e84e20"/>
        <function-ref name="stopDone" scoped="" ref="0x7fce22e81020"/>
        <function-ref name="start" scoped="" ref="0x7fce22e811b0"/>
        <function-ref name="stop" scoped="" ref="0x7fce22e81340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="primeModule" ref="0x7fce22e8e880" loc="2:primeC.nc">
      <component-ref qname="primeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="primeModule" scoped="" ref="0x7fce22e8e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="primeModule"/>
      </instance>
      <interface-functions>
        <function-ref name="genSharedPrime" scoped="" ref="0x7fce22e8ec00"/>
        <function-ref name="isPrime" scoped="" ref="0x7fce22e8ed90"/>
        <function-ref name="genLargeNum" scoped="" ref="0x7fce22e7a020"/>
        <function-ref name="power" scoped="" ref="0x7fce22e7a1b0"/>
        <function-ref name="gcd" scoped="" ref="0x7fce22e7a340"/>
        <function-ref name="genLargePrime" scoped="" ref="0x7fce22e7a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="primeModule" ref="0x7fce22e77020" loc="3:primeP.nc">
      <component-ref qname="primeP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="primeModule" scoped="" ref="0x7fce22e77020"/></type-interface>
      <instance>
        <interfacedef-ref qname="primeModule"/>
      </instance>
      <interface-functions>
        <function-ref name="genSharedPrime" scoped="" ref="0x7fce22e773a0"/>
        <function-ref name="isPrime" scoped="" ref="0x7fce22e77530"/>
        <function-ref name="genLargeNum" scoped="" ref="0x7fce22e776c0"/>
        <function-ref name="power" scoped="" ref="0x7fce22e77850"/>
        <function-ref name="gcd" scoped="" ref="0x7fce22e779e0"/>
        <function-ref name="genLargePrime" scoped="" ref="0x7fce22e77b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSAinterface" ref="0x7fce22e8b960" loc="2:RSAC.nc">
      <component-ref qname="RSAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSAinterface" scoped="" ref="0x7fce22e8b960"/></type-interface>
      <instance>
        <interfacedef-ref qname="RSAinterface"/>
      </instance>
      <interface-functions>
        <function-ref name="encrypt_shared_key" scoped="" ref="0x7fce22e8bce0"/>
        <function-ref name="get_modulus" scoped="" ref="0x7fce22e8be70"/>
        <function-ref name="test_key_gen" scoped="" ref="0x7fce22e53030"/>
        <function-ref name="rsa_test_key" scoped="" ref="0x7fce22e531c0"/>
        <function-ref name="decrypt_shared_key" scoped="" ref="0x7fce22e53350"/>
        <function-ref name="checkKey" scoped="" ref="0x7fce22e534e0"/>
        <function-ref name="gen_key" scoped="" ref="0x7fce22e53670"/>
        <function-ref name="RSAtest" scoped="" ref="0x7fce22e53800"/>
        <function-ref name="gen_shared_key" scoped="" ref="0x7fce22e53990"/>
        <function-ref name="print_time" scoped="" ref="0x7fce22e53b20"/>
        <function-ref name="rsa_gen_prime" scoped="" ref="0x7fce22e53cb0"/>
        <function-ref name="rsa_encrypt" scoped="" ref="0x7fce22e53e40"/>
        <function-ref name="gen_val_key" scoped="" ref="0x7fce22e52020"/>
        <function-ref name="rsa_decrypt" scoped="" ref="0x7fce22e522b0"/>
        <function-ref name="get_private" scoped="" ref="0x7fce22e52440"/>
        <function-ref name="rsa_test_prime" scoped="" ref="0x7fce22e525d0"/>
        <function-ref name="get_exponent" scoped="" ref="0x7fce22e52760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSAinterface" ref="0x7fce22e4f2f0" loc="10:RSAP.nc">
      <component-ref qname="RSAP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSAinterface" scoped="" ref="0x7fce22e4f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RSAinterface"/>
      </instance>
      <interface-functions>
        <function-ref name="encrypt_shared_key" scoped="" ref="0x7fce22e4f670"/>
        <function-ref name="get_modulus" scoped="" ref="0x7fce22e4f800"/>
        <function-ref name="test_key_gen" scoped="" ref="0x7fce22e4f990"/>
        <function-ref name="rsa_test_key" scoped="" ref="0x7fce22e4fb20"/>
        <function-ref name="decrypt_shared_key" scoped="" ref="0x7fce22e4fcb0"/>
        <function-ref name="checkKey" scoped="" ref="0x7fce22e4fe40"/>
        <function-ref name="gen_key" scoped="" ref="0x7fce22e4e020"/>
        <function-ref name="RSAtest" scoped="" ref="0x7fce22e4e1b0"/>
        <function-ref name="gen_shared_key" scoped="" ref="0x7fce22e4e340"/>
        <function-ref name="print_time" scoped="" ref="0x7fce22e4e4d0"/>
        <function-ref name="rsa_gen_prime" scoped="" ref="0x7fce22e4e660"/>
        <function-ref name="rsa_encrypt" scoped="" ref="0x7fce22e4e7f0"/>
        <function-ref name="gen_val_key" scoped="" ref="0x7fce22e4e980"/>
        <function-ref name="rsa_decrypt" scoped="" ref="0x7fce22e4ec10"/>
        <function-ref name="get_private" scoped="" ref="0x7fce22e4eda0"/>
        <function-ref name="rsa_test_prime" scoped="" ref="0x7fce22e4d020"/>
        <function-ref name="get_exponent" scoped="" ref="0x7fce22e4d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x7fce22e47a90" loc="14:RSAP.nc">
      <component-ref qname="RSAP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fce22e47a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fce23a71e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7fce23895200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fce22e466f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="primeModule" ref="0x7fce22e4d4b0" loc="12:RSAP.nc">
      <component-ref qname="RSAP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="primeModule" scoped="" ref="0x7fce22e4d4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="primeModule"/>
      </instance>
      <interface-functions>
        <function-ref name="genSharedPrime" scoped="" ref="0x7fce22e4d830"/>
        <function-ref name="isPrime" scoped="" ref="0x7fce22e4d9c0"/>
        <function-ref name="genLargeNum" scoped="" ref="0x7fce22e4db50"/>
        <function-ref name="power" scoped="" ref="0x7fce22e4dce0"/>
        <function-ref name="gcd" scoped="" ref="0x7fce22e4de70"/>
        <function-ref name="genLargePrime" scoped="" ref="0x7fce22e4c030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fce22e4c460" loc="13:RSAP.nc">
      <component-ref qname="RSAP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fce22e4c460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fce23a71e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7fce23895200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fce22e48a20"/>
        <function-ref name="fired" scoped="" ref="0x7fce22e49020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fce22e49da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fce22e49920"/>
        <function-ref name="getdt" scoped="" ref="0x7fce22e474a0"/>
        <function-ref name="gett0" scoped="" ref="0x7fce22e47020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fce22e494a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fce22e4b090"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fce22e48410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fce22e4b560"/>
        <function-ref name="stop" scoped="" ref="0x7fce22e4ba30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fce22db61e0" loc="45:/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="RSAC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fce22db61e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fce23a71e70"/>
            <typename><typedef-ref name="TMilli" ref="0x7fce23895200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fce22db2630"/>
        <function-ref name="fired" scoped="" ref="0x7fce22db4c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fce22db39d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fce22db3550"/>
        <function-ref name="getdt" scoped="" ref="0x7fce22db1020"/>
        <function-ref name="gett0" scoped="" ref="0x7fce22db2ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fce22db30d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fce22db6dd0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fce22db2020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fce22db42e0"/>
        <function-ref name="stop" scoped="" ref="0x7fce22db47b0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/opt/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fce23a70a60" loc="62:/opt/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7fce23a6e690" loc="60:/opt/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7fce23a3fb40" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7fce23a41de0" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7fce23a3f420" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7fce23a41700" loc="42:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7fce23a405a0" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7fce23a45900" loc="40:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7fce23a41020" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7fce23a40cc0" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/opt/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7fce23e56b70" loc="62:/opt/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7fce23ea3c00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7fce239ec020" loc="55:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7fce239edcc0" loc="55:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7fce239f0390" loc="42:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fce23a375a0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fce23a35020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7fce239ec890" loc="57:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7fce239eb7b0" loc="59:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fce23f60090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7fce239ed560" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7fce239eb020" loc="58:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7fce239f0b30" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fce23f60090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7fce239ef350" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7fce239efda0" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fce23a375a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fce23a35020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fce239efb20" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fce23a375a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fce23a35020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7fce239df0e0" loc="44:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7fce239dc630" loc="79:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fce23f60090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7fce239dc3b0" loc="79:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fce23f60090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fce239db2a0" loc="86:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fce239db020" loc="86:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fce239ddbe0" loc="68:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fce239dd3e0" loc="63:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fce23f60090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7fce239dfa90" loc="56:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7fce239df810" loc="56:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7fce239e63e0" loc="40:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7fce239e6d60" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fce239e6ae0" loc="41:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7fce239e4790" loc="42:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7fce239e4510" loc="42:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7fce239e32a0" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7fce239e3020" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fce239e3990" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fce239f6810" loc="52:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7fce239f32a0" loc="55:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7fce239f3020" loc="55:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7fce239f4020" loc="53:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fce239fcab0" loc="45:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7fce239f4760" loc="54:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fce239f89b0" loc="47:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fce239f6120" loc="51:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fce239f8270" loc="46:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fce23f60090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fce239f70e0" loc="48:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7fce239f79f0" loc="50:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fce239f7770" loc="50:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7fce239f3cb0" loc="56:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7fce239f3a30" loc="56:/opt/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fce239b51f0" loc="39:/opt/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7fce23b012b0" loc="76:/opt/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7fce23d1a420" loc="52:/opt/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fce23f5c020" loc="57:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7fce23f5b020" loc="72:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7fce23f5c790" loc="65:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fce23f60090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7fce23f50020" loc="67:/opt/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7fce23f50870" loc="75:/opt/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fce238835f0" loc="53:/opt/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fce238835f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fce2387a020" loc="61:/opt/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RSAinterface" loc="2:RSAinterface.nc">
      <function command="" provided="0" name="encrypt_shared_key" ref="0x7fce2386b130" loc="37:RSAinterface.nc">
        <interfacedef-ref qname="RSAinterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
            </type-int>
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7fce248bc930"/></typename>
            </type-int>
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7fce248bc930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x7fce2386c790" loc="37:RSAinterface.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
            </type-int>
          </variable>
          <variable name="exponent" ref="0x7fce2386cb00" loc="37:RSAinterface.nc">
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7fce248bc930"/></typename>
            </type-int>
          </variable>
          <variable name="modulus" ref="0x7fce2386ce60" loc="37:RSAinterface.nc">
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7fce248bc930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get_modulus" ref="0x7fce23870350" loc="23:RSAinterface.nc">
        <interfacedef-ref qname="RSAinterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long" size="I:4" alignment="I:2">
            <typename><typedef-ref name="int32_t" ref="0x7fce248bc930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test_key_gen" ref="0x7fce23872ba0" loc="21:RSAinterface.nc">
        <interfacedef-ref qname="RSAinterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rsa_test_key" ref="0x7fce23876020" loc="9:RSAinterface.nc">
        <interfacedef-ref qname="RSAinterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="decrypt_shared_key" ref="0x7fce2386bb20" loc="39:RSAinterface.nc">
        <interfacedef-ref qname="RSAinterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x7fce2386b8a0" loc="39:RSAinterface.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkKey" ref="0x7fce2386f8f0" loc="29:RSAinterface.nc">
        <interfacedef-ref qname="RSAinterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fce23f60090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gen_key" ref="0x7fce238724b0" loc="19:RSAinterface.nc">
        <interfacedef-ref qname="RSAinterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="RSAtest" ref="0x7fce23877830" loc="5:RSAinterface.nc">
        <interfacedef-ref qname="RSAinterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fce23f60090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gen_shared_key" ref="0x7fce2386c020" loc="35:RSAinterface.nc">
        <interfacedef-ref qname="RSAinterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="print_time" ref="0x7fce2386e800" loc="33:RSAinterface.nc">
        <interfacedef-ref qname="RSAinterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rsa_gen_prime" ref="0x7fce23873dd0" loc="17:RSAinterface.nc">
        <interfacedef-ref qname="RSAinterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rsa_encrypt" ref="0x7fce23876e60" loc="11:RSAinterface.nc">
        <interfacedef-ref qname="RSAinterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-qualified const="">
                <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="message" ref="0x7fce238767b0" loc="11:RSAinterface.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="message_size" ref="0x7fce23876b90" loc="11:RSAinterface.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="gen_val_key" ref="0x7fce2386e020" loc="31:RSAinterface.nc">
        <interfacedef-ref qname="RSAinterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rsa_decrypt" ref="0x7fce23874cd0" loc="13:RSAinterface.nc">
        <interfacedef-ref qname="RSAinterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
                <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2"></type-int>
              </type-qualified>
            </type-pointer>
            <type-qualified const="">
                <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="message" ref="0x7fce23874620" loc="13:RSAinterface.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
                <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="message_size" ref="0x7fce23874a00" loc="13:RSAinterface.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get_private" ref="0x7fce2386f1f0" loc="27:RSAinterface.nc">
        <interfacedef-ref qname="RSAinterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long" size="I:4" alignment="I:2">
            <typename><typedef-ref name="int32_t" ref="0x7fce248bc930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rsa_test_prime" ref="0x7fce23873670" loc="15:RSAinterface.nc">
        <interfacedef-ref qname="RSAinterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x7fce238733f0" loc="15:RSAinterface.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get_exponent" ref="0x7fce23870a90" loc="25:RSAinterface.nc">
        <interfacedef-ref qname="RSAinterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long" size="I:4" alignment="I:2">
            <typename><typedef-ref name="int32_t" ref="0x7fce248bc930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="primeModule" loc="1:primeModule.nc">
      <function command="" provided="0" name="genSharedPrime" ref="0x7fce2387ec10" loc="7:primeModule.nc">
        <interfacedef-ref qname="primeModule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isPrime" ref="0x7fce2387f5d0" loc="4:primeModule.nc">
        <interfacedef-ref qname="primeModule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fce23f60090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
            </type-int>
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7fce248bc930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7fce2387f020" loc="4:primeModule.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
            </type-int>
          </variable>
          <variable name="k" ref="0x7fce2387f340" loc="4:primeModule.nc">
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7fce248bc930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="genLargeNum" ref="0x7fce2387fd10" loc="5:primeModule.nc">
        <interfacedef-ref qname="primeModule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="power" ref="0x7fce23882b20" loc="2:primeModule.nc">
        <interfacedef-ref qname="primeModule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long" size="I:4" alignment="I:2">
            <typename><typedef-ref name="int32_t" ref="0x7fce248bc930"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7fce248bc930"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
            </type-int>
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7fce248bc930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x7fce23882230" loc="2:primeModule.nc">
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7fce248bc930"/></typename>
            </type-int>
          </variable>
          <variable name="n" ref="0x7fce23882560" loc="2:primeModule.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
            </type-int>
          </variable>
          <variable name="p" ref="0x7fce23882880" loc="2:primeModule.nc">
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7fce248bc930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="gcd" ref="0x7fce238817e0" loc="3:primeModule.nc">
        <interfacedef-ref qname="primeModule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long" size="I:4" alignment="I:2">
            <typename><typedef-ref name="int32_t" ref="0x7fce248bc930"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7fce248bc930"/></typename>
            </type-int>
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7fce248bc930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x7fce23881230" loc="3:primeModule.nc">
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7fce248bc930"/></typename>
            </type-int>
          </variable>
          <variable name="b" ref="0x7fce23881550" loc="3:primeModule.nc">
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7fce248bc930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="genLargePrime" ref="0x7fce2387e4b0" loc="6:primeModule.nc">
        <interfacedef-ref qname="primeModule"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fce23891390" loc="53:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fce23891390"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fce238891f0" loc="136:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fce2388ea60" loc="83:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7fce2388c820" loc="114:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fce2388c250" loc="114:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fce2388c590" loc="114:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7fce2388da60" loc="98:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fce23f60090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7fce23888270" loc="151:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7fce23889980" loc="144:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fce2388d270" loc="92:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fce23f60090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7fce2388f020" loc="64:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fce23891c80" loc="64:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7fce2388a820" loc="129:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fce2388a250" loc="129:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fce2388a590" loc="129:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7fce2388fae0" loc="73:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fce2388f860" loc="73:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fce248bb920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fce2388e350" loc="78:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fce2382f770" loc="56:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fce2382f770"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fce2382f9b0" loc="56:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fce2382f9b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fce23829800" loc="109:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fce2382f9b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fce2382b630" loc="78:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7fce2382ac60" loc="103:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fce2382f9b0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fce2382f9b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fce2382a690" loc="103:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fce2382f9b0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7fce2382a9d0" loc="103:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fce2382f9b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fce2382be10" loc="88:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fce23f60090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7fce23827020" loc="116:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fce2382f9b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fce2382c5b0" loc="66:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fce2382f9b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fce2382c330" loc="66:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fce2382f9b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fce2382cde0" loc="73:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fce237bc100" loc="57:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fce237bc100"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fce237bc340" loc="57:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fce237bc340"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fce237bcc60" loc="64:/opt/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fce237bc340"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fce237bbd70" loc="76:/opt/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fce237bb510" loc="71:/opt/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fce23f60090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fce237b9500" loc="82:/opt/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fce23692e60" loc="80:/opt/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fce23a869d0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fce23692510" loc="80:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fce23a869d0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fce23692890" loc="80:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fce23692bc0" loc="80:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fce2368d620" loc="135:/opt/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fce2368d020" loc="135:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fce2368d350" loc="135:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fce2368c6d0" loc="123:/opt/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fce236902a0" loc="96:/opt/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fce23690020" loc="96:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fce2368e7f0" loc="110:/opt/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fce2368e210" loc="110:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fce2368e560" loc="110:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fce23688020" loc="65:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fce23694c60" loc="65:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7fce23687110" loc="78:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fce23688e10" loc="78:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fce23683490" loc="126:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fce23684e50" loc="126:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fce236831c0" loc="126:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fce23684560" loc="106:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7fce236855e0" loc="94:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fce23685020" loc="94:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fce23685350" loc="94:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7fce23673d30" loc="177:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fce23a865f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fce23673ab0" loc="177:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7fce2367da10" loc="88:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fce23a869d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fce2367d790" loc="88:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7fce23693e50" loc="68:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fce23a869d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7fce2367f950" loc="78:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fce23a869d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fce2367f6d0" loc="78:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7fce2367a3a0" loc="121:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fce23a869d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fce2367ed70" loc="121:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fce2367a110" loc="121:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fce23a869d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7fce2367be50" loc="103:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fce23a869d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fce2367b870" loc="103:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fce2367bbc0" loc="103:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fce23a869d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7fce23677810" loc="147:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fce23a86210"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fce23677590" loc="147:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7fce23675b90" loc="162:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fce23a86210"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fce236755e0" loc="162:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7fce23675900" loc="162:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fce23a86210"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7fce23678600" loc="136:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fce23f60090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fce23678380" loc="136:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7fce236722f0" loc="187:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fce23a865f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fce23676cf0" loc="187:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7fce23672060" loc="187:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fce23a865f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7fce23670190" loc="195:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fce23a865f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7fce2366ead0" loc="59:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fce2366e850" loc="59:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7fce2366ccd0" loc="71:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fce2366ca50" loc="71:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7fce2366a020" loc="85:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fce23f60090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fce2366bce0" loc="85:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fce236645e0" loc="75:/opt/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fce23664020" loc="75:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fce23664350" loc="75:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fce2365fbb0" loc="125:/opt/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fce2365f5b0" loc="125:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fce2365f8e0" loc="125:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fce23662d20" loc="112:/opt/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fce23661900" loc="89:/opt/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fce23661680" loc="89:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fce23660e00" loc="100:/opt/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fce23660820" loc="100:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fce23660b70" loc="100:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7fce235f3ab0" loc="113:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fce235f3830" loc="113:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7fce235f0020" loc="138:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fce235f2d30" loc="138:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fce235f6d60" loc="104:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fce235f2350" loc="130:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fce235ed410" loc="78:/opt/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
              <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fce235f4a90" loc="78:/opt/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7fce235f4de0" loc="78:/opt/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fce235ed130" loc="78:/opt/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7fce235e2270" loc="61:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7fce235e2a20" loc="67:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7fce235e1270" loc="72:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7fce235df1f0" loc="83:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7fce235de940" loc="100:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fce235dd190" loc="117:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7fce235e1a00" loc="77:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fce235ddd00" loc="134:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fce235dda80" loc="134:/opt/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7fce235e3a60" loc="56:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7fce235df9d0" loc="89:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7fce235de190" loc="94:/opt/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7fce23574020" loc="31:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fce23575960" loc="31:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7fce23575ce0" loc="31:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7fce23576020" loc="15:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7fce23575020" loc="23:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fce235768b0" loc="23:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fce23a773c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fce23a76a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7fce23576c20" loc="23:/opt/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fce23558760" loc="95:/opt/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fce23557020" loc="105:/opt/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/opt/tinyos-main/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/opt/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7fce23556e10" loc="54:/opt/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/opt/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7fce235566a0" loc="49:/opt/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/opt/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7fce23560770" loc="56:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7fce2355fbe0" loc="72:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7fce2355c840" loc="94:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fce2355c5c0" loc="94:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7fce2355e4a0" loc="79:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7fce2355f350" loc="65:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fce2355f0d0" loc="65:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7fce2355b0e0" loc="100:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7fce2355ed50" loc="85:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/opt/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7fce235670e0" loc="71:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7fce23567a10" loc="81:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7fce23568720" loc="62:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7fce235684a0" loc="62:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7fce235665c0" loc="91:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fce23566340" loc="91:/opt/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7fce23564270" loc="62:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7fce23562020" loc="69:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fce23564c10" loc="69:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7fce23562af0" loc="80:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fce23562870" loc="80:/opt/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fce2342dc40" loc="48:/opt/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fce2342d670" loc="48:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fce2342d9b0" loc="48:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7fce23428a70" loc="79:/opt/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fce234287f0" loc="79:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7fce23427890" loc="90:/opt/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fce234272c0" loc="90:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fce23427600" loc="90:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7fce23429610" loc="65:/opt/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7fce234262c0" loc="99:/opt/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fce23424820" loc="99:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fce23424b60" loc="99:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fce23426020" loc="99:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7fce23428020" loc="72:/opt/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fce2342c610" loc="57:/opt/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fce2342bbd0" loc="57:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fce2342c020" loc="57:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fce2342c370" loc="57:/opt/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fce234055b0" loc="46:/opt/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fce23405330" loc="46:/opt/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7fce23404430" loc="56:/opt/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fce23405e20" loc="56:/opt/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7fce234041a0" loc="56:/opt/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7fce233b1af0" loc="53:/opt/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fce233aa4e0" loc="61:/opt/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:/opt/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7fce233a6610" loc="39:/opt/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fce233d0e70"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fce233cf2b0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fce233ae350" loc="120:/opt/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7fce233af350" loc="97:/opt/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7fce233b2980" loc="88:/opt/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fce233afb40" loc="102:/opt/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fce233aedb0" loc="128:/opt/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fce23f60090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7fce2339fb70" loc="65:/opt/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7fce2339f350" loc="59:/opt/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:/opt/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7fce23397680" loc="54:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fce23397400" loc="54:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7fce2339ac00" loc="49:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:/opt/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7fce23372af0" loc="213:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fce23f60090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7fce2337d790" loc="143:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7fce2338a530" loc="50:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fce233ffd80"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7fce233fe650"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fce2338a2b0" loc="50:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fce233ffd80"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7fce233fe650"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7fce23380870" loc="123:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7fce23387a40" loc="70:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fce233fad60"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7fce233f9650"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fce233877c0" loc="70:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fce233fad60"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7fce233f9650"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7fce23377e70" loc="180:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7fce23373480" loc="197:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7fce23387020" loc="65:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fce233fdc80"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7fce233fb440"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7fce23386270" loc="75:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fce233fad60"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7fce233f9650"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7fce23382020" loc="97:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fce23f60090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7fce23384d30" loc="97:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fce23f60090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7fce23384610" loc="95:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7fce23377740" loc="179:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7fce23389780" loc="60:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fce233fdc80"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7fce233fb440"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fce23389500" loc="60:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fce233fdc80"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7fce233fb440"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7fce23385420" loc="85:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7fce233765d0" loc="181:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7fce23385e00" loc="90:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7fce23385b80" loc="90:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7fce23381910" loc="113:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fce23f60090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7fce233800e0" loc="118:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fce23f60090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7fce23378840" loc="177:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7fce2337b790" loc="163:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fce23f60090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7fce2337e7e0" loc="133:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7fce23377020" loc="178:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7fce2337c020" loc="148:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7fce23376cf0" loc="182:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fce23382800" loc="103:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fce23407d10"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7fce23400460"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7fce233744c0" loc="187:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fce23f60090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7fce23372350" loc="207:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7fce23386c10" loc="80:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7fce23386990" loc="80:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fce248bb520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7fce233714d0" loc="224:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fce23371250" loc="224:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7fce2338ad10" loc="55:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fce233ffd80"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7fce233fe650"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7fce2337e020" loc="128:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7fce2337c770" loc="153:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7fce23378020" loc="174:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fce233d0e70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fce233cf2b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fce23379cf0" loc="174:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fce233d0e70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fce233cf2b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7fce233792a0" loc="168:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fce233e1020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fce233e1440"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fce23379020" loc="168:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fce233e1020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fce233e1440"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7fce23371d90" loc="231:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7fce23374cb0" loc="192:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fce23f60090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7fce23381070" loc="108:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fce23f60090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7fce23373be0" loc="202:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7fce2337b020" loc="158:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7fce2337d020" loc="138:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fce232ff390" loc="95:/opt/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fce232ffbe0" loc="105:/opt/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fce232ec7c0" loc="78:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fce232ea020" loc="80:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fce23f60090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7fce232e7b10" loc="110:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fce232e7890" loc="110:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fce232ed020" loc="58:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fce232e9020" loc="87:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fce23f60090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7fce232e5490" loc="117:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fce232ea760" loc="85:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fce232ec020" loc="73:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fce23f60090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7fce232e8770" loc="99:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7fce232ed7c0" loc="66:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fce232ee0e0" loc="48:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7fce232e97a0" loc="92:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7fce232e7020" loc="101:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fce23f60090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7fce232e8020" loc="94:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fce23f60090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fce232ee810" loc="53:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/opt/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fce23044270" loc="44:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fce230449a0" loc="45:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fce23f60090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fce23045420" loc="42:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fce23042820" loc="47:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fce23f60090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fce23045b20" loc="43:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fce23f60090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fce230420e0" loc="46:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fce23046610" loc="40:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fce23046ce0" loc="41:/opt/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7fce22fea460" loc="90:/opt/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fce23f60090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7fce22feacc0" loc="98:/opt/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fce22fd6a40" loc="39:/opt/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fce22fbbe00" loc="56:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7fce22fb8020" loc="73:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fce22fbb570" loc="46:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fce22fb96d0" loc="65:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fce23f60090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fce22fb8950" loc="81:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7fce22fad020" loc="79:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fce22fb4090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fce22faed20" loc="79:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fce22fb4090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7fce22faf020" loc="53:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fce23f60090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7fce22fafb20" loc="62:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fce23f60090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fce22fb4090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fce22faf8a0" loc="62:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fce22fb4090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7fce22fae470" loc="70:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7fce22fb4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/opt/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/opt/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7fce22f41770" loc="62:/opt/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/opt/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/opt/tinyos-main/tos/interfaces/Queue.nc">
      <documentation loc="33:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7fce22ede9a0" loc="43:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fce22ede9a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7fce22ed8120" loc="80:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="74:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fce22ede9a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7fce22ed6b70" loc="97:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="90:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fce23f57980"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fce22ede9a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7fce22ed68f0" loc="97:/opt/tinyos-main/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fce22ede9a0"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x7fce248c1c30"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:2"><attribute-ref name="one" ref="0x7fce248c1c30"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7fce22ed4b30" loc="108:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="99:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fce22ede9a0"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fce22ed48b0" loc="108:/opt/tinyos-main/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x7fce22edb9e0" loc="57:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="52:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fce23f60090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7fce22ed9990" loc="72:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="67:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7fce22ed8d00" loc="88:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="82:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fce22ede9a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7fce22edb270" loc="50:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="45:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fce23f60090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7fce22ed9190" loc="65:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="59:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fce248bb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/opt/tinyos-main/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/opt/tinyos-main/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x7fce22eb4dd0" loc="49:/opt/tinyos-main/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/opt/tinyos-main/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x7fce22eb4b50" loc="49:/opt/tinyos-main/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
